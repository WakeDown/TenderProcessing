@using System.Web.Script.Serialization
@using TenderProcessingDataAccessLayer.Models

@{
    ViewBag.Title = "Список заявок";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var serializer = new JavaScriptSerializer();
    var dealTypes = (List<DealType>)ViewBag.DealTypes;
    var claimStatus = (List<ClaimStatus>)ViewBag.ClaimStatus;
    var claims = (List<TenderClaim>)ViewBag.Claims;
    var managers = (List<Manager>)ViewBag.Managers;
    var productManagers = (List<ProductManager>)ViewBag.ProductManagers;
    var claimCount = (int)ViewBag.ClaimCount;
}
<link href="~/Content/bootstrap-datepicker3.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-datepicker.js"></script>
<script type="text/javascript">
    var dealTypes = @Html.Raw(serializer.Serialize(dealTypes));
    var claimStatus = @Html.Raw(serializer.Serialize(claimStatus));
    var claims = @Html.Raw(serializer.Serialize(claims));
    var managers = @Html.Raw(serializer.Serialize(managers));
    var productManagers = @Html.Raw(serializer.Serialize(productManagers));

    $(init);

    function init() {
        messageUi.initProgressImage();
        initClaimsElements(claims);
        initFilterClaimStatusList();
        initFilterManagersList();
        initFilterProductManagersList();
        initFilterManagerSubDivisionsList();
        $("#filterTenderStartFrom").datepicker({
            format: "dd.mm.yyyy",
            autoclose: true,
            todayBtn: "linked"
        });
        $("#filterTenderStartTo").datepicker({
            format: "dd.mm.yyyy",
            autoclose: true,
            todayBtn: "linked"
        });
        $("#filterTenderStartFrom").add("#filterTenderStartTo").change(function(e) {
            var datepicker = $(e.currentTarget);
            var dt = datepicker.datepicker("getDate");
            var dateString = getDateString(dt);
            datepicker.val(dateString);
        });
        $("#clearDates").click(function() {
            $("#filterTenderStartFrom").val("");
            $("#filterTenderStartTo").val("");
        });
        $("#acceptFilter").click(filter);
        $("#clearFilter").click(clearFilter);
        $("#showCountLabel").text(claims.length);
    }

    function filter(e) {
        var obj = getFilterObj();
        if (!obj.isValid) {
            messageUi.show(obj.message);
            return;
        }
        $.ajax({
            url: "/Claim/FilterClaim",
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify(obj.model),
            processData: false,
            contentType: 'application/json; charset = utf-8 ',
            success: function(data) {
                if (data.IsComplete) {
                    claims = data.Claims;
                    initClaimsElements(claims);
                    $("#claimCountLabel").text(data.Count);
                    $("#showCountLabel").text(claims.length);
                } else {
                    messageUi.show("Ошибка при фильтрации заявок", true, null, 1700);
                }
            }
        });
    }

    function clearFilter(e) {
        $("#filterRowCount").val("");
        $("#filterIdClaim").val("");
        $("#filterTenderNumber").val("");
        $("#filterTenderStartFrom").val("");
        $("#filterTenderStartTo").val("");
        $("#filterClaimOverdueNot").get(0).checked = true;
        $(":first", $("#filterManagers")).attr("selected", "selected");
        $(":first", $("#filterClaimStatus")).attr("selected", "selected");
        $(":first", $("#filterManagerSubDivisions")).attr("selected", "selected");
        $(":first", $("#filterProductManagers")).attr("selected", "selected");
        $.ajax({
            url: "/Claim/FilterClaim",
            type: 'POST',
            dataType: 'json',
            data: JSON.stringify({}),
            processData: false,
            contentType: 'application/json; charset = utf-8 ',
            success: function(data) {
                if (data.IsComplete) {
                    claims = data.Claims;
                    initClaimsElements(claims);
                    $("#claimCountLabel").text(data.Count);
                    $("#showCountLabel").text(claims.length);
                } else {
                    messageUi.show("Ошибка при фильтрации заявок", true, null, 1700);
                }
            }
        });
    }

    function getFilterObj() {
        var obj = { isValid: true, message: "", model: null };
        var model = {};
        var message = "";
        var rowCount = $("#filterRowCount").val().trim();
        if (rowCount != "") {
            if (!isNaN(rowCount)) {
                if (rowCount.indexOf(".") == -1) {
                    rowCount = Number(rowCount);
                    if (rowCount < 0) {
                        obj.isValid = false;
                        obj.message = "Количество строк не может быть отрицательным";
                    }
                    if (rowCount > 0) {
                        model.RowCount = rowCount;
                    }
                } else {
                    obj.isValid = false;
                    obj.message = "Значение '" + rowCount + "' в поле Количество строк не является целым числом";
                }
            } else {
                obj.isValid = false;
                obj.message = "Значение '" + rowCount + "' в поле Количество строк не является целым числом";
            }
        }
        var claimId = $("#filterIdClaim").val().trim();
        if (claimId != "") {
            if (!isNaN(claimId)) {
                if (claimId.indexOf(".") == -1) {
                    claimId = Number(claimId);
                    if (claimId < 0) {
                        message = "№ Заявки не может быть отрицательным";
                        if (obj.message.trim() != "") {
                            message = "<br/>" + message;
                        }
                        obj.isValid = false;
                        obj.message = message;
                    }
                    if (claimId > 0) {
                        model.IdClaim = claimId;
                    }
                } else {
                    message = "Значение '" + claimId + "' в поле № Заявки не является целым числом";
                    if (obj.message.trim() != "") {
                        message = "<br/>" + message;
                    }
                    obj.isValid = false;
                    obj.message = message;
                }
            } else {
                message = "Значение '" + claimId + "' в поле № Заявки не является целым числом";
                if (obj.message.trim() != "") {
                    message = "<br/>" + message;
                }
                obj.isValid = false;
                obj.message = message;
            }
        }
        var tenderNumber = $("#filterTenderNumber").val().trim();
        if (tenderNumber != "") {
            model.TenderNumber = tenderNumber;
        }
        var status = Number($(":selected", $("#filterClaimStatus")).val());
        if (status != -1) {
            model.ClaimStatus = status;
        }
        var manager = $(":selected", $("#filterManagers")).val().trim();
        if (manager != "-1") {
            model.IdManager = manager;
        }
        var productManager = $(":selected", $("#filterProductManagers")).val().trim();
        if (productManager != -1) {
            model.IdProductManager = productManager;
        }
        var managerSubDivision = $(":selected", $("#filterManagerSubDivisions")).val().trim();
        if (managerSubDivision != -1) {
            model.ManagerSubDivision = managerSubDivision;
        }
        var tenderStartFrom = $("#filterTenderStartFrom").val().trim();
        if (tenderStartFrom != "") {
            model.TenderStartFrom = tenderStartFrom;
        }
        var tenderStartTo = $("#filterTenderStartTo").val().trim();
        if (tenderStartTo != "") {
            model.TenderStartTo = tenderStartTo;
        }
        if (tenderStartFrom != "" && tenderStartTo != "") {
            var dateFrom = $("#filterTenderStartFrom").datepicker("getDate").getTime();
            var dateTo = $("#filterTenderStartTo").datepicker("getDate").getTime();
            if (dateTo < dateFrom) {
                message = "Дата 'срок сдачи с' должна быть не позже даты 'срок сдачи по'";
                if (obj.message.trim() != "") {
                    message = "<br/>" + message;
                }
                obj.isValid = false;
                obj.message = message;
            }
        }
        var overdie = null;
        if ($("#filterClaimOverdueYes").get(0).checked) {
            overdie = true;
        }
        if ($("#filterClaimOverdueNo").get(0).checked) {
            overdie = false;
        }
        if (overdie != null) {
            model.Overdie = overdie;
        }
        if (obj.isValid) {
            obj.model = model;
        }
        return obj;
    }

    function initFilterClaimStatusList() {
        var statusLength = claimStatus.length;
        var list = $("#filterClaimStatus");
        var option = $("<option value='-1'>---Все---</option>");
        list.append(option);
        for (var i = 0; i < statusLength; i++) {
            var status = claimStatus[i];
            option = $("<option value='" + status.Id + "'>" + status.Value + "</option>");
            list.append(option);
        }
    }

    function initFilterManagersList() {
        var managersLength = managers.length;
        var list = $("#filterManagers");
        var option = $("<option value='-1'>---Все---</option>");
        list.append(option);
        for (var i = 0; i < managersLength; i++) {
            var manager = managers[i];
            option = $("<option value='" + manager.Id + "'>" + manager.Name + "</option>");
            list.append(option);
        }
    }

    function initFilterProductManagersList() {
        var managersLength = productManagers.length;
        var list = $("#filterProductManagers");
        var option = $("<option value='-1'>---Все---</option>");
        list.append(option);
        for (var i = 0; i < managersLength; i++) {
            var manager = productManagers[i];
            option = $("<option value='" + manager.Id + "'>" + manager.Name + "</option>");
            list.append(option);
        }
    }

    function initFilterManagerSubDivisionsList() {
        var managersLength = managers.length;
        var list = $("#filterManagerSubDivisions");
        var option = $("<option value='-1'>---Все---</option>");
        list.append(option);
        for (var i = 0; i < managersLength; i++) {
            var manager = managers[i];
            option = $("<option value='" + manager.SubDivision + "'>" + manager.SubDivision + "</option>");
            list.append(option);
        }
    }

    function initClaimsElements(list) {
        var container = $("#claimTable");
        container.empty();
        if (list == null) return;
        var listLength = list.length;
        for (var i = 0; i < listLength; i++) {
            var claim = list[i];
            var element = getClaimElement(claim);
            container.append(element);
        }
    }

    function getClaimElement(claim) {
        var element = $("<tr claimId='" + claim.Id + "'></tr>");
        var editCell = $("<td class='min-width text-nowrap'></td>");
        element.append(editCell);
        var editButton = $("<a href='/Claim/Index?claimId=" + claim.Id  + "' class='btn btn-link btn-lg' data-toggle='tooltip' title='изменить'><i class='fa fa-edit'></i></a>");
        editCell.append(editButton);
        editCell.append("<a href='/Calc/Index?claimId=" + claim.Id  + "' class='btn btn-link btn-lg' data-toggle='tooltip' title='рассчитать'><i class='fa fa-calculator'></i></a>");
        element.append("<th><span>" + claim.Id + "</span></th>");
        element.append("<td><span>" + claim.TenderNumber + "</span></td>");
        element.append("<td><span>" + claim.Customer + "</span></td>");
        var sum = "";
        if (claim.Sum > 0) {
            sum = claim.Sum.toFixed(0);
        }
        element.append("<td><span>" + sum + "</span></td>");
        element.append("<td><span>" + claim.Manager.Name + "</span></td>");
        element.append("<td><span>" + getProductManagersString(claim.ProductManagers) + "</span></td>");
        element.append("<td><span>" + getDealTypeById(claim.DealType).Value + "</span></td>");
        element.append("<td><span>" + getClaimStatusById(claim.ClaimStatus).Value + "</span></td>");
        var actionCell = $("<td class='min-width'></td>");
        element.append(actionCell);
        var deleteButton = $("<button type='button' class='btn btn-link btn-lg' data-toggle='tooltip' title='удалить'><i class='fa fa-trash'></i></button>");
        deleteButton.click(deleteButtonClick);
        actionCell.append(deleteButton);
        return element;
    }

    function deleteButtonClick(e) {
        var button = $(e.currentTarget);
        var row = button.parent().parent();
        var initalBackGround = row.css("background-color");
        row.css("background-color", "#EAA4A4");
        var deleteConfirm = confirm("Удалить выделенную заявку?");
        row.css("backgroundColor", initalBackGround);
        if (deleteConfirm) {
            var id = row.attr("claimId");
            $.ajax({
                url: "/Claim/DeleteClaim?id=" + id,
                type: 'GET',
                contentType: 'application/json; charset = utf-8 ',
                success: function(data) {
                    if (data.IsComplete) {
                        row.remove();
                    } else {
                        messageUi.show("Запись не удалена", true, null, 1700);
                    }
                }
            });
        }
    }

    function getProductManagersString(managers) {
        var result = "";
        if (managers == null) return result;
        var managersLength = managers.length;
        for (var i = 0; i < managersLength; i++) {
            var manager = managers[i];
            result += manager.Name + "<br/>";
        }
        if (result.length > 4) {
            result = result.substr(0, result.length - 5);
        }
        return result;
    }

    function getDealTypeById(id) {
        id = Number(id);
        var dealType = null;
        var dealTypesLength = dealTypes.length;
        for (var i = 0; i < dealTypesLength; i++) {
            var model = dealTypes[i];
            if (model.Id == id) {
                dealType = model;
                break;
            }
        }
        return dealType;
    }

    function getClaimStatusById(id) {
        id = Number(id);
        var status = null;
        var statusLength = claimStatus.length;
        for (var i = 0; i < statusLength; i++) {
            var model = claimStatus[i];
            if (model.Id == id) {
                status = model;
                break;
            }
        }
        return status;
    }
</script>

<div>
    <div class="panel-group" id="accordion" runat="server">
        <div class="panel panel-default" id="filter">
            <div id="filterPanel" class="panel-collapse collapse">
                <div class="panel-body">
                    <div class="form-horizontal val-form" role="form">
                        <div class="form-group">
                            <label class="col-sm-2 control-label">ID</label>
                            <div class="col-sm-10">
                                <input type="text" id="filterIdClaim" class="form-control input-sm" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">№ конкурса</label>
                            <div class="col-sm-10">
                                <input type="text" id="filterTenderNumber" class="form-control input-sm" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Статус заявки</label>
                            <div class="col-sm-10">
                                <select size="1" id="filterClaimStatus" class="form-control input-sm"></select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Просрочено</label>
                            <div class="col-sm-10">
                                <div class="input-sm">
                                    <input type="radio" name="filterClaimOverdue" id="filterClaimOverdueNot" value="not" checked> все
                                    <input type="radio" name="filterClaimOverdue" id="filterClaimOverdueYes" value="yes"> да
                                    <input type="radio" name="filterClaimOverdue" id="filterClaimOverdueNo" value="no"> нет
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Менеджер</label>
                            <div class="col-sm-10">
                                <select size="1" id="filterManagers" class="form-control input-sm"></select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Снабженец</label>
                            <div class="col-sm-10">
                                <select size="1" id="filterProductManagers" class="form-control input-sm"></select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Подразделение</label>
                            <div class="col-sm-10">
                                <select size="1" id="filterManagerSubDivisions" class="form-control input-sm"></select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Срок сдачи</label>
                            <div class="col-sm-2">
                                <input type="text" id="filterTenderStartFrom" style="cursor: pointer;" class="form-control datepicker-btn input-sm" />
                            </div>
                            <div class="col-sm-2">
                                <input type="text" id="filterTenderStartTo" style="cursor: pointer;" class="form-control datepicker-btn input-sm" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Показать записей</label>
                            <div class="col-sm-10">
                                <input type="text" id="filterRowCount" class="form-control input-sm" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                <button type="button" id="acceptFilter" class="btn btn-primary"><i class="fa fa-search"></i>&nbsp;найти</button>
                                <button type="button" id="clearFilter" class="btn btn-default"><i class="fa fa-repeat"></i>&nbsp;очистить</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="filterHead" class="panel-heading">
                <div class="panel-title collapsed" data-toggle="collapse" data-target="#filterPanel">
                    <a class="title"><i class="fa fa-filter"></i></a>
                </div>
            </div>
        </div>
        <h5>
            <span class="label label-default">
                Всего записей:
                <span id="claimCountLabel">@claimCount</span>
            </span>
            &nbsp;
            <span class="label label-success">
                из них показано:
                <span id="showCountLabel"></span>
            </span>
        </h5>
        <table class="table table-striped small">
            <thead>
            <tr>
                <th class="min-width text-nowrap"></th>
                <th>ID</th>
                <th>№ Конкурса</th>
                <th>Контрагент</th>
                <th>Сумма</th>
                <th>Менеджер</th>
                <th>Снабженцы</th>
                <th>Тип сделки</th>
                <th>Статус</th>
                <th></th>
            </tr>
            </thead>
            <tbody id="claimTable">
            
            </tbody>
        </table>
    </div>
</div>

