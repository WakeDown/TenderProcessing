<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ClosedXML.Fakes</name>
    </assembly>
    <members>
        <member name="T:ClosedXML.Excel.CalcEngine.Fakes.StubIValueObject">
            <summary>Тип заглушки ClosedXML.Excel.CalcEngine.IValueObject</summary>
        </member>
        <member name="M:ClosedXML.Excel.CalcEngine.Fakes.StubIValueObject.#ctor">
            <summary>Инициализирует новый экземпляр type StubIValueObject</summary>
        </member>
        <member name="M:ClosedXML.Excel.CalcEngine.Fakes.StubIValueObject.cxml::ClosedXML#Excel#CalcEngine#IValueObject#GetValue">
            <summary>Задает заглушка IValueObject.GetValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.CalcEngine.Fakes.StubIValueObject.GetValue">
            <summary>Задает stub IValueObject.GetValue()</summary>
        </member>
        <member name="T:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.CalcEngine.Functions.XLMath</summary>
        </member>
        <member name="M:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.ACoshDouble">
            <summary>Задает оболочка совместимости XLMath.ACosh(Double x)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.ACothDouble">
            <summary>Задает оболочка совместимости XLMath.ACoth(Double x)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.ACschDouble">
            <summary>Задает оболочка совместимости XLMath.ACsch(Double x)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.ASechDouble">
            <summary>Задает оболочка совместимости XLMath.ASech(Double x)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.ASinhDouble">
            <summary>Задает оболочка совместимости XLMath.ASinh(Double x)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.ATanhDouble">
            <summary>Задает оболочка совместимости XLMath.ATanh(Double x)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.CombinInt32Int32">
            <summary>Задает оболочка совместимости XLMath.Combin(Int32 n, Int32 k)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.CothDouble">
            <summary>Задает оболочка совместимости XLMath.Coth(Double x)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.CschDouble">
            <summary>Задает оболочка совместимости XLMath.Csch(Double x)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.DegreesToGradsDouble">
            <summary>Задает оболочка совместимости XLMath.DegreesToGrads(Double degrees)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.DegreesToRadiansDouble">
            <summary>Задает оболочка совместимости XLMath.DegreesToRadians(Double degrees)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.GradsToDegreesDouble">
            <summary>Задает оболочка совместимости XLMath.GradsToDegrees(Double grads)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.GradsToRadiansDouble">
            <summary>Задает оболочка совместимости XLMath.GradsToRadians(Double grads)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.IsEvenInt32">
            <summary>Задает оболочка совместимости XLMath.IsEven(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.IsOddInt32">
            <summary>Задает оболочка совместимости XLMath.IsOdd(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.RadiansToDegreesDouble">
            <summary>Задает оболочка совместимости XLMath.RadiansToDegrees(Double radians)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.RadiansToGradsDouble">
            <summary>Задает оболочка совместимости XLMath.RadiansToGrads(Double radians)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.SechDouble">
            <summary>Задает оболочка совместимости XLMath.Sech(Double x)</summary>
        </member>
        <member name="P:ClosedXML.Excel.CalcEngine.Functions.Fakes.ShimXLMath.ToRomanInt32">
            <summary>Задает оболочка совместимости XLMath.ToRoman(Int32 number)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimDateTimeExtensions">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.DateTimeExtensions</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDateTimeExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDateTimeExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDateTimeExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimDateTimeExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimDateTimeExtensions.MaxOADateGet">
            <summary>Задает оболочка совместимости DateTimeExtensions.get_MaxOADate()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimDateTimeExtensions.NextWorkdayDateTimeListOfDateTime">
            <summary>Задает оболочка совместимости DateTimeExtensions.NextWorkday(DateTime date, List`1&lt;DateTime&gt; bankHolidays)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimDictionaryExtensions">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.DictionaryExtensions</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDictionaryExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDictionaryExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDictionaryExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDictionaryExtensions.RemoveAllOf2DictionaryOfM0M1FuncOfM1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.Dictionary{``0,``1},System.Func{``1,System.Boolean}})">
            <summary>Задает оболочка совместимости DictionaryExtensions.RemoveAll(Dictionary`2&lt;!!0,!!1&gt; dic, Func`2&lt;!!1,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimDictionaryExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimDoubleExtensions">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.DoubleExtensions</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDoubleExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDoubleExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimDoubleExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimDoubleExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimDoubleExtensions.ToInvariantStringDouble">
            <summary>Задает оболочка совместимости DoubleExtensions.ToInvariantString(Double value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimEnumerableExtensions">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.EnumerableExtensions</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimEnumerableExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimEnumerableExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimEnumerableExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimEnumerableExtensions.ForEachOf1IEnumerableOfM0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0}})">
            <summary>Задает оболочка совместимости EnumerableExtensions.ForEach(IEnumerable`1&lt;!!0&gt; source, Action`1&lt;!!0&gt; action)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimEnumerableExtensions.GetItemTypeOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Type})">
            <summary>Задает оболочка совместимости EnumerableExtensions.GetItemType(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimEnumerableExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimExtensions">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.Extensions</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimExtensions.CastToOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Задает оболочка совместимости Extensions.CastTo(Object o)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimExtensions.HasDuplicatesOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Задает оболочка совместимости Extensions.HasDuplicates(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimExtensions.CharCountStringChar">
            <summary>Задает оболочка совместимости Extensions.CharCount(String instance, Char c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimExtensions.RemoveSpecialCharactersString">
            <summary>Задает оболочка совместимости Extensions.RemoveSpecialCharacters(String str)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimExtensions.StaticConstructor">
            <summary>Задает оболочка совместимости Extensions.Extensions()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimExtensions.ToHexColor">
            <summary>Задает оболочка совместимости Extensions.ToHex(Color color)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimFontBaseExtensions">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.FontBaseExtensions</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimFontBaseExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimFontBaseExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimFontBaseExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimFontBaseExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimFontBaseExtensions.CopyFontIXLFontBaseIXLFontBase">
            <summary>Задает оболочка совместимости FontBaseExtensions.CopyFont(IXLFontBase font, IXLFontBase sourceFont)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimFontBaseExtensions.GetCachedFontIXLFontBaseDictionaryOfIXLFontBaseFont">
            <summary>Задает оболочка совместимости FontBaseExtensions.GetCachedFont(IXLFontBase fontBase, Dictionary`2&lt;IXLFontBase,Font&gt; fontCache)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimFontBaseExtensions.GetFontStyleIXLFontBase">
            <summary>Задает оболочка совместимости FontBaseExtensions.GetFontStyle(IXLFontBase font)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimFontBaseExtensions.GetHeightIXLFontBaseDictionaryOfIXLFontBaseFont">
            <summary>Задает оболочка совместимости FontBaseExtensions.GetHeight(IXLFontBase fontBase, Dictionary`2&lt;IXLFontBase,Font&gt; fontCache)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimFontBaseExtensions.GetWidthIXLFontBaseStringDictionaryOfIXLFontBaseFont">
            <summary>Задает оболочка совместимости FontBaseExtensions.GetWidth(IXLFontBase fontBase, String text, Dictionary`2&lt;IXLFontBase,Font&gt; fontCache)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimIntegerExtensions">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.IntegerExtensions</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimIntegerExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimIntegerExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimIntegerExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimIntegerExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimIntegerExtensions.ToInvariantStringInt32">
            <summary>Задает оболочка совместимости IntegerExtensions.ToInvariantString(Int32 value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimStringExtensions">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.StringExtensions</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimStringExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimStringExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimStringExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimStringExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimStringExtensions.FixNewLinesString">
            <summary>Задает оболочка совместимости StringExtensions.FixNewLines(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimStringExtensions.PreserveSpacesString">
            <summary>Задает оболочка совместимости StringExtensions.PreserveSpaces(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimStringExtensions.StaticConstructor">
            <summary>Задает оболочка совместимости StringExtensions.StringExtensions()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimStringExtensions.ToCamelString">
            <summary>Задает оболочка совместимости StringExtensions.ToCamel(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimStringExtensions.ToProperString">
            <summary>Задает оболочка совместимости StringExtensions.ToProper(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXDocumentExtensions">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XDocumentExtensions</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXDocumentExtensions.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXDocumentExtensions.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXDocumentExtensions.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXDocumentExtensions.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXDocumentExtensions.LoadStream">
            <summary>Задает оболочка совместимости XDocumentExtensions.Load(Stream stream)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLColor">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLColor</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLColor.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLColor.#ctor(ClosedXML.Excel.XLColor)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLColor.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLColor.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLColor.Bind(System.IEquatable{ClosedXML.Excel.XLColor})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AirForceBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_AirForceBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AliceBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_AliceBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AlizarinGet">
            <summary>Задает оболочка совместимости XLColor.get_Alizarin()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AlmondGet">
            <summary>Задает оболочка совместимости XLColor.get_Almond()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AmaranthGet">
            <summary>Задает оболочка совместимости XLColor.get_Amaranth()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AmberGet">
            <summary>Задает оболочка совместимости XLColor.get_Amber()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AmberSaeEceGet">
            <summary>Задает оболочка совместимости XLColor.get_AmberSaeEce()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AmericanRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_AmericanRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AmethystGet">
            <summary>Задает оболочка совместимости XLColor.get_Amethyst()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AntiFlashWhiteGet">
            <summary>Задает оболочка совместимости XLColor.get_AntiFlashWhite()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AntiqueBrassGet">
            <summary>Задает оболочка совместимости XLColor.get_AntiqueBrass()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AntiqueFuchsiaGet">
            <summary>Задает оболочка совместимости XLColor.get_AntiqueFuchsia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AntiqueWhiteGet">
            <summary>Задает оболочка совместимости XLColor.get_AntiqueWhite()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AppleGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_AppleGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ApricotGet">
            <summary>Задает оболочка совместимости XLColor.get_Apricot()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AquaGet">
            <summary>Задает оболочка совместимости XLColor.get_Aqua()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.Aquamarine1Get">
            <summary>Задает оболочка совместимости XLColor.get_Aquamarine1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AquamarineGet">
            <summary>Задает оболочка совместимости XLColor.get_Aquamarine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ArmyGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_ArmyGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ArsenicGet">
            <summary>Задает оболочка совместимости XLColor.get_Arsenic()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ArylideYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_ArylideYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AshGreyGet">
            <summary>Задает оболочка совместимости XLColor.get_AshGrey()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AsparagusGet">
            <summary>Задает оболочка совместимости XLColor.get_Asparagus()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AtomicTangerineGet">
            <summary>Задает оболочка совместимости XLColor.get_AtomicTangerine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AuburnGet">
            <summary>Задает оболочка совместимости XLColor.get_Auburn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AureolinGet">
            <summary>Задает оболочка совместимости XLColor.get_Aureolin()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AurometalsaurusGet">
            <summary>Задает оболочка совместимости XLColor.get_Aurometalsaurus()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AwesomeGet">
            <summary>Задает оболочка совместимости XLColor.get_Awesome()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AzureColorWheelGet">
            <summary>Задает оболочка совместимости XLColor.get_AzureColorWheel()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AzureGet">
            <summary>Задает оболочка совместимости XLColor.get_Azure()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BabyBlueEyesGet">
            <summary>Задает оболочка совместимости XLColor.get_BabyBlueEyes()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BabyBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_BabyBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BabyPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_BabyPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BallBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_BallBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BananaManiaGet">
            <summary>Задает оболочка совместимости XLColor.get_BananaMania()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BattleshipGreyGet">
            <summary>Задает оболочка совместимости XLColor.get_BattleshipGrey()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BazaarGet">
            <summary>Задает оболочка совместимости XLColor.get_Bazaar()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BeauBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_BeauBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BeaverGet">
            <summary>Задает оболочка совместимости XLColor.get_Beaver()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BeigeGet">
            <summary>Задает оболочка совместимости XLColor.get_Beige()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BisqueGet">
            <summary>Задает оболочка совместимости XLColor.get_Bisque()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BistreGet">
            <summary>Задает оболочка совместимости XLColor.get_Bistre()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BittersweetGet">
            <summary>Задает оболочка совместимости XLColor.get_Bittersweet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlackGet">
            <summary>Задает оболочка совместимости XLColor.get_Black()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlanchedAlmondGet">
            <summary>Задает оболочка совместимости XLColor.get_BlanchedAlmond()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BleuDeFranceGet">
            <summary>Задает оболочка совместимости XLColor.get_BleuDeFrance()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlizzardBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_BlizzardBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlondGet">
            <summary>Задает оболочка совместимости XLColor.get_Blond()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlueBellGet">
            <summary>Задает оболочка совместимости XLColor.get_BlueBell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlueGet">
            <summary>Задает оболочка совместимости XLColor.get_Blue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlueGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_BlueGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlueGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_BlueGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BluePigmentGet">
            <summary>Задает оболочка совместимости XLColor.get_BluePigment()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlueRybGet">
            <summary>Задает оболочка совместимости XLColor.get_BlueRyb()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlueVioletGet">
            <summary>Задает оболочка совместимости XLColor.get_BlueViolet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BlushGet">
            <summary>Задает оболочка совместимости XLColor.get_Blush()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BoleGet">
            <summary>Задает оболочка совместимости XLColor.get_Bole()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BondiBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_BondiBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BostonUniversityRedGet">
            <summary>Задает оболочка совместимости XLColor.get_BostonUniversityRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrandeisBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_BrandeisBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrassGet">
            <summary>Задает оболочка совместимости XLColor.get_Brass()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrickRedGet">
            <summary>Задает оболочка совместимости XLColor.get_BrickRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrightCeruleanGet">
            <summary>Задает оболочка совместимости XLColor.get_BrightCerulean()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrightGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_BrightGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrightLavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_BrightLavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrightMaroonGet">
            <summary>Задает оболочка совместимости XLColor.get_BrightMaroon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrightPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_BrightPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrightTurquoiseGet">
            <summary>Задает оболочка совместимости XLColor.get_BrightTurquoise()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrightUbeGet">
            <summary>Задает оболочка совместимости XLColor.get_BrightUbe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrilliantLavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_BrilliantLavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrilliantRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_BrilliantRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrinkPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_BrinkPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BritishRacingGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_BritishRacingGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BronzeGet">
            <summary>Задает оболочка совместимости XLColor.get_Bronze()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrownGet">
            <summary>Задает оболочка совместимости XLColor.get_Brown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BrownTraditionalGet">
            <summary>Задает оболочка совместимости XLColor.get_BrownTraditional()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BubbleGumGet">
            <summary>Задает оболочка совместимости XLColor.get_BubbleGum()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BubblesGet">
            <summary>Задает оболочка совместимости XLColor.get_Bubbles()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BuffGet">
            <summary>Задает оболочка совместимости XLColor.get_Buff()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BulgarianRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_BulgarianRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BurgundyGet">
            <summary>Задает оболочка совместимости XLColor.get_Burgundy()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BurlyWoodGet">
            <summary>Задает оболочка совместимости XLColor.get_BurlyWood()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BurntOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_BurntOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BurntSiennaGet">
            <summary>Задает оболочка совместимости XLColor.get_BurntSienna()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.BurntUmberGet">
            <summary>Задает оболочка совместимости XLColor.get_BurntUmber()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ByzantineGet">
            <summary>Задает оболочка совместимости XLColor.get_Byzantine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ByzantiumGet">
            <summary>Задает оболочка совместимости XLColor.get_Byzantium()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CadetBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_CadetBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CadetGet">
            <summary>Задает оболочка совместимости XLColor.get_Cadet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CadetGreyGet">
            <summary>Задает оболочка совместимости XLColor.get_CadetGrey()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CadmiumGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_CadmiumGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CadmiumOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_CadmiumOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CadmiumRedGet">
            <summary>Задает оболочка совместимости XLColor.get_CadmiumRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CadmiumYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_CadmiumYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CalPolyPomonaGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_CalPolyPomonaGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CambridgeBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_CambridgeBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CamelGet">
            <summary>Задает оболочка совместимости XLColor.get_Camel()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CamouflageGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_CamouflageGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CanaryYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_CanaryYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CandyAppleRedGet">
            <summary>Задает оболочка совместимости XLColor.get_CandyAppleRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CandyPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_CandyPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CaputMortuumGet">
            <summary>Задает оболочка совместимости XLColor.get_CaputMortuum()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CardinalGet">
            <summary>Задает оболочка совместимости XLColor.get_Cardinal()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CaribbeanGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_CaribbeanGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CarmineGet">
            <summary>Задает оболочка совместимости XLColor.get_Carmine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CarminePinkGet">
            <summary>Задает оболочка совместимости XLColor.get_CarminePink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CarmineRedGet">
            <summary>Задает оболочка совместимости XLColor.get_CarmineRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CarnationPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_CarnationPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CarnelianGet">
            <summary>Задает оболочка совместимости XLColor.get_Carnelian()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CarolinaBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_CarolinaBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CarrotOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_CarrotOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CeilGet">
            <summary>Задает оболочка совместимости XLColor.get_Ceil()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CeladonGet">
            <summary>Задает оболочка совместимости XLColor.get_Celadon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CelestialBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_CelestialBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CeriseGet">
            <summary>Задает оболочка совместимости XLColor.get_Cerise()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CerisePinkGet">
            <summary>Задает оболочка совместимости XLColor.get_CerisePink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CeruleanBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_CeruleanBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CeruleanGet">
            <summary>Задает оболочка совместимости XLColor.get_Cerulean()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ChamoiseeGet">
            <summary>Задает оболочка совместимости XLColor.get_Chamoisee()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ChampagneGet">
            <summary>Задает оболочка совместимости XLColor.get_Champagne()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CharcoalGet">
            <summary>Задает оболочка совместимости XLColor.get_Charcoal()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ChartreuseGet">
            <summary>Задает оболочка совместимости XLColor.get_Chartreuse()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ChartreuseTraditionalGet">
            <summary>Задает оболочка совместимости XLColor.get_ChartreuseTraditional()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CherryBlossomPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_CherryBlossomPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.Chocolate1Get">
            <summary>Задает оболочка совместимости XLColor.get_Chocolate1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ChocolateGet">
            <summary>Задает оболочка совместимости XLColor.get_Chocolate()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ChromeYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_ChromeYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CinereousGet">
            <summary>Задает оболочка совместимости XLColor.get_Cinereous()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CinnabarGet">
            <summary>Задает оболочка совместимости XLColor.get_Cinnabar()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CitrineGet">
            <summary>Задает оболочка совместимости XLColor.get_Citrine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ClassicRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_ClassicRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CobaltGet">
            <summary>Задает оболочка совместимости XLColor.get_Cobalt()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ColorGet">
            <summary>Задает оболочка совместимости XLColor.get_Color()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ColorTypeGet">
            <summary>Задает оболочка совместимости XLColor.get_ColorType()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ColumbiaBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_ColumbiaBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.Constructor">
            <summary>Задает оболочка совместимости XLColor.XLColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ConstructorColor">
            <summary>Задает оболочка совместимости XLColor.XLColor(Color color)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ConstructorInt32">
            <summary>Задает оболочка совместимости XLColor.XLColor(Int32 index)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ConstructorXLColor">
            <summary>Задает оболочка совместимости XLColor.XLColor(XLColor defaultColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ConstructorXLThemeColor">
            <summary>Задает оболочка совместимости XLColor.XLColor(XLThemeColor themeColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ConstructorXLThemeColorDouble">
            <summary>Задает оболочка совместимости XLColor.XLColor(XLThemeColor themeColor, Double themeTint)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CoolBlackGet">
            <summary>Задает оболочка совместимости XLColor.get_CoolBlack()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CoolGreyGet">
            <summary>Задает оболочка совместимости XLColor.get_CoolGrey()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CopperGet">
            <summary>Задает оболочка совместимости XLColor.get_Copper()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CopperRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_CopperRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CoquelicotGet">
            <summary>Задает оболочка совместимости XLColor.get_Coquelicot()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CoralGet">
            <summary>Задает оболочка совместимости XLColor.get_Coral()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CoralPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_CoralPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CoralRedGet">
            <summary>Задает оболочка совместимости XLColor.get_CoralRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CordovanGet">
            <summary>Задает оболочка совместимости XLColor.get_Cordovan()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CornGet">
            <summary>Задает оболочка совместимости XLColor.get_Corn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CornellRedGet">
            <summary>Задает оболочка совместимости XLColor.get_CornellRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CornflowerBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_CornflowerBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CornsilkGet">
            <summary>Задает оболочка совместимости XLColor.get_Cornsilk()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CosmicLatteGet">
            <summary>Задает оболочка совместимости XLColor.get_CosmicLatte()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CottonCandyGet">
            <summary>Задает оболочка совместимости XLColor.get_CottonCandy()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CreamGet">
            <summary>Задает оболочка совместимости XLColor.get_Cream()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CrimsonGet">
            <summary>Задает оболочка совместимости XLColor.get_Crimson()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CrimsonGloryGet">
            <summary>Задает оболочка совместимости XLColor.get_CrimsonGlory()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CyanGet">
            <summary>Задает оболочка совместимости XLColor.get_Cyan()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.CyanProcessGet">
            <summary>Задает оболочка совместимости XLColor.get_CyanProcess()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DaffodilGet">
            <summary>Задает оболочка совместимости XLColor.get_Daffodil()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DandelionGet">
            <summary>Задает оболочка совместимости XLColor.get_Dandelion()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkByzantiumGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkByzantium()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkCandyAppleRedGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkCandyAppleRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkCeruleanGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkCerulean()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkChampagneGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkChampagne()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkChestnutGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkChestnut()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkCoralGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkCoral()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkCyanGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkCyan()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkElectricBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkElectricBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkGoldenrodGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkGoldenrod()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkGreen1Get">
            <summary>Задает оболочка совместимости XLColor.get_DarkGreen1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkJungleGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkJungleGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkKhakiGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkKhaki()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkLavaGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkLava()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkLavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkLavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkMagentaGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkMagenta()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkMidnightBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkMidnightBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkOliveGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkOliveGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkOrchidGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkOrchid()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkPastelBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkPastelBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkPastelGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkPastelGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkPastelPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkPastelPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkPastelRedGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkPastelRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkPowderBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkPowderBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkRaspberryGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkRaspberry()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkRedGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkSalmonGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkSalmon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkScarletGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkScarlet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkSeaGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkSeaGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkSiennaGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkSienna()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkSlateBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkSlateBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkSlateGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkSlateGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkSpringGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkSpringGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkTanGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkTan()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkTangerineGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkTangerine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkTaupeGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkTaupe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkTerraCottaGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkTerraCotta()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkTurquoiseGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkTurquoise()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DarkVioletGet">
            <summary>Задает оболочка совместимости XLColor.get_DarkViolet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DartmouthGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_DartmouthGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DavysGreyGet">
            <summary>Задает оболочка совместимости XLColor.get_DavysGrey()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DebianRedGet">
            <summary>Задает оболочка совместимости XLColor.get_DebianRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepCarmineGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepCarmine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepCarminePinkGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepCarminePink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepCarrotOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepCarrotOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepCeriseGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepCerise()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepChampagneGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepChampagne()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepChestnutGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepChestnut()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepFuchsiaGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepFuchsia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepJungleGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepJungleGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepLilacGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepLilac()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepMagentaGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepMagenta()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepPeachGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepPeach()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepSaffronGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepSaffron()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DeepSkyBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_DeepSkyBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DenimGet">
            <summary>Задает оболочка совместимости XLColor.get_Denim()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DesertGet">
            <summary>Задает оболочка совместимости XLColor.get_Desert()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DesertSandGet">
            <summary>Задает оболочка совместимости XLColor.get_DesertSand()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DimGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_DimGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DodgerBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_DodgerBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DogwoodRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_DogwoodRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DollarBillGet">
            <summary>Задает оболочка совместимости XLColor.get_DollarBill()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DrabGet">
            <summary>Задает оболочка совместимости XLColor.get_Drab()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.DukeBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_DukeBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EarthYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_EarthYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EcruGet">
            <summary>Задает оболочка совместимости XLColor.get_Ecru()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EggplantGet">
            <summary>Задает оболочка совместимости XLColor.get_Eggplant()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EggshellGet">
            <summary>Задает оболочка совместимости XLColor.get_Eggshell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EgyptianBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_EgyptianBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ElectricBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_ElectricBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ElectricCrimsonGet">
            <summary>Задает оболочка совместимости XLColor.get_ElectricCrimson()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ElectricIndigoGet">
            <summary>Задает оболочка совместимости XLColor.get_ElectricIndigo()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ElectricLavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_ElectricLavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ElectricLimeGet">
            <summary>Задает оболочка совместимости XLColor.get_ElectricLime()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ElectricPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_ElectricPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ElectricUltramarineGet">
            <summary>Задает оболочка совместимости XLColor.get_ElectricUltramarine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ElectricVioletGet">
            <summary>Задает оболочка совместимости XLColor.get_ElectricViolet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EmeraldGet">
            <summary>Задает оболочка совместимости XLColor.get_Emerald()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EqualityOpXLColorXLColor">
            <summary>Задает оболочка совместимости XLColor.op_Equality(XLColor left, XLColor right)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EqualsObject">
            <summary>Задает оболочка совместимости XLColor.Equals(Object obj)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EqualsXLColor">
            <summary>Задает оболочка совместимости XLColor.Equals(XLColor other)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.EtonBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_EtonBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FallowGet">
            <summary>Задает оболочка совместимости XLColor.get_Fallow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FaluRedGet">
            <summary>Задает оболочка совместимости XLColor.get_FaluRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FandangoGet">
            <summary>Задает оболочка совместимости XLColor.get_Fandango()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FashionFuchsiaGet">
            <summary>Задает оболочка совместимости XLColor.get_FashionFuchsia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FawnGet">
            <summary>Задает оболочка совместимости XLColor.get_Fawn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FeldgrauGet">
            <summary>Задает оболочка совместимости XLColor.get_Feldgrau()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FernGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_FernGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FerrariRedGet">
            <summary>Задает оболочка совместимости XLColor.get_FerrariRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FieldDrabGet">
            <summary>Задает оболочка совместимости XLColor.get_FieldDrab()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FireEngineRedGet">
            <summary>Задает оболочка совместимости XLColor.get_FireEngineRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FirebrickGet">
            <summary>Задает оболочка совместимости XLColor.get_Firebrick()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FlameGet">
            <summary>Задает оболочка совместимости XLColor.get_Flame()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FlamingoPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_FlamingoPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FlavescentGet">
            <summary>Задает оболочка совместимости XLColor.get_Flavescent()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FlaxGet">
            <summary>Задает оболочка совместимости XLColor.get_Flax()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FloralWhiteGet">
            <summary>Задает оболочка совместимости XLColor.get_FloralWhite()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FluorescentOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_FluorescentOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FluorescentYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_FluorescentYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FollyGet">
            <summary>Задает оболочка совместимости XLColor.get_Folly()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ForestGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_ForestGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ForestGreenTraditionalGet">
            <summary>Задает оболочка совместимости XLColor.get_ForestGreenTraditional()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FrenchBeigeGet">
            <summary>Задает оболочка совместимости XLColor.get_FrenchBeige()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FrenchBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_FrenchBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FrenchLilacGet">
            <summary>Задает оболочка совместимости XLColor.get_FrenchLilac()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FrenchRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_FrenchRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromArgbInt32">
            <summary>Задает оболочка совместимости XLColor.FromArgb(Int32 argb)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromArgbInt32Int32Int32">
            <summary>Задает оболочка совместимости XLColor.FromArgb(Int32 r, Int32 g, Int32 b)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromArgbInt32Int32Int32Int32">
            <summary>Задает оболочка совместимости XLColor.FromArgb(Int32 a, Int32 r, Int32 g, Int32 b)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromColorColor">
            <summary>Задает оболочка совместимости XLColor.FromColor(Color color)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromHtmlString">
            <summary>Задает оболочка совместимости XLColor.FromHtml(String htmlColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromIndexInt32">
            <summary>Задает оболочка совместимости XLColor.FromIndex(Int32 index)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromKnownColorKnownColor">
            <summary>Задает оболочка совместимости XLColor.FromKnownColor(KnownColor color)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromNameString">
            <summary>Задает оболочка совместимости XLColor.FromName(String name)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromThemeXLThemeColor">
            <summary>Задает оболочка совместимости XLColor.FromTheme(XLThemeColor themeColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FromThemeXLThemeColorDouble">
            <summary>Задает оболочка совместимости XLColor.FromTheme(XLThemeColor themeColor, Double themeTint)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FuchsiaGet">
            <summary>Задает оболочка совместимости XLColor.get_Fuchsia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FuchsiaPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_FuchsiaPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FulvousGet">
            <summary>Задает оболочка совместимости XLColor.get_Fulvous()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.FuzzyWuzzyGet">
            <summary>Задает оболочка совместимости XLColor.get_FuzzyWuzzy()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GainsboroGet">
            <summary>Задает оболочка совместимости XLColor.get_Gainsboro()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GambogeGet">
            <summary>Задает оболочка совместимости XLColor.get_Gamboge()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GetHashCode">
            <summary>Задает оболочка совместимости XLColor.GetHashCode()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GhostWhiteGet">
            <summary>Задает оболочка совместимости XLColor.get_GhostWhite()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GingerGet">
            <summary>Задает оболочка совместимости XLColor.get_Ginger()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GlaucousGet">
            <summary>Задает оболочка совместимости XLColor.get_Glaucous()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GoldGet">
            <summary>Задает оболочка совместимости XLColor.get_Gold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GoldMetallicGet">
            <summary>Задает оболочка совместимости XLColor.get_GoldMetallic()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GoldenBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_GoldenBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GoldenPoppyGet">
            <summary>Задает оболочка совместимости XLColor.get_GoldenPoppy()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GoldenYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_GoldenYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GoldenrodGet">
            <summary>Задает оболочка совместимости XLColor.get_Goldenrod()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GrannySmithAppleGet">
            <summary>Задает оболочка совместимости XLColor.get_GrannySmithApple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GrayAsparagusGet">
            <summary>Задает оболочка совместимости XLColor.get_GrayAsparagus()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GrayGet">
            <summary>Задает оболочка совместимости XLColor.get_Gray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GreenGet">
            <summary>Задает оболочка совместимости XLColor.get_Green()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GreenPigmentGet">
            <summary>Задает оболочка совместимости XLColor.get_GreenPigment()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GreenRybGet">
            <summary>Задает оболочка совместимости XLColor.get_GreenRyb()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GreenYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_GreenYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.GrulloGet">
            <summary>Задает оболочка совместимости XLColor.get_Grullo()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HalayaUbeGet">
            <summary>Задает оболочка совместимости XLColor.get_HalayaUbe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HanBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_HanBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HanPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_HanPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HansaYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_HansaYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HarlequinGet">
            <summary>Задает оболочка совместимости XLColor.get_Harlequin()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HarvardCrimsonGet">
            <summary>Задает оболочка совместимости XLColor.get_HarvardCrimson()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HarvestGoldGet">
            <summary>Задает оболочка совместимости XLColor.get_HarvestGold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HasValueGet">
            <summary>Задает оболочка совместимости XLColor.get_HasValue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HasValueSetBoolean">
            <summary>Задает оболочка совместимости XLColor.set_HasValue(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HeliotropeGet">
            <summary>Задает оболочка совместимости XLColor.get_Heliotrope()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HollywoodCeriseGet">
            <summary>Задает оболочка совместимости XLColor.get_HollywoodCerise()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HoneydewGet">
            <summary>Задает оболочка совместимости XLColor.get_Honeydew()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HookersGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_HookersGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HotMagentaGet">
            <summary>Задает оболочка совместимости XLColor.get_HotMagenta()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HotPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_HotPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.HunterGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_HunterGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IcebergGet">
            <summary>Задает оболочка совместимости XLColor.get_Iceberg()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IcterineGet">
            <summary>Задает оболочка совместимости XLColor.get_Icterine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.InchwormGet">
            <summary>Задает оболочка совместимости XLColor.get_Inchworm()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IndexedColorsGet">
            <summary>Задает оболочка совместимости XLColor.get_IndexedColors()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IndexedGet">
            <summary>Задает оболочка совместимости XLColor.get_Indexed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IndiaGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_IndiaGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IndianRedGet">
            <summary>Задает оболочка совместимости XLColor.get_IndianRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IndianYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_IndianYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IndigoDyeGet">
            <summary>Задает оболочка совместимости XLColor.get_IndigoDye()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IndigoGet">
            <summary>Задает оболочка совместимости XLColor.get_Indigo()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.InequalityOpXLColorXLColor">
            <summary>Задает оболочка совместимости XLColor.op_Inequality(XLColor left, XLColor right)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.InternationalKleinBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_InternationalKleinBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.InternationalOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_InternationalOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IrisGet">
            <summary>Задает оболочка совместимости XLColor.get_Iris()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IsabellineGet">
            <summary>Задает оболочка совместимости XLColor.get_Isabelline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IslamicGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_IslamicGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.IvoryGet">
            <summary>Задает оболочка совместимости XLColor.get_Ivory()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.JadeGet">
            <summary>Задает оболочка совместимости XLColor.get_Jade()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.JasperGet">
            <summary>Задает оболочка совместимости XLColor.get_Jasper()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.JazzberryJamGet">
            <summary>Задает оболочка совместимости XLColor.get_JazzberryJam()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.JonquilGet">
            <summary>Задает оболочка совместимости XLColor.get_Jonquil()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.JuneBudGet">
            <summary>Задает оболочка совместимости XLColor.get_JuneBud()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.JungleGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_JungleGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.KellyGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_KellyGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.KhakiGet">
            <summary>Задает оболочка совместимости XLColor.get_Khaki()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.KhakiHtmlCssKhakiGet">
            <summary>Задает оболочка совместимости XLColor.get_KhakiHtmlCssKhaki()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LaSalleGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_LaSalleGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LanguidLavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_LanguidLavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LapisLazuliGet">
            <summary>Задает оболочка совместимости XLColor.get_LapisLazuli()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LaserLemonGet">
            <summary>Задает оболочка совместимости XLColor.get_LaserLemon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavaGet">
            <summary>Задает оболочка совместимости XLColor.get_Lava()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavenderBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_LavenderBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavenderBlushGet">
            <summary>Задает оболочка совместимости XLColor.get_LavenderBlush()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavenderFloralGet">
            <summary>Задает оболочка совместимости XLColor.get_LavenderFloral()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_Lavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavenderGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_LavenderGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavenderIndigoGet">
            <summary>Задает оболочка совместимости XLColor.get_LavenderIndigo()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavenderPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_LavenderPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavenderPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_LavenderPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LavenderRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_LavenderRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LawnGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_LawnGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LemonChiffonGet">
            <summary>Задает оболочка совместимости XLColor.get_LemonChiffon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LemonGet">
            <summary>Задает оболочка совместимости XLColor.get_Lemon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightApricotGet">
            <summary>Задает оболочка совместимости XLColor.get_LightApricot()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_LightBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_LightBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightCarminePinkGet">
            <summary>Задает оболочка совместимости XLColor.get_LightCarminePink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightCoralGet">
            <summary>Задает оболочка совместимости XLColor.get_LightCoral()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightCornflowerBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_LightCornflowerBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightCyanGet">
            <summary>Задает оболочка совместимости XLColor.get_LightCyan()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightFuchsiaPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_LightFuchsiaPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightGoldenrodYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_LightGoldenrodYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_LightGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_LightGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightMauveGet">
            <summary>Задает оболочка совместимости XLColor.get_LightMauve()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightPastelPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_LightPastelPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_LightPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightSalmonGet">
            <summary>Задает оболочка совместимости XLColor.get_LightSalmon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightSalmonPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_LightSalmonPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightSeaGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_LightSeaGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightSkyBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_LightSkyBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightSlateGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_LightSlateGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightSteelBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_LightSteelBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightTaupeGet">
            <summary>Задает оболочка совместимости XLColor.get_LightTaupe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightThulianPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_LightThulianPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightYellow1Get">
            <summary>Задает оболочка совместимости XLColor.get_LightYellow1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LightYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_LightYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LilacGet">
            <summary>Задает оболочка совместимости XLColor.get_Lilac()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LimeColorWheelGet">
            <summary>Задает оболочка совместимости XLColor.get_LimeColorWheel()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LimeGet">
            <summary>Задает оболочка совместимости XLColor.get_Lime()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LimeGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_LimeGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LincolnGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_LincolnGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LinenGet">
            <summary>Задает оболочка совместимости XLColor.get_Linen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LiverGet">
            <summary>Задает оболочка совместимости XLColor.get_Liver()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.LustGet">
            <summary>Задает оболочка совместимости XLColor.get_Lust()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MacaroniAndCheeseGet">
            <summary>Задает оболочка совместимости XLColor.get_MacaroniAndCheese()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MagentaDyeGet">
            <summary>Задает оболочка совместимости XLColor.get_MagentaDye()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MagentaGet">
            <summary>Задает оболочка совместимости XLColor.get_Magenta()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MagentaProcessGet">
            <summary>Задает оболочка совместимости XLColor.get_MagentaProcess()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MagicMintGet">
            <summary>Задает оболочка совместимости XLColor.get_MagicMint()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MagnoliaGet">
            <summary>Задает оболочка совместимости XLColor.get_Magnolia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MahoganyGet">
            <summary>Задает оболочка совместимости XLColor.get_Mahogany()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MaizeGet">
            <summary>Задает оболочка совместимости XLColor.get_Maize()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MajorelleBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_MajorelleBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MalachiteGet">
            <summary>Задает оболочка совместимости XLColor.get_Malachite()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ManateeGet">
            <summary>Задает оболочка совместимости XLColor.get_Manatee()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MangoTangoGet">
            <summary>Задает оболочка совместимости XLColor.get_MangoTango()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MaroonGet">
            <summary>Задает оболочка совместимости XLColor.get_Maroon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MaroonX11Get">
            <summary>Задает оболочка совместимости XLColor.get_MaroonX11()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MauveGet">
            <summary>Задает оболочка совместимости XLColor.get_Mauve()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MauveTaupeGet">
            <summary>Задает оболочка совместимости XLColor.get_MauveTaupe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MauvelousGet">
            <summary>Задает оболочка совместимости XLColor.get_Mauvelous()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MayaBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_MayaBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MeatBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_MeatBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumAquamarine1Get">
            <summary>Задает оболочка совместимости XLColor.get_MediumAquamarine1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumAquamarineGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumAquamarine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumCandyAppleRedGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumCandyAppleRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumCarmineGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumCarmine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumChampagneGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumChampagne()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumElectricBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumElectricBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumJungleGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumJungleGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumOrchidGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumOrchid()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumPersianBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumPersianBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumRedVioletGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumRedViolet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumSeaGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumSeaGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumSlateBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumSlateBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumSpringBudGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumSpringBud()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumSpringGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumSpringGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumTaupeGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumTaupe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumTurquoiseGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumTurquoise()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MediumVioletRedGet">
            <summary>Задает оболочка совместимости XLColor.get_MediumVioletRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MelonGet">
            <summary>Задает оболочка совместимости XLColor.get_Melon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MidnightBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_MidnightBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MidnightGreenEagleGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_MidnightGreenEagleGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MikadoYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_MikadoYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MintCreamGet">
            <summary>Задает оболочка совместимости XLColor.get_MintCream()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MintGet">
            <summary>Задает оболочка совместимости XLColor.get_Mint()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MintGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_MintGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MistyRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_MistyRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MoccasinGet">
            <summary>Задает оболочка совместимости XLColor.get_Moccasin()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ModeBeigeGet">
            <summary>Задает оболочка совместимости XLColor.get_ModeBeige()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MoonstoneBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_MoonstoneBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MordantRed19Get">
            <summary>Задает оболочка совместимости XLColor.get_MordantRed19()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MossGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_MossGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MountainMeadowGet">
            <summary>Задает оболочка совместимости XLColor.get_MountainMeadow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MountbattenPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_MountbattenPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MsuGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_MsuGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MulberryGet">
            <summary>Задает оболочка совместимости XLColor.get_Mulberry()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MustardGet">
            <summary>Задает оболочка совместимости XLColor.get_Mustard()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.MyrtleGet">
            <summary>Задает оболочка совместимости XLColor.get_Myrtle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NadeshikoPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_NadeshikoPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NapierGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_NapierGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NaplesYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_NaplesYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NavajoWhiteGet">
            <summary>Задает оболочка совместимости XLColor.get_NavajoWhite()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NavyGet">
            <summary>Задает оболочка совместимости XLColor.get_Navy()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NeonCarrotGet">
            <summary>Задает оболочка совместимости XLColor.get_NeonCarrot()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NeonFuchsiaGet">
            <summary>Задает оболочка совместимости XLColor.get_NeonFuchsia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NeonGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_NeonGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NoColorGet">
            <summary>Задает оболочка совместимости XLColor.get_NoColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.NonPhotoBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_NonPhotoBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OceanBoatBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_OceanBoatBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OchreGet">
            <summary>Задает оболочка совместимости XLColor.get_Ochre()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OldGoldGet">
            <summary>Задает оболочка совместимости XLColor.get_OldGold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OldLaceGet">
            <summary>Задает оболочка совместимости XLColor.get_OldLace()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OldLavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_OldLavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OldMauveGet">
            <summary>Задает оболочка совместимости XLColor.get_OldMauve()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OldRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_OldRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OliveDrab7Get">
            <summary>Задает оболочка совместимости XLColor.get_OliveDrab7()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OliveDrabGet">
            <summary>Задает оболочка совместимости XLColor.get_OliveDrab()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OliveGet">
            <summary>Задает оболочка совместимости XLColor.get_Olive()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OlivineGet">
            <summary>Задает оболочка совместимости XLColor.get_Olivine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OnyxGet">
            <summary>Задает оболочка совместимости XLColor.get_Onyx()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OperaMauveGet">
            <summary>Задает оболочка совместимости XLColor.get_OperaMauve()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OrangeColorWheelGet">
            <summary>Задает оболочка совместимости XLColor.get_OrangeColorWheel()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_Orange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OrangePeelGet">
            <summary>Задает оболочка совместимости XLColor.get_OrangePeel()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OrangeRedGet">
            <summary>Задает оболочка совместимости XLColor.get_OrangeRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OrangeRybGet">
            <summary>Задает оболочка совместимости XLColor.get_OrangeRyb()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OrchidGet">
            <summary>Задает оболочка совместимости XLColor.get_Orchid()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OtterBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_OtterBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OuCrimsonRedGet">
            <summary>Задает оболочка совместимости XLColor.get_OuCrimsonRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OuterSpaceGet">
            <summary>Задает оболочка совместимости XLColor.get_OuterSpace()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OutrageousOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_OutrageousOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.OxfordBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_OxfordBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PakistanGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_PakistanGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PalatinateBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_PalatinateBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PalatinatePurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_PalatinatePurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleAquaGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleAqua()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleCarmineGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleCarmine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleCeruleanGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleCerulean()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleChestnutGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleChestnut()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleCopperGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleCopper()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleCornflowerBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleCornflowerBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleGoldGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleGold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleGoldenrodGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleGoldenrod()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleMagentaGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleMagenta()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PalePinkGet">
            <summary>Задает оболочка совместимости XLColor.get_PalePink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleRobinEggBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleRobinEggBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleSilverGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleSilver()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleSpringBudGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleSpringBud()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleTaupeGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleTaupe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleTurquoiseGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleTurquoise()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaleVioletRedGet">
            <summary>Задает оболочка совместимости XLColor.get_PaleVioletRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PansyPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_PansyPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PapayaWhipGet">
            <summary>Задает оболочка совместимости XLColor.get_PapayaWhip()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ParisGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_ParisGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelMagentaGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelMagenta()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelRedGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelVioletGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelViolet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PastelYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_PastelYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PaynesGreyGet">
            <summary>Задает оболочка совместимости XLColor.get_PaynesGrey()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PeachGet">
            <summary>Задает оболочка совместимости XLColor.get_Peach()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PeachOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_PeachOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PeachPuffGet">
            <summary>Задает оболочка совместимости XLColor.get_PeachPuff()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PeachYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_PeachYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PearGet">
            <summary>Задает оболочка совместимости XLColor.get_Pear()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PearlGet">
            <summary>Задает оболочка совместимости XLColor.get_Pearl()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PeridotGet">
            <summary>Задает оболочка совместимости XLColor.get_Peridot()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PeriwinkleGet">
            <summary>Задает оболочка совместимости XLColor.get_Periwinkle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PersianBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_PersianBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PersianGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_PersianGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PersianIndigoGet">
            <summary>Задает оболочка совместимости XLColor.get_PersianIndigo()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PersianOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_PersianOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PersianPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_PersianPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PersianPlumGet">
            <summary>Задает оболочка совместимости XLColor.get_PersianPlum()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PersianRedGet">
            <summary>Задает оболочка совместимости XLColor.get_PersianRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PersianRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_PersianRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PersimmonGet">
            <summary>Задает оболочка совместимости XLColor.get_Persimmon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PeruGet">
            <summary>Задает оболочка совместимости XLColor.get_Peru()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PhloxGet">
            <summary>Задает оболочка совместимости XLColor.get_Phlox()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PhthaloBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_PhthaloBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PhthaloGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_PhthaloGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PiggyPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_PiggyPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PineGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_PineGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PinkGet">
            <summary>Задает оболочка совместимости XLColor.get_Pink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PinkOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_PinkOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PinkPearlGet">
            <summary>Задает оболочка совместимости XLColor.get_PinkPearl()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PinkSherbetGet">
            <summary>Задает оболочка совместимости XLColor.get_PinkSherbet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PistachioGet">
            <summary>Задает оболочка совместимости XLColor.get_Pistachio()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PlatinumGet">
            <summary>Задает оболочка совместимости XLColor.get_Platinum()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PlumGet">
            <summary>Задает оболочка совместимости XLColor.get_Plum()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PlumTraditionalGet">
            <summary>Задает оболочка совместимости XLColor.get_PlumTraditional()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PortlandOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_PortlandOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PowderBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_PowderBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PrincetonOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_PrincetonOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PruneGet">
            <summary>Задает оболочка совместимости XLColor.get_Prune()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PrussianBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_PrussianBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PsychedelicPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_PsychedelicPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PuceGet">
            <summary>Задает оболочка совместимости XLColor.get_Puce()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PumpkinGet">
            <summary>Задает оболочка совместимости XLColor.get_Pumpkin()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_Purple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PurpleHeartGet">
            <summary>Задает оболочка совместимости XLColor.get_PurpleHeart()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PurpleMountainMajestyGet">
            <summary>Задает оболочка совместимости XLColor.get_PurpleMountainMajesty()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PurpleMunsellGet">
            <summary>Задает оболочка совместимости XLColor.get_PurpleMunsell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PurplePizzazzGet">
            <summary>Задает оболочка совместимости XLColor.get_PurplePizzazz()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PurpleTaupeGet">
            <summary>Задает оболочка совместимости XLColor.get_PurpleTaupe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.PurpleX11Get">
            <summary>Задает оболочка совместимости XLColor.get_PurpleX11()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RadicalRedGet">
            <summary>Задает оболочка совместимости XLColor.get_RadicalRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RaspberryGet">
            <summary>Задает оболочка совместимости XLColor.get_Raspberry()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RaspberryGlaceGet">
            <summary>Задает оболочка совместимости XLColor.get_RaspberryGlace()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RaspberryPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_RaspberryPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RaspberryRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_RaspberryRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RawUmberGet">
            <summary>Задает оболочка совместимости XLColor.get_RawUmber()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RazzleDazzleRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_RazzleDazzleRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RazzmatazzGet">
            <summary>Задает оболочка совместимости XLColor.get_Razzmatazz()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RedGet">
            <summary>Задает оболочка совместимости XLColor.get_Red()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RedMunsellGet">
            <summary>Задает оболочка совместимости XLColor.get_RedMunsell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RedNcsGet">
            <summary>Задает оболочка совместимости XLColor.get_RedNcs()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RedPigmentGet">
            <summary>Задает оболочка совместимости XLColor.get_RedPigment()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RedRybGet">
            <summary>Задает оболочка совместимости XLColor.get_RedRyb()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RedwoodGet">
            <summary>Задает оболочка совместимости XLColor.get_Redwood()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RegaliaGet">
            <summary>Задает оболочка совместимости XLColor.get_Regalia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RichBlackGet">
            <summary>Задает оболочка совместимости XLColor.get_RichBlack()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RichBrilliantLavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_RichBrilliantLavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RichCarmineGet">
            <summary>Задает оболочка совместимости XLColor.get_RichCarmine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RichElectricBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_RichElectricBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RichLavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_RichLavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RichLilacGet">
            <summary>Задает оболочка совместимости XLColor.get_RichLilac()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RichMaroonGet">
            <summary>Задает оболочка совместимости XLColor.get_RichMaroon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RifleGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_RifleGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RobinEggBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_RobinEggBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoseBonbonGet">
            <summary>Задает оболочка совместимости XLColor.get_RoseBonbon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoseEbonyGet">
            <summary>Задает оболочка совместимости XLColor.get_RoseEbony()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoseGet">
            <summary>Задает оболочка совместимости XLColor.get_Rose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoseGoldGet">
            <summary>Задает оболочка совместимости XLColor.get_RoseGold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoseMadderGet">
            <summary>Задает оболочка совместимости XLColor.get_RoseMadder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RosePinkGet">
            <summary>Задает оболочка совместимости XLColor.get_RosePink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoseQuartzGet">
            <summary>Задает оболочка совместимости XLColor.get_RoseQuartz()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoseTaupeGet">
            <summary>Задает оболочка совместимости XLColor.get_RoseTaupe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoseValeGet">
            <summary>Задает оболочка совместимости XLColor.get_RoseVale()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RosewoodGet">
            <summary>Задает оболочка совместимости XLColor.get_Rosewood()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RossoCorsaGet">
            <summary>Задает оболочка совместимости XLColor.get_RossoCorsa()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RosyBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_RosyBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoyalAzureGet">
            <summary>Задает оболочка совместимости XLColor.get_RoyalAzure()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoyalBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_RoyalBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoyalBlueTraditionalGet">
            <summary>Задает оболочка совместимости XLColor.get_RoyalBlueTraditional()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoyalFuchsiaGet">
            <summary>Задает оболочка совместимости XLColor.get_RoyalFuchsia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RoyalPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_RoyalPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RubyGet">
            <summary>Задает оболочка совместимости XLColor.get_Ruby()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RuddyBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_RuddyBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RuddyGet">
            <summary>Задает оболочка совместимости XLColor.get_Ruddy()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RuddyPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_RuddyPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RufousGet">
            <summary>Задает оболочка совместимости XLColor.get_Rufous()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RussetGet">
            <summary>Задает оболочка совместимости XLColor.get_Russet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.RustGet">
            <summary>Задает оболочка совместимости XLColor.get_Rust()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SacramentoStateGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_SacramentoStateGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SaddleBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_SaddleBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SafetyOrangeBlazeOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_SafetyOrangeBlazeOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SaffronGet">
            <summary>Задает оболочка совместимости XLColor.get_Saffron()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.Salmon1Get">
            <summary>Задает оболочка совместимости XLColor.get_Salmon1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SalmonGet">
            <summary>Задает оболочка совместимости XLColor.get_Salmon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SalmonPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_SalmonPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SandDuneGet">
            <summary>Задает оболочка совместимости XLColor.get_SandDune()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SandGet">
            <summary>Задает оболочка совместимости XLColor.get_Sand()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SandstormGet">
            <summary>Задает оболочка совместимости XLColor.get_Sandstorm()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SandyBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_SandyBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SandyTaupeGet">
            <summary>Задает оболочка совместимости XLColor.get_SandyTaupe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SangriaGet">
            <summary>Задает оболочка совместимости XLColor.get_Sangria()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SapGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_SapGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SapphireGet">
            <summary>Задает оболочка совместимости XLColor.get_Sapphire()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SatinSheenGoldGet">
            <summary>Задает оболочка совместимости XLColor.get_SatinSheenGold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ScarletGet">
            <summary>Задает оболочка совместимости XLColor.get_Scarlet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SchoolBusYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_SchoolBusYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ScreaminGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_ScreaminGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SeaGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_SeaGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SeaShellGet">
            <summary>Задает оболочка совместимости XLColor.get_SeaShell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SealBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_SealBrown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SelectiveYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_SelectiveYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SepiaGet">
            <summary>Задает оболочка совместимости XLColor.get_Sepia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ShadowGet">
            <summary>Задает оболочка совместимости XLColor.get_Shadow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ShamrockGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_ShamrockGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ShockingPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_ShockingPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.Sienna1Get">
            <summary>Задает оболочка совместимости XLColor.get_Sienna1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SiennaGet">
            <summary>Задает оболочка совместимости XLColor.get_Sienna()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SilverGet">
            <summary>Задает оболочка совместимости XLColor.get_Silver()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SinopiaGet">
            <summary>Задает оболочка совместимости XLColor.get_Sinopia()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SkobeloffGet">
            <summary>Задает оболочка совместимости XLColor.get_Skobeloff()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SkyBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_SkyBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SkyMagentaGet">
            <summary>Задает оболочка совместимости XLColor.get_SkyMagenta()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SlateBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_SlateBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SlateGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_SlateGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SmaltDarkPowderBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_SmaltDarkPowderBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SmokeyTopazGet">
            <summary>Задает оболочка совместимости XLColor.get_SmokeyTopaz()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SmokyBlackGet">
            <summary>Задает оболочка совместимости XLColor.get_SmokyBlack()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SnowGet">
            <summary>Задает оболочка совместимости XLColor.get_Snow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SpiroDiscoBallGet">
            <summary>Задает оболочка совместимости XLColor.get_SpiroDiscoBall()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SplashedWhiteGet">
            <summary>Задает оболочка совместимости XLColor.get_SplashedWhite()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SpringBudGet">
            <summary>Задает оболочка совместимости XLColor.get_SpringBud()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SpringGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_SpringGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.StPatricksBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_StPatricksBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.StaticConstructor">
            <summary>Задает оболочка совместимости XLColor.XLColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SteelBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_SteelBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.StilDeGrainYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_StilDeGrainYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.StrawGet">
            <summary>Задает оболочка совместимости XLColor.get_Straw()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SunglowGet">
            <summary>Задает оболочка совместимости XLColor.get_Sunglow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.SunsetGet">
            <summary>Задает оболочка совместимости XLColor.get_Sunset()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TanGet">
            <summary>Задает оболочка совместимости XLColor.get_Tan()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TangeloGet">
            <summary>Задает оболочка совместимости XLColor.get_Tangelo()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TangerineGet">
            <summary>Задает оболочка совместимости XLColor.get_Tangerine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TangerineYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_TangerineYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TaupeGet">
            <summary>Задает оболочка совместимости XLColor.get_Taupe()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TaupeGrayGet">
            <summary>Задает оболочка совместимости XLColor.get_TaupeGray()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TeaGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_TeaGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TeaRoseOrangeGet">
            <summary>Задает оболочка совместимости XLColor.get_TeaRoseOrange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TeaRoseRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_TeaRoseRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TealBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_TealBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TealGet">
            <summary>Задает оболочка совместимости XLColor.get_Teal()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TealGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_TealGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TennéTawnyGet">
            <summary>Задает оболочка совместимости XLColor.get_TennéTawny()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TerraCottaGet">
            <summary>Задает оболочка совместимости XLColor.get_TerraCotta()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ThemeColorGet">
            <summary>Задает оболочка совместимости XLColor.get_ThemeColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ThemeTintGet">
            <summary>Задает оболочка совместимости XLColor.get_ThemeTint()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ThistleGet">
            <summary>Задает оболочка совместимости XLColor.get_Thistle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ThulianPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_ThulianPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TickleMePinkGet">
            <summary>Задает оболочка совместимости XLColor.get_TickleMePink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TiffanyBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_TiffanyBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TigersEyeGet">
            <summary>Задает оболочка совместимости XLColor.get_TigersEye()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TimberwolfGet">
            <summary>Задает оболочка совместимости XLColor.get_Timberwolf()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TitaniumYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_TitaniumYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ToString">
            <summary>Задает оболочка совместимости XLColor.ToString()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TomatoGet">
            <summary>Задает оболочка совместимости XLColor.get_Tomato()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ToolboxGet">
            <summary>Задает оболочка совместимости XLColor.get_Toolbox()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TractorRedGet">
            <summary>Задает оболочка совместимости XLColor.get_TractorRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TransparentGet">
            <summary>Задает оболочка совместимости XLColor.get_Transparent()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TropicalRainForestGet">
            <summary>Задает оболочка совместимости XLColor.get_TropicalRainForest()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TuftsBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_TuftsBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TumbleweedGet">
            <summary>Задает оболочка совместимости XLColor.get_Tumbleweed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TurkishRoseGet">
            <summary>Задает оболочка совместимости XLColor.get_TurkishRose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.Turquoise1Get">
            <summary>Задает оболочка совместимости XLColor.get_Turquoise1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TurquoiseBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_TurquoiseBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TurquoiseGet">
            <summary>Задает оболочка совместимости XLColor.get_Turquoise()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TurquoiseGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_TurquoiseGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TuscanRedGet">
            <summary>Задает оболочка совместимости XLColor.get_TuscanRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TwilightLavenderGet">
            <summary>Задает оболочка совместимости XLColor.get_TwilightLavender()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.TyrianPurpleGet">
            <summary>Задает оболочка совместимости XLColor.get_TyrianPurple()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UaBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_UaBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UaRedGet">
            <summary>Задает оболочка совместимости XLColor.get_UaRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UbeGet">
            <summary>Задает оболочка совместимости XLColor.get_Ube()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UclaBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_UclaBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UclaGoldGet">
            <summary>Задает оболочка совместимости XLColor.get_UclaGold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UfoGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_UfoGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UltraPinkGet">
            <summary>Задает оболочка совместимости XLColor.get_UltraPink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UltramarineBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_UltramarineBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UltramarineGet">
            <summary>Задает оболочка совместимости XLColor.get_Ultramarine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UmberGet">
            <summary>Задает оболочка совместимости XLColor.get_Umber()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UnitedNationsBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_UnitedNationsBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UnmellowYellowGet">
            <summary>Задает оболочка совместимости XLColor.get_UnmellowYellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UpForestGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_UpForestGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UpMaroonGet">
            <summary>Задает оболочка совместимости XLColor.get_UpMaroon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UpsdellRedGet">
            <summary>Задает оболочка совместимости XLColor.get_UpsdellRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UrobilinGet">
            <summary>Задает оболочка совместимости XLColor.get_Urobilin()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UscCardinalGet">
            <summary>Задает оболочка совместимости XLColor.get_UscCardinal()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UscGoldGet">
            <summary>Задает оболочка совместимости XLColor.get_UscGold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.UtahCrimsonGet">
            <summary>Задает оболочка совместимости XLColor.get_UtahCrimson()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VanillaGet">
            <summary>Задает оболочка совместимости XLColor.get_Vanilla()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VegasGoldGet">
            <summary>Задает оболочка совместимости XLColor.get_VegasGold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VenetianRedGet">
            <summary>Задает оболочка совместимости XLColor.get_VenetianRed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VerdigrisGet">
            <summary>Задает оболочка совместимости XLColor.get_Verdigris()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VermilionGet">
            <summary>Задает оболочка совместимости XLColor.get_Vermilion()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VeronicaGet">
            <summary>Задает оболочка совместимости XLColor.get_Veronica()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.Violet1Get">
            <summary>Задает оболочка совместимости XLColor.get_Violet1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VioletColorWheelGet">
            <summary>Задает оболочка совместимости XLColor.get_VioletColorWheel()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VioletGet">
            <summary>Задает оболочка совместимости XLColor.get_Violet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VioletRybGet">
            <summary>Задает оболочка совместимости XLColor.get_VioletRyb()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ViridianGet">
            <summary>Задает оболочка совместимости XLColor.get_Viridian()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VividAuburnGet">
            <summary>Задает оболочка совместимости XLColor.get_VividAuburn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VividBurgundyGet">
            <summary>Задает оболочка совместимости XLColor.get_VividBurgundy()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VividCeriseGet">
            <summary>Задает оболочка совместимости XLColor.get_VividCerise()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VividTangerineGet">
            <summary>Задает оболочка совместимости XLColor.get_VividTangerine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.VividVioletGet">
            <summary>Задает оболочка совместимости XLColor.get_VividViolet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.WarmBlackGet">
            <summary>Задает оболочка совместимости XLColor.get_WarmBlack()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.WengeGet">
            <summary>Задает оболочка совместимости XLColor.get_Wenge()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.WheatGet">
            <summary>Задает оболочка совместимости XLColor.get_Wheat()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.WhiteGet">
            <summary>Задает оболочка совместимости XLColor.get_White()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.WhiteSmokeGet">
            <summary>Задает оболочка совместимости XLColor.get_WhiteSmoke()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.WildBlueYonderGet">
            <summary>Задает оболочка совместимости XLColor.get_WildBlueYonder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.WildStrawberryGet">
            <summary>Задает оболочка совместимости XLColor.get_WildStrawberry()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.WildWatermelonGet">
            <summary>Задает оболочка совместимости XLColor.get_WildWatermelon()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.WisteriaGet">
            <summary>Задает оболочка совместимости XLColor.get_Wisteria()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.XanaduGet">
            <summary>Задает оболочка совместимости XLColor.get_Xanadu()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.YaleBlueGet">
            <summary>Задает оболочка совместимости XLColor.get_YaleBlue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.YellowGet">
            <summary>Задает оболочка совместимости XLColor.get_Yellow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.YellowGreenGet">
            <summary>Задает оболочка совместимости XLColor.get_YellowGreen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.YellowMunsellGet">
            <summary>Задает оболочка совместимости XLColor.get_YellowMunsell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.YellowNcsGet">
            <summary>Задает оболочка совместимости XLColor.get_YellowNcs()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.YellowProcessGet">
            <summary>Задает оболочка совместимости XLColor.get_YellowProcess()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.YellowRybGet">
            <summary>Задает оболочка совместимости XLColor.get_YellowRyb()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ZaffreGet">
            <summary>Задает оболочка совместимости XLColor.get_Zaffre()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.ZinnwalditeBrownGet">
            <summary>Задает оболочка совместимости XLColor.get_ZinnwalditeBrown()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.ColorGet">
            <summary>Задает оболочка совместимости XLColor.get_Color()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.ColorTypeGet">
            <summary>Задает оболочка совместимости XLColor.get_ColorType()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.EqualsObject">
            <summary>Задает оболочка совместимости XLColor.Equals(Object obj)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.EqualsXLColor">
            <summary>Задает оболочка совместимости XLColor.Equals(XLColor other)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.GetHashCode01">
            <summary>Задает оболочка совместимости XLColor.GetHashCode()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.HasValueGet">
            <summary>Задает оболочка совместимости XLColor.get_HasValue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.HasValueSetBoolean">
            <summary>Задает оболочка совместимости XLColor.set_HasValue(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.IndexedGet">
            <summary>Задает оболочка совместимости XLColor.get_Indexed()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.ThemeColorGet">
            <summary>Задает оболочка совместимости XLColor.get_ThemeColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.ThemeTintGet">
            <summary>Задает оболочка совместимости XLColor.get_ThemeTint()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLColor.AllInstances.ToString01">
            <summary>Задает оболочка совместимости XLColor.ToString()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLDateCriteria">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLDateCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDateCriteria.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDateCriteria.#ctor(ClosedXML.Excel.XLDateCriteria)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDateCriteria.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDateCriteria.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDateCriteria.Bind(ClosedXML.Excel.IXLValidationCriteria)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.BetweenDateTimeDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.Between(DateTime minValue, DateTime maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.ConstructorIXLDataValidation">
            <summary>Задает оболочка совместимости XLDateCriteria.XLDateCriteria(IXLDataValidation dataValidation)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.EqualOrGreaterThanDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.EqualOrGreaterThan(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.EqualOrLessThanDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.EqualOrLessThan(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.EqualToDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.EqualTo(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.GreaterThanDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.GreaterThan(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.LessThanDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.LessThan(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.NotBetweenDateTimeDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.NotBetween(DateTime minValue, DateTime maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.NotEqualToDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.NotEqualTo(DateTime value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLDateCriteria.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.AllInstances.BetweenDateTimeDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.Between(DateTime minValue, DateTime maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.AllInstances.EqualOrGreaterThanDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.EqualOrGreaterThan(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.AllInstances.EqualOrLessThanDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.EqualOrLessThan(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.AllInstances.EqualToDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.EqualTo(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.AllInstances.GreaterThanDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.GreaterThan(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.AllInstances.LessThanDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.LessThan(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.AllInstances.NotBetweenDateTimeDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.NotBetween(DateTime minValue, DateTime maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDateCriteria.AllInstances.NotEqualToDateTime">
            <summary>Задает оболочка совместимости XLDateCriteria.NotEqualTo(DateTime value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLDecimalCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.#ctor(ClosedXML.Excel.XLDecimalCriteria)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.Bind(ClosedXML.Excel.IXLValidationCriteria)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.BetweenDoubleDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.Between(Double minValue, Double maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.ConstructorIXLDataValidation">
            <summary>Задает оболочка совместимости XLDecimalCriteria.XLDecimalCriteria(IXLDataValidation dataValidation)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.EqualOrGreaterThanDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.EqualOrGreaterThan(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.EqualOrLessThanDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.EqualOrLessThan(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.EqualToDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.EqualTo(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.GreaterThanDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.GreaterThan(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.LessThanDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.LessThan(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.NotBetweenDoubleDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.NotBetween(Double minValue, Double maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.NotEqualToDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.NotEqualTo(Double value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.AllInstances.BetweenDoubleDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.Between(Double minValue, Double maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.AllInstances.EqualOrGreaterThanDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.EqualOrGreaterThan(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.AllInstances.EqualOrLessThanDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.EqualOrLessThan(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.AllInstances.EqualToDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.EqualTo(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.AllInstances.GreaterThanDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.GreaterThan(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.AllInstances.LessThanDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.LessThan(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.AllInstances.NotBetweenDoubleDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.NotBetween(Double minValue, Double maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDecimalCriteria.AllInstances.NotEqualToDouble">
            <summary>Задает оболочка совместимости XLDecimalCriteria.NotEqualTo(Double value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLDictionary`1">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLDictionary`1</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.#ctor(ClosedXML.Excel.XLDictionary{`0})">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Collections.ICollection)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Collections.IDictionary)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Int32,`0}})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,`0}})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Int32,`0}})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Collections.Generic.IDictionary{System.Int32,`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Collections.Generic.IReadOnlyDictionary{System.Int32,`0})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDictionary`1.AddT0">
            <summary>Задает оболочка совместимости XLDictionary`1.Add(!0 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDictionary`1.Constructor">
            <summary>Задает оболочка совместимости XLDictionary`1.XLDictionary`1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDictionary`1.ConstructorXLDictionaryOfT0">
            <summary>Задает оболочка совместимости XLDictionary`1.XLDictionary`1(XLDictionary`1&lt;!0&gt; other)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDictionary`1.InitializeT0">
            <summary>Задает оболочка совместимости XLDictionary`1.Initialize(!0 value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLDictionary`1.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDictionary`1.AllInstances.AddT0">
            <summary>Задает оболочка совместимости XLDictionary`1.Add(!0 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLDictionary`1.AllInstances.InitializeT0">
            <summary>Задает оболочка совместимости XLDictionary`1.Initialize(!0 value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLFormula">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLFormula</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLFormula.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLFormula.#ctor(ClosedXML.Excel.XLFormula)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLFormula.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLFormula.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.Constructor">
            <summary>Задает оболочка совместимости XLFormula.XLFormula()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.ConstructorDouble">
            <summary>Задает оболочка совместимости XLFormula.XLFormula(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.ConstructorInt32">
            <summary>Задает оболочка совместимости XLFormula.XLFormula(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.ConstructorString">
            <summary>Задает оболочка совместимости XLFormula.XLFormula(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.ConstructorXLFormula">
            <summary>Задает оболочка совместимости XLFormula.XLFormula(XLFormula defaultFormula)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.IsFormulaGet">
            <summary>Задает оболочка совместимости XLFormula.get_IsFormula()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.IsFormulaSetBoolean">
            <summary>Задает оболочка совместимости XLFormula.set_IsFormula(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.ValueGet">
            <summary>Задает оболочка совместимости XLFormula.get_Value()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.ValueSetString">
            <summary>Задает оболочка совместимости XLFormula.set_Value(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLFormula.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.AllInstances.IsFormulaGet">
            <summary>Задает оболочка совместимости XLFormula.get_IsFormula()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.AllInstances.IsFormulaSetBoolean">
            <summary>Задает оболочка совместимости XLFormula.set_IsFormula(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.AllInstances.ValueGet">
            <summary>Задает оболочка совместимости XLFormula.get_Value()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLFormula.AllInstances.ValueSetString">
            <summary>Задает оболочка совместимости XLFormula.set_Value(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLHelper">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLHelper</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLHelper.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLHelper.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLHelper.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.AreEqualDoubleDouble">
            <summary>Задает оболочка совместимости XLHelper.AreEqual(Double d1, Double d2)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.EvaluatorMatchInt32String">
            <summary>Задает оболочка совместимости XLHelper.Evaluator(Match match, Int32 row, String column)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.GetColumnLetterFromNumberInt32">
            <summary>Задает оболочка совместимости XLHelper.GetColumnLetterFromNumber(Int32 columnNumber)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.GetColumnNumberFromAddressString">
            <summary>Задает оболочка совместимости XLHelper.GetColumnNumberFromAddress(String cellAddressString)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.GetColumnNumberFromLetterString">
            <summary>Задает оболочка совместимости XLHelper.GetColumnNumberFromLetter(String columnLetter)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.GetDateObject">
            <summary>Задает оболочка совместимости XLHelper.GetDate(Object v)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.GetPtFromPxDouble">
            <summary>Задает оболочка совместимости XLHelper.GetPtFromPx(Double px)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.GetPxFromPtInt32">
            <summary>Задает оболочка совместимости XLHelper.GetPxFromPt(Int32 pt)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.IsNullOrWhiteSpaceString">
            <summary>Задает оболочка совместимости XLHelper.IsNullOrWhiteSpace(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.IsValidA1AddressString">
            <summary>Задает оболочка совместимости XLHelper.IsValidA1Address(String address)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.IsValidColumnString">
            <summary>Задает оболочка совместимости XLHelper.IsValidColumn(String column)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.IsValidRangeAddressIXLRangeAddress">
            <summary>Задает оболочка совместимости XLHelper.IsValidRangeAddress(IXLRangeAddress rangeAddress)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.IsValidRangeAddressString">
            <summary>Задает оболочка совместимости XLHelper.IsValidRangeAddress(String rangeAddress)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.IsValidRowString">
            <summary>Задает оболочка совместимости XLHelper.IsValidRow(String rowString)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.ReplaceGroupStringString">
            <summary>Задает оболочка совместимости XLHelper.ReplaceGroup(String value, String item)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.ReplaceRelativeStringInt32String">
            <summary>Задает оболочка совместимости XLHelper.ReplaceRelative(String value, Int32 row, String column)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.SplitRangeString">
            <summary>Задает оболочка совместимости XLHelper.SplitRange(String range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHelper.StaticConstructor">
            <summary>Задает оболочка совместимости XLHelper.XLHelper()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLHyperlink">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLHyperlink</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLHyperlink.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLHyperlink.#ctor(ClosedXML.Excel.XLHyperlink)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLHyperlink.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLHyperlink.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.CellGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_Cell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.CellSetIXLCell">
            <summary>Задает оболочка совместимости XLHyperlink.set_Cell(IXLCell value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.Constructor">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ConstructorIXLCell">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ConstructorIXLCellString">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink(IXLCell cell, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ConstructorIXLRangeBase">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink(IXLRangeBase range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ConstructorIXLRangeBaseString">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink(IXLRangeBase range, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ConstructorString">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink(String address)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ConstructorStringString">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink(String address, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ConstructorUri">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink(Uri uri)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ConstructorUriString">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink(Uri uri, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ConstructorXLHyperlink">
            <summary>Задает оболочка совместимости XLHyperlink.XLHyperlink(XLHyperlink hyperlink)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.Delete">
            <summary>Задает оболочка совместимости XLHyperlink.Delete()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ExternalAddressGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_ExternalAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.ExternalAddressSetUri">
            <summary>Задает оболочка совместимости XLHyperlink.set_ExternalAddress(Uri value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.InternalAddressGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_InternalAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.InternalAddressSetString">
            <summary>Задает оболочка совместимости XLHyperlink.set_InternalAddress(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.IsExternalGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_IsExternal()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.IsExternalSetBoolean">
            <summary>Задает оболочка совместимости XLHyperlink.set_IsExternal(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.SetValuesIXLCellString">
            <summary>Задает оболочка совместимости XLHyperlink.SetValues(IXLCell cell, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.SetValuesIXLRangeBaseString">
            <summary>Задает оболочка совместимости XLHyperlink.SetValues(IXLRangeBase range, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.SetValuesStringString">
            <summary>Задает оболочка совместимости XLHyperlink.SetValues(String address, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.SetValuesUriString">
            <summary>Задает оболочка совместимости XLHyperlink.SetValues(Uri uri, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.TooltipGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_Tooltip()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.TooltipSetString">
            <summary>Задает оболочка совместимости XLHyperlink.set_Tooltip(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.CellGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_Cell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.CellSetIXLCell">
            <summary>Задает оболочка совместимости XLHyperlink.set_Cell(IXLCell value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.Delete">
            <summary>Задает оболочка совместимости XLHyperlink.Delete()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.ExternalAddressGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_ExternalAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.ExternalAddressSetUri">
            <summary>Задает оболочка совместимости XLHyperlink.set_ExternalAddress(Uri value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.InternalAddressGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_InternalAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.InternalAddressSetString">
            <summary>Задает оболочка совместимости XLHyperlink.set_InternalAddress(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.IsExternalGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_IsExternal()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.IsExternalSetBoolean">
            <summary>Задает оболочка совместимости XLHyperlink.set_IsExternal(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.SetValuesIXLCellString">
            <summary>Задает оболочка совместимости XLHyperlink.SetValues(IXLCell cell, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.SetValuesIXLRangeBaseString">
            <summary>Задает оболочка совместимости XLHyperlink.SetValues(IXLRangeBase range, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.SetValuesStringString">
            <summary>Задает оболочка совместимости XLHyperlink.SetValues(String address, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.SetValuesUriString">
            <summary>Задает оболочка совместимости XLHyperlink.SetValues(Uri uri, String tooltip)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.TooltipGet">
            <summary>Задает оболочка совместимости XLHyperlink.get_Tooltip()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLHyperlink.AllInstances.TooltipSetString">
            <summary>Задает оболочка совместимости XLHyperlink.set_Tooltip(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLPivotField">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLPivotField</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotField.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotField.#ctor(ClosedXML.Excel.XLPivotField)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotField.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotField.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotField.Bind(ClosedXML.Excel.IXLPivotField)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AddSubtotalXLSubtotalFunction">
            <summary>Задает оболочка совместимости XLPivotField.AddSubtotal(XLSubtotalFunction value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.ConstructorString">
            <summary>Задает оболочка совместимости XLPivotField.XLPivotField(String sourceName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.CustomNameGet">
            <summary>Задает оболочка совместимости XLPivotField.get_CustomName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.CustomNameSetString">
            <summary>Задает оболочка совместимости XLPivotField.set_CustomName(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.IncludeNewItemsInFilterGet">
            <summary>Задает оболочка совместимости XLPivotField.get_IncludeNewItemsInFilter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.IncludeNewItemsInFilterSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_IncludeNewItemsInFilter(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.InsertBlankLinesGet">
            <summary>Задает оболочка совместимости XLPivotField.get_InsertBlankLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.InsertBlankLinesSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_InsertBlankLines(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.InsertPageBreaksGet">
            <summary>Задает оболочка совместимости XLPivotField.get_InsertPageBreaks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.InsertPageBreaksSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_InsertPageBreaks(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.LayoutGet">
            <summary>Задает оболочка совместимости XLPivotField.get_Layout()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.LayoutSetXLPivotLayout">
            <summary>Задает оболочка совместимости XLPivotField.set_Layout(XLPivotLayout value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.RepeatItemLabelsGet">
            <summary>Задает оболочка совместимости XLPivotField.get_RepeatItemLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.RepeatItemLabelsSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_RepeatItemLabels(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetCustomNameString">
            <summary>Задает оболочка совместимости XLPivotField.SetCustomName(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetIncludeNewItemsInFilter">
            <summary>Задает оболочка совместимости XLPivotField.SetIncludeNewItemsInFilter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetIncludeNewItemsInFilterBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetIncludeNewItemsInFilter(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetInsertBlankLines">
            <summary>Задает оболочка совместимости XLPivotField.SetInsertBlankLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetInsertBlankLinesBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetInsertBlankLines(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetInsertPageBreaks">
            <summary>Задает оболочка совместимости XLPivotField.SetInsertPageBreaks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetInsertPageBreaksBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetInsertPageBreaks(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetLayoutXLPivotLayout">
            <summary>Задает оболочка совместимости XLPivotField.SetLayout(XLPivotLayout value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetRepeatItemLabels">
            <summary>Задает оболочка совместимости XLPivotField.SetRepeatItemLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetRepeatItemLabelsBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetRepeatItemLabels(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetShowBlankItems">
            <summary>Задает оболочка совместимости XLPivotField.SetShowBlankItems()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetShowBlankItemsBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetShowBlankItems(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetSubtotalsAtTop">
            <summary>Задает оболочка совместимости XLPivotField.SetSubtotalsAtTop()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SetSubtotalsAtTopBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetSubtotalsAtTop(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SharedStringsGet">
            <summary>Задает оболочка совместимости XLPivotField.get_SharedStrings()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SharedStringsSetListOfString">
            <summary>Задает оболочка совместимости XLPivotField.set_SharedStrings(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.ShowBlankItemsGet">
            <summary>Задает оболочка совместимости XLPivotField.get_ShowBlankItems()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.ShowBlankItemsSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_ShowBlankItems(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SourceNameGet">
            <summary>Задает оболочка совместимости XLPivotField.get_SourceName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SourceNameSetString">
            <summary>Задает оболочка совместимости XLPivotField.set_SourceName(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SubtotalsAtTopGet">
            <summary>Задает оболочка совместимости XLPivotField.get_SubtotalsAtTop()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SubtotalsAtTopSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_SubtotalsAtTop(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SubtotalsGet">
            <summary>Задает оболочка совместимости XLPivotField.get_Subtotals()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.SubtotalsSetListOfXLSubtotalFunction">
            <summary>Задает оболочка совместимости XLPivotField.set_Subtotals(List`1&lt;XLSubtotalFunction&gt; value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.AddSubtotalXLSubtotalFunction">
            <summary>Задает оболочка совместимости XLPivotField.AddSubtotal(XLSubtotalFunction value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.CustomNameGet">
            <summary>Задает оболочка совместимости XLPivotField.get_CustomName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.CustomNameSetString">
            <summary>Задает оболочка совместимости XLPivotField.set_CustomName(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.IncludeNewItemsInFilterGet">
            <summary>Задает оболочка совместимости XLPivotField.get_IncludeNewItemsInFilter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.IncludeNewItemsInFilterSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_IncludeNewItemsInFilter(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.InsertBlankLinesGet">
            <summary>Задает оболочка совместимости XLPivotField.get_InsertBlankLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.InsertBlankLinesSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_InsertBlankLines(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.InsertPageBreaksGet">
            <summary>Задает оболочка совместимости XLPivotField.get_InsertPageBreaks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.InsertPageBreaksSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_InsertPageBreaks(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.LayoutGet">
            <summary>Задает оболочка совместимости XLPivotField.get_Layout()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.LayoutSetXLPivotLayout">
            <summary>Задает оболочка совместимости XLPivotField.set_Layout(XLPivotLayout value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.RepeatItemLabelsGet">
            <summary>Задает оболочка совместимости XLPivotField.get_RepeatItemLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.RepeatItemLabelsSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_RepeatItemLabels(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetCustomNameString">
            <summary>Задает оболочка совместимости XLPivotField.SetCustomName(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetIncludeNewItemsInFilter">
            <summary>Задает оболочка совместимости XLPivotField.SetIncludeNewItemsInFilter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetIncludeNewItemsInFilterBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetIncludeNewItemsInFilter(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetInsertBlankLines">
            <summary>Задает оболочка совместимости XLPivotField.SetInsertBlankLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetInsertBlankLinesBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetInsertBlankLines(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetInsertPageBreaks">
            <summary>Задает оболочка совместимости XLPivotField.SetInsertPageBreaks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetInsertPageBreaksBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetInsertPageBreaks(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetLayoutXLPivotLayout">
            <summary>Задает оболочка совместимости XLPivotField.SetLayout(XLPivotLayout value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetRepeatItemLabels">
            <summary>Задает оболочка совместимости XLPivotField.SetRepeatItemLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetRepeatItemLabelsBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetRepeatItemLabels(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetShowBlankItems">
            <summary>Задает оболочка совместимости XLPivotField.SetShowBlankItems()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetShowBlankItemsBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetShowBlankItems(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetSubtotalsAtTop">
            <summary>Задает оболочка совместимости XLPivotField.SetSubtotalsAtTop()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SetSubtotalsAtTopBoolean">
            <summary>Задает оболочка совместимости XLPivotField.SetSubtotalsAtTop(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SharedStringsGet">
            <summary>Задает оболочка совместимости XLPivotField.get_SharedStrings()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SharedStringsSetListOfString">
            <summary>Задает оболочка совместимости XLPivotField.set_SharedStrings(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.ShowBlankItemsGet">
            <summary>Задает оболочка совместимости XLPivotField.get_ShowBlankItems()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.ShowBlankItemsSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_ShowBlankItems(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SourceNameGet">
            <summary>Задает оболочка совместимости XLPivotField.get_SourceName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SourceNameSetString">
            <summary>Задает оболочка совместимости XLPivotField.set_SourceName(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SubtotalsAtTopGet">
            <summary>Задает оболочка совместимости XLPivotField.get_SubtotalsAtTop()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SubtotalsAtTopSetBoolean">
            <summary>Задает оболочка совместимости XLPivotField.set_SubtotalsAtTop(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SubtotalsGet">
            <summary>Задает оболочка совместимости XLPivotField.get_Subtotals()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotField.AllInstances.SubtotalsSetListOfXLSubtotalFunction">
            <summary>Задает оболочка совместимости XLPivotField.set_Subtotals(List`1&lt;XLSubtotalFunction&gt; value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLPivotFields">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLPivotFields</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotFields.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotFields.#ctor(ClosedXML.Excel.XLPivotFields)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotFields.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotFields.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotFields.Bind(ClosedXML.Excel.IXLPivotFields)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotFields.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLPivotFields.Bind(System.Collections.Generic.IEnumerable{ClosedXML.Excel.IXLPivotField})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.AddString">
            <summary>Задает оболочка совместимости XLPivotFields.Add(String sourceName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.AddStringString">
            <summary>Задает оболочка совместимости XLPivotFields.Add(String sourceName, String customName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.Clear">
            <summary>Задает оболочка совместимости XLPivotFields.Clear()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.Constructor">
            <summary>Задает оболочка совместимости XLPivotFields.XLPivotFields()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.GetEnumerator">
            <summary>Задает оболочка совместимости XLPivotFields.GetEnumerator()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.IndexOfIXLPivotField">
            <summary>Задает оболочка совместимости XLPivotFields.IndexOf(IXLPivotField pf)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.RemoveString">
            <summary>Задает оболочка совместимости XLPivotFields.Remove(String sourceName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости XLPivotFields.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLPivotFields.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.AllInstances.AddString">
            <summary>Задает оболочка совместимости XLPivotFields.Add(String sourceName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.AllInstances.AddStringString">
            <summary>Задает оболочка совместимости XLPivotFields.Add(String sourceName, String customName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.AllInstances.Clear">
            <summary>Задает оболочка совместимости XLPivotFields.Clear()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.AllInstances.GetEnumerator">
            <summary>Задает оболочка совместимости XLPivotFields.GetEnumerator()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.AllInstances.IndexOfIXLPivotField">
            <summary>Задает оболочка совместимости XLPivotFields.IndexOf(IXLPivotField pf)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.AllInstances.RemoveString">
            <summary>Задает оболочка совместимости XLPivotFields.Remove(String sourceName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLPivotFields.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости XLPivotFields.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLTables">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLTables</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTables.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTables.#ctor(ClosedXML.Excel.XLTables)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTables.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTables.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTables.Bind(ClosedXML.Excel.IXLTables)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTables.Bind(System.Collections.IEnumerable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTables.Bind(System.Collections.Generic.IEnumerable{ClosedXML.Excel.IXLTable})">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.AddIXLTable">
            <summary>Задает оболочка совместимости XLTables.Add(IXLTable table)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.ClearXLClearOptions">
            <summary>Задает оболочка совместимости XLTables.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.Constructor">
            <summary>Задает оболочка совместимости XLTables.XLTables()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.GetEnumerator">
            <summary>Задает оболочка совместимости XLTables.GetEnumerator()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.RemoveInt32">
            <summary>Задает оболочка совместимости XLTables.Remove(Int32 index)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.RemoveString">
            <summary>Задает оболочка совместимости XLTables.Remove(String name)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости XLTables.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.TableInt32">
            <summary>Задает оболочка совместимости XLTables.Table(Int32 index)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.TableString">
            <summary>Задает оболочка совместимости XLTables.Table(String name)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLTables.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.AllInstances.AddIXLTable">
            <summary>Задает оболочка совместимости XLTables.Add(IXLTable table)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.AllInstances.ClearXLClearOptions">
            <summary>Задает оболочка совместимости XLTables.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.AllInstances.GetEnumerator">
            <summary>Задает оболочка совместимости XLTables.GetEnumerator()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.AllInstances.RemoveInt32">
            <summary>Задает оболочка совместимости XLTables.Remove(Int32 index)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.AllInstances.RemoveString">
            <summary>Задает оболочка совместимости XLTables.Remove(String name)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Задает оболочка совместимости XLTables.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.AllInstances.TableInt32">
            <summary>Задает оболочка совместимости XLTables.Table(Int32 index)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTables.AllInstances.TableString">
            <summary>Задает оболочка совместимости XLTables.Table(String name)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLTextLengthCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.#ctor(ClosedXML.Excel.XLTextLengthCriteria)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.Bind(ClosedXML.Excel.IXLValidationCriteria)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.BetweenInt32Int32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.Between(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.ConstructorIXLDataValidation">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.XLTextLengthCriteria(IXLDataValidation dataValidation)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.EqualOrGreaterThanInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.EqualOrGreaterThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.EqualOrLessThanInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.EqualOrLessThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.EqualToInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.EqualTo(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.GreaterThanInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.GreaterThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.LessThanInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.LessThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.NotBetweenInt32Int32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.NotBetween(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.NotEqualToInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.NotEqualTo(Int32 value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.AllInstances.BetweenInt32Int32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.Between(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.AllInstances.EqualOrGreaterThanInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.EqualOrGreaterThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.AllInstances.EqualOrLessThanInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.EqualOrLessThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.AllInstances.EqualToInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.EqualTo(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.AllInstances.GreaterThanInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.GreaterThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.AllInstances.LessThanInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.LessThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.AllInstances.NotBetweenInt32Int32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.NotBetween(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTextLengthCriteria.AllInstances.NotEqualToInt32">
            <summary>Задает оболочка совместимости XLTextLengthCriteria.NotEqualTo(Int32 value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLTimeCriteria">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLTimeCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.#ctor(ClosedXML.Excel.XLTimeCriteria)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.Bind(ClosedXML.Excel.IXLValidationCriteria)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.BetweenTimeSpanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.Between(TimeSpan minValue, TimeSpan maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.ConstructorIXLDataValidation">
            <summary>Задает оболочка совместимости XLTimeCriteria.XLTimeCriteria(IXLDataValidation dataValidation)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.EqualOrGreaterThanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.EqualOrGreaterThan(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.EqualOrLessThanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.EqualOrLessThan(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.EqualToTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.EqualTo(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.GetXLTimeTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.GetXLTime(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.GreaterThanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.GreaterThan(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.LessThanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.LessThan(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.NotBetweenTimeSpanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.NotBetween(TimeSpan minValue, TimeSpan maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.NotEqualToTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.NotEqualTo(TimeSpan value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.AllInstances.BetweenTimeSpanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.Between(TimeSpan minValue, TimeSpan maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.AllInstances.EqualOrGreaterThanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.EqualOrGreaterThan(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.AllInstances.EqualOrLessThanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.EqualOrLessThan(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.AllInstances.EqualToTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.EqualTo(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.AllInstances.GreaterThanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.GreaterThan(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.AllInstances.LessThanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.LessThan(TimeSpan value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.AllInstances.NotBetweenTimeSpanTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.NotBetween(TimeSpan minValue, TimeSpan maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLTimeCriteria.AllInstances.NotEqualToTimeSpan">
            <summary>Задает оболочка совместимости XLTimeCriteria.NotEqualTo(TimeSpan value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLValidationCriteria">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLValidationCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.#ctor(ClosedXML.Excel.XLValidationCriteria)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.Bind(ClosedXML.Excel.IXLValidationCriteria)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.BetweenIXLCellIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.Between(IXLCell minValue, IXLCell maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.BetweenIXLRangeIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.Between(IXLRange minValue, IXLRange maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.BetweenStringString">
            <summary>Задает оболочка совместимости XLValidationCriteria.Between(String minValue, String maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.ConstructorIXLDataValidation">
            <summary>Задает оболочка совместимости XLValidationCriteria.XLValidationCriteria(IXLDataValidation dataValidation)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.EqualOrGreaterThanIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrGreaterThan(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.EqualOrGreaterThanIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrGreaterThan(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.EqualOrGreaterThanString">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrGreaterThan(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.EqualOrLessThanIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrLessThan(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.EqualOrLessThanIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrLessThan(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.EqualOrLessThanString">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrLessThan(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.EqualToIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualTo(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.EqualToIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualTo(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.EqualToString">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualTo(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.GreaterThanIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.GreaterThan(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.GreaterThanIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.GreaterThan(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.GreaterThanString">
            <summary>Задает оболочка совместимости XLValidationCriteria.GreaterThan(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.LessThanIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.LessThan(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.LessThanIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.LessThan(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.LessThanString">
            <summary>Задает оболочка совместимости XLValidationCriteria.LessThan(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.NotBetweenIXLCellIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotBetween(IXLCell minValue, IXLCell maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.NotBetweenIXLRangeIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotBetween(IXLRange minValue, IXLRange maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.NotBetweenStringString">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotBetween(String minValue, String maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.NotEqualToIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotEqualTo(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.NotEqualToIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotEqualTo(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.NotEqualToString">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotEqualTo(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.BetweenIXLCellIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.Between(IXLCell minValue, IXLCell maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.BetweenIXLRangeIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.Between(IXLRange minValue, IXLRange maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.BetweenStringString">
            <summary>Задает оболочка совместимости XLValidationCriteria.Between(String minValue, String maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.EqualOrGreaterThanIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrGreaterThan(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.EqualOrGreaterThanIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrGreaterThan(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.EqualOrGreaterThanString">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrGreaterThan(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.EqualOrLessThanIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrLessThan(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.EqualOrLessThanIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrLessThan(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.EqualOrLessThanString">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualOrLessThan(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.EqualToIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualTo(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.EqualToIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualTo(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.EqualToString">
            <summary>Задает оболочка совместимости XLValidationCriteria.EqualTo(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.GreaterThanIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.GreaterThan(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.GreaterThanIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.GreaterThan(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.GreaterThanString">
            <summary>Задает оболочка совместимости XLValidationCriteria.GreaterThan(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.LessThanIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.LessThan(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.LessThanIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.LessThan(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.LessThanString">
            <summary>Задает оболочка совместимости XLValidationCriteria.LessThan(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.NotBetweenIXLCellIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotBetween(IXLCell minValue, IXLCell maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.NotBetweenIXLRangeIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotBetween(IXLRange minValue, IXLRange maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.NotBetweenStringString">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotBetween(String minValue, String maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.NotEqualToIXLCell">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotEqualTo(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.NotEqualToIXLRange">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotEqualTo(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLValidationCriteria.AllInstances.NotEqualToString">
            <summary>Задает оболочка совместимости XLValidationCriteria.NotEqualTo(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLWholeNumberCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.#ctor(ClosedXML.Excel.XLWholeNumberCriteria)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.Bind(ClosedXML.Excel.IXLValidationCriteria)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.BetweenInt32Int32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.Between(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.ConstructorIXLDataValidation">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.XLWholeNumberCriteria(IXLDataValidation dataValidation)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.EqualOrGreaterThanInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.EqualOrGreaterThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.EqualOrLessThanInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.EqualOrLessThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.EqualToInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.EqualTo(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.GreaterThanInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.GreaterThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.LessThanInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.LessThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.NotBetweenInt32Int32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.NotBetween(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.NotEqualToInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.NotEqualTo(Int32 value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.AllInstances.BetweenInt32Int32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.Between(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.AllInstances.EqualOrGreaterThanInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.EqualOrGreaterThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.AllInstances.EqualOrLessThanInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.EqualOrLessThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.AllInstances.EqualToInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.EqualTo(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.AllInstances.GreaterThanInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.GreaterThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.AllInstances.LessThanInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.LessThan(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.AllInstances.NotBetweenInt32Int32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.NotBetween(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWholeNumberCriteria.AllInstances.NotEqualToInt32">
            <summary>Задает оболочка совместимости XLWholeNumberCriteria.NotEqualTo(Int32 value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLWorkbook">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLWorkbook</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.#ctor(ClosedXML.Excel.XLWorkbook)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.Bind(System.IDisposable)">
            <summary>Привязка членов интерфейса к оболочке совместимости.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadClientDataAnchorOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadClientDataAnchor(IXLDrawing`1&lt;!!0&gt; drawing, XElement anchor)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadClientDataOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadClientData(IXLDrawing`1&lt;!!0&gt; drawing, XElement clientData)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadColorsAndLinesOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadColorsAndLines(IXLDrawing`1&lt;!!0&gt; drawing, XElement shape)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadDrawingHAlignmentOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadDrawingHAlignment(IXLDrawing`1&lt;!!0&gt; drawing, XElement clientData)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadDrawingPositioningOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadDrawingPositioning(IXLDrawing`1&lt;!!0&gt; drawing, XElement clientData)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadDrawingProtectionOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadDrawingProtection(IXLDrawing`1&lt;!!0&gt; drawing, XElement clientData)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadDrawingVAlignmentOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadDrawingVAlignment(IXLDrawing`1&lt;!!0&gt; drawing, XElement clientData)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadShapePropertiesOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadShapeProperties(IXLDrawing`1&lt;!!0&gt; xlDrawing, XElement shape)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadTextBoxInsetOf1IXLDrawingOfM0XAttribute``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XAttribute})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadTextBoxInset(IXLDrawing`1&lt;!!0&gt; xlDrawing, XAttribute attInset)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadTextBoxOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadTextBox(IXLDrawing`1&lt;!!0&gt; xlDrawing, XElement textBox)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadTextBoxStyleOf1IXLDrawingOfM0XAttribute``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XAttribute})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadTextBoxStyle(IXLDrawing`1&lt;!!0&gt; xlDrawing, XAttribute attStyle)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadClientDatab__14Of1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadClientData&gt;b__14(XElement e)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadClientDatab__15Of1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadClientData&gt;b__15(XElement e)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadColorsAndLinesb__12Of1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadColorsAndLines&gt;b__12(XElement e)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadColorsAndLinesb__13Of1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadColorsAndLines&gt;b__13(XElement e)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadDrawingHAlignmentb__16Of1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadDrawingHAlignment&gt;b__16(XElement e)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadDrawingPositioningb__1aOf1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadDrawingPositioning&gt;b__1a(XElement e)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadDrawingPositioningb__1bOf1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadDrawingPositioning&gt;b__1b(XElement e)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadDrawingProtectionb__18Of1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadDrawingProtection&gt;b__18(XElement e)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadDrawingProtectionb__19Of1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadDrawingProtection&gt;b__19(XElement e)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadDrawingVAlignmentb__17Of1XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Xml.Linq.XElement,System.Boolean})">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadDrawingVAlignment&gt;b__17(XElement e)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AddWorksheetDataSet">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(DataSet dataSet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AddWorksheetDataTable">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(DataTable dataTable)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AddWorksheetDataTableString">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(DataTable dataTable, String sheetName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AddWorksheetIXLWorksheet">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(IXLWorksheet worksheet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AddWorksheetString">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(String sheetName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AddWorksheetStringInt32">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(String sheetName, Int32 position)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AlignmentsAreEqualAlignmentIXLAlignment">
            <summary>Задает оболочка совместимости XLWorkbook.AlignmentsAreEqual(Alignment alignment, IXLAlignment xlAlignment)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AuthorGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Author()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AuthorSetString">
            <summary>Задает оболочка совместимости XLWorkbook.set_Author(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.BordersAreEqualBorderIXLBorder">
            <summary>Задает оболочка совместимости XLWorkbook.BordersAreEqual(Border b, IXLBorder xlBorder)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CalculateModeGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_CalculateMode()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CalculateModeSetXLCalculateMode">
            <summary>Задает оболочка совместимости XLWorkbook.set_CalculateMode(XLCalculateMode value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CellSetValueBehaviorGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_CellSetValueBehavior()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CellSetValueBehaviorSetXLCellSetValueBehavior">
            <summary>Задает оболочка совместимости XLWorkbook.set_CellSetValueBehavior(XLCellSetValueBehavior value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CellString">
            <summary>Задает оболочка совместимости XLWorkbook.Cell(String namedCell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CellsString">
            <summary>Задает оболочка совместимости XLWorkbook.Cells(String namedCells)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CollapseColumnsColumnsDictionaryOfUInt32Column">
            <summary>Задает оболочка совместимости XLWorkbook.CollapseColumns(Columns columns, Dictionary`2&lt;UInt32,Column&gt; sheetColumns)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ColumnWidthGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ColumnWidth()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ColumnWidthSetDouble">
            <summary>Задает оболочка совместимости XLWorkbook.set_ColumnWidth(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ColumnsAreEqualColumnColumn">
            <summary>Задает оболочка совместимости XLWorkbook.ColumnsAreEqual(Column left, Column right)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.Constructor">
            <summary>Задает оболочка совместимости XLWorkbook.XLWorkbook()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ConstructorStream">
            <summary>Задает оболочка совместимости XLWorkbook.XLWorkbook(Stream stream)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ConstructorStreamXLEventTracking">
            <summary>Задает оболочка совместимости XLWorkbook.XLWorkbook(Stream stream, XLEventTracking eventTracking)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ConstructorString">
            <summary>Задает оболочка совместимости XLWorkbook.XLWorkbook(String file)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ConstructorStringXLEventTracking">
            <summary>Задает оболочка совместимости XLWorkbook.XLWorkbook(String file, XLEventTracking eventTracking)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ConstructorXLEventTracking">
            <summary>Задает оболочка совместимости XLWorkbook.XLWorkbook(XLEventTracking eventTracking)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CopyStreamStreamStream">
            <summary>Задает оболочка совместимости XLWorkbook.CopyStream(Stream input, Stream output)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CreatePackageStreamBooleanSpreadsheetDocumentType">
            <summary>Задает оболочка совместимости XLWorkbook.CreatePackage(Stream stream, Boolean newStream, SpreadsheetDocumentType spreadsheetDocumentType)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CreatePackageStringSpreadsheetDocumentType">
            <summary>Задает оболочка совместимости XLWorkbook.CreatePackage(String filePath, SpreadsheetDocumentType spreadsheetDocumentType)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CreatePartsSpreadsheetDocument">
            <summary>Задает оболочка совместимости XLWorkbook.CreateParts(SpreadsheetDocument document)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CustomPropertiesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_CustomProperties()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CustomPropertiesSetIXLCustomProperties">
            <summary>Задает оболочка совместимости XLWorkbook.set_CustomProperties(IXLCustomProperties value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.CustomPropertyString">
            <summary>Задает оболочка совместимости XLWorkbook.CustomProperty(String name)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultColumnWidthGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultColumnWidth()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultColumnWidthSetDouble">
            <summary>Задает оболочка совместимости XLWorkbook.set_DefaultColumnWidth(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultOutlineGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultOutline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultPageOptionsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultPageOptions()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultRightToLeftGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultRightToLeft()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultRowHeightGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultRowHeight()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultRowHeightSetDouble">
            <summary>Задает оболочка совместимости XLWorkbook.set_DefaultRowHeight(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultShowFormulasGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowFormulas()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultShowGridLinesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowGridLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultShowOutlineSymbolsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowOutlineSymbols()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultShowRowColHeadersGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowRowColHeaders()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultShowRulerGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowRuler()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultShowWhiteSpaceGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowWhiteSpace()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultShowZerosGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowZeros()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.DefaultStyleGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultStyle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.Dispose">
            <summary>Задает оболочка совместимости XLWorkbook.Dispose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.EvaluateExprString">
            <summary>Задает оболочка совместимости XLWorkbook.EvaluateExpr(String expression)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.EvaluateString">
            <summary>Задает оболочка совместимости XLWorkbook.Evaluate(String expression)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.EventTrackingGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_EventTracking()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.EventTrackingSetXLEventTracking">
            <summary>Задает оболочка совместимости XLWorkbook.set_EventTracking(XLEventTracking value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ExtractColorString">
            <summary>Задает оболочка совместимости XLWorkbook.ExtractColor(String color)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.FillDifferentialFormatsCollectionDifferentialFormatsDictionaryOfIXLStyleInt32">
            <summary>Задает оболочка совместимости XLWorkbook.FillDifferentialFormatsCollection(DifferentialFormats differentialFormats, Dictionary`2&lt;IXLStyle,Int32&gt; dictionary)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.FillsAreEqualFillIXLFill">
            <summary>Задает оболочка совместимости XLWorkbook.FillsAreEqual(Fill f, IXLFill xlFill)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.FindCellsFuncOfIXLCellBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.FindCells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.FindColumnsFuncOfIXLColumnBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.FindColumns(Func`2&lt;IXLColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.FindRowsFuncOfIXLRowBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.FindRows(Func`2&lt;IXLRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.FontsAreEqualFontIXLFont">
            <summary>Задает оболочка совместимости XLWorkbook.FontsAreEqual(Font f, IXLFont xlFont)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GenerateCustomFilePropertiesPartContentCustomFilePropertiesPart">
            <summary>Задает оболочка совместимости XLWorkbook.GenerateCustomFilePropertiesPartContent(CustomFilePropertiesPart customFilePropertiesPart1)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GenerateExtendedFilePropertiesPartContentExtendedFilePropertiesPart">
            <summary>Задает оболочка совместимости XLWorkbook.GenerateExtendedFilePropertiesPartContent(ExtendedFilePropertiesPart extendedFilePropertiesPart)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GeneratePivotTableCacheDefinitionPartContentPivotTableCacheDefinitionPartIXLPivotTable">
            <summary>Задает оболочка совместимости XLWorkbook.GeneratePivotTableCacheDefinitionPartContent(PivotTableCacheDefinitionPart pivotTableCacheDefinitionPart, IXLPivotTable pt)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GeneratePivotTablePartContentPivotTablePartIXLPivotTable">
            <summary>Задает оболочка совместимости XLWorkbook.GeneratePivotTablePartContent(PivotTablePart pivotTablePart1, IXLPivotTable pt)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GenerateThemePartContentThemePart">
            <summary>Задает оболочка совместимости XLWorkbook.GenerateThemePartContent(ThemePart themePart)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetBooleanBooleanPropertyType">
            <summary>Задает оболочка совместимости XLWorkbook.GetBoolean(BooleanPropertyType property)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetBooleanValueBooleanBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.GetBooleanValue(Boolean value, Boolean defaultValue)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetColorColorType">
            <summary>Задает оболочка совместимости XLWorkbook.GetColor(ColorType color)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetColumnWidthDouble">
            <summary>Задает оболочка совместимости XLWorkbook.GetColumnWidth(Double columnWidth)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetCommentShapeXDocument">
            <summary>Задает оболочка совместимости XLWorkbook.GetCommentShape(XDocument xdoc)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetCommentVmlFileWorksheetPart">
            <summary>Задает оболочка совместимости XLWorkbook.GetCommentVmlFile(WorksheetPart wsPart)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetDataTypeFromFormatString">
            <summary>Задает оболочка совместимости XLWorkbook.GetDataTypeFromFormat(String format)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetFormulaString">
            <summary>Задает оболочка совместимости XLWorkbook.GetFormula(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetInsetValueString">
            <summary>Задает оболочка совместимости XLWorkbook.GetInsetValue(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetModifiedNamedRanges">
            <summary>Задает оболочка совместимости XLWorkbook.GetModifiedNamedRanges()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetNewColorXLColor">
            <summary>Задает оболочка совместимости XLWorkbook.GetNewColor(XLColor xlColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetPtValueString">
            <summary>Задает оболочка совместимости XLWorkbook.GetPtValue(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetRunIXLRichString">
            <summary>Задает оболочка совместимости XLWorkbook.GetRun(IXLRichString rt)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetSpreadsheetDocumentTypeString">
            <summary>Задает оболочка совместимости XLWorkbook.GetSpreadsheetDocumentType(String filePath)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetStyleByIdInt32">
            <summary>Задает оболочка совместимости XLWorkbook.GetStyleById(Int32 id)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetStyleIdIXLStyle">
            <summary>Задает оболочка совместимости XLWorkbook.GetStyleId(IXLStyle style)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetTabColorXLColor">
            <summary>Задает оболочка совместимости XLWorkbook.GetTabColor(XLColor xlColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetTableColumnNameString">
            <summary>Задает оболочка совместимости XLWorkbook.GetTableColumnName(String name)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetTextBoxIXLDrawingStyle">
            <summary>Задает оболочка совместимости XLWorkbook.GetTextBox(IXLDrawingStyle ds)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.GetXLColorXLThemeColor">
            <summary>Задает оболочка совместимости XLWorkbook.GetXLColor(XLThemeColor themeColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.InitializeTheme">
            <summary>Задает оболочка совместимости XLWorkbook.InitializeTheme()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.InsertOnVtVectorVTVectorStringInt32String">
            <summary>Задает оболочка совместимости XLWorkbook.InsertOnVtVector(VTVector vTVector, String property, Int32 index, String text)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.IsColReferenceString">
            <summary>Задает оболочка совместимости XLWorkbook.IsColReference(String sheetArea)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.IsRowReferenceString">
            <summary>Задает оболочка совместимости XLWorkbook.IsRowReference(String sheetArea)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadBorderBorderIXLBorder">
            <summary>Задает оболочка совместимости XLWorkbook.LoadBorder(Border borderSource, IXLBorder border)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadBorderValuesBorderPropertiesTypeFuncOfXLBorderStyleValuesIXLStyleFuncOfXLColorIXLStyle">
            <summary>Задает оболочка совместимости XLWorkbook.LoadBorderValues(BorderPropertiesType source, Func`2&lt;XLBorderStyleValues,IXLStyle&gt; setBorder, Func`2&lt;XLColor,IXLStyle&gt; setColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadDefinedNamesWorkbook">
            <summary>Задает оболочка совместимости XLWorkbook.LoadDefinedNames(Workbook workbook)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadFillFillIXLFill">
            <summary>Задает оболочка совместимости XLWorkbook.LoadFill(Fill fillSource, IXLFill fill)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadFontOpenXmlElementIXLFontBase">
            <summary>Задает оболочка совместимости XLWorkbook.LoadFont(OpenXmlElement fontSource, IXLFontBase fontBase)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadNumberFormatNumberingFormatIXLNumberFormat">
            <summary>Задает оболочка совместимости XLWorkbook.LoadNumberFormat(NumberingFormat nfSource, IXLNumberFormat nf)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadPrintTitlesDefinedName">
            <summary>Задает оболочка совместимости XLWorkbook.LoadPrintTitles(DefinedName definedName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadSheetsStream">
            <summary>Задает оболочка совместимости XLWorkbook.LoadSheets(Stream stream)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadSheetsString">
            <summary>Задает оболочка совместимости XLWorkbook.LoadSheets(String fileName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadSpreadsheetDocumentSpreadsheetDocument">
            <summary>Задает оболочка совместимости XLWorkbook.LoadSpreadsheetDocument(SpreadsheetDocument dSpreadsheet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadStream">
            <summary>Задает оболочка совместимости XLWorkbook.Load(Stream stream)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LoadString">
            <summary>Задает оболочка совместимости XLWorkbook.Load(String file)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LockStructureGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_LockStructure()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LockStructureSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_LockStructure(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LockWindowsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_LockWindows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.LockWindowsSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_LockWindows(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.NamedRangeString">
            <summary>Задает оболочка совместимости XLWorkbook.NamedRange(String rangeName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.NamedRangesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_NamedRanges()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.NamedRangesSetIXLNamedRanges">
            <summary>Задает оболочка совместимости XLWorkbook.set_NamedRanges(IXLNamedRanges value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.NumberFormatsAreEqualNumberingFormatIXLNumberFormat">
            <summary>Задает оболочка совместимости XLWorkbook.NumberFormatsAreEqual(NumberingFormat nf, IXLNumberFormat xlNumberFormat)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.OutlineGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Outline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.OutlineSetIXLOutline">
            <summary>Задает оболочка совместимости XLWorkbook.set_Outline(IXLOutline value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.PageOptionsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_PageOptions()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.PageOptionsSetIXLPageSetup">
            <summary>Задает оболочка совместимости XLWorkbook.set_PageOptions(IXLPageSetup value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ParseReferenceStringStringOutStringOut">
            <summary>Задает оболочка совместимости XLWorkbook.ParseReference(String item, String&amp; sheetName, String&amp; sheetArea)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.PropertiesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Properties()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.PropertiesSetXLWorkbookProperties">
            <summary>Задает оболочка совместимости XLWorkbook.set_Properties(XLWorkbookProperties value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.Protect">
            <summary>Задает оболочка совместимости XLWorkbook.Protect()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ProtectBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.Protect(Boolean lockStructure)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ProtectBooleanBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.Protect(Boolean lockStructure, Boolean lockWindows)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ProtectionsAreEqualProtectionIXLProtection">
            <summary>Задает оболочка совместимости XLWorkbook.ProtectionsAreEqual(Protection protection, IXLProtection xlProtection)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.RangeString">
            <summary>Задает оболочка совместимости XLWorkbook.Range(String namedRange)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.RangesString">
            <summary>Задает оболочка совместимости XLWorkbook.Ranges(String namedRanges)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ReferenceStyleGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ReferenceStyle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ReferenceStyleSetXLReferenceStyle">
            <summary>Задает оболочка совместимости XLWorkbook.set_ReferenceStyle(XLReferenceStyle value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ResolveFillWithPatternFillsPatternValues">
            <summary>Задает оболочка совместимости XLWorkbook.ResolveFillWithPattern(Fills fills, PatternValues patternValues)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.RightToLeftGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_RightToLeft()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.RightToLeftSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_RightToLeft(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.RowHeightGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_RowHeight()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.RowHeightSetDouble">
            <summary>Задает оболочка совместимости XLWorkbook.set_RowHeight(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.Save">
            <summary>Задает оболочка совместимости XLWorkbook.Save()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.SaveAsStream">
            <summary>Задает оболочка совместимости XLWorkbook.SaveAs(Stream stream)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.SaveAsString">
            <summary>Задает оболочка совместимости XLWorkbook.SaveAs(String file)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.SetColumnsOrRowsToRepeatString">
            <summary>Задает оболочка совместимости XLWorkbook.SetColumnsOrRowsToRepeat(String area)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.SetLockStructureBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.SetLockStructure(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.SetLockWindowsBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.SetLockWindows(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.SetPackagePropertiesOpenXmlPackage">
            <summary>Задает оболочка совместимости XLWorkbook.SetPackageProperties(OpenXmlPackage document)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.SetPropertiesSpreadsheetDocument">
            <summary>Задает оболочка совместимости XLWorkbook.SetProperties(SpreadsheetDocument dSpreadsheet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.SetUse1904DateSystem">
            <summary>Задает оболочка совместимости XLWorkbook.SetUse1904DateSystem()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.SetUse1904DateSystemBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.SetUse1904DateSystem(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowFormulasGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowFormulas()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowFormulasSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowFormulas(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowGridLinesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowGridLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowGridLinesSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowGridLines(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowOutlineSymbolsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowOutlineSymbols()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowOutlineSymbolsSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowOutlineSymbols(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowRowColHeadersGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowRowColHeaders()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowRowColHeadersSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowRowColHeaders(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowRulerGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowRuler()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowRulerSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowRuler(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowWhiteSpaceGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowWhiteSpace()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowWhiteSpaceSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowWhiteSpace(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowZerosGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowZeros()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ShowZerosSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowZeros(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.StaticConstructor">
            <summary>Задает оболочка совместимости XLWorkbook.XLWorkbook()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.StyleGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.StyleSetIXLStyle">
            <summary>Задает оболочка совместимости XLWorkbook.set_Style(IXLStyle value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ThemeGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Theme()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.ThemeSetIXLTheme">
            <summary>Задает оболочка совместимости XLWorkbook.set_Theme(IXLTheme value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.TryGetWorksheetStringIXLWorksheetOut">
            <summary>Задает оболочка совместимости XLWorkbook.TryGetWorksheet(String name, IXLWorksheet&amp; worksheet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.UInt32HasValueUInt32Value">
            <summary>Задает оболочка совместимости XLWorkbook.UInt32HasValue(UInt32Value value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.UpdateColumnColumnColumnsDictionaryOfUInt32Column">
            <summary>Задает оболочка совместимости XLWorkbook.UpdateColumn(Column column, Columns columns, Dictionary`2&lt;UInt32,Column&gt; sheetColumnsByMin)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.Use1904DateSystemGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Use1904DateSystem()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.Use1904DateSystemSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_Use1904DateSystem(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.WorksheetInt32">
            <summary>Задает оболочка совместимости XLWorkbook.Worksheet(Int32 position)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.WorksheetString">
            <summary>Задает оболочка совместимости XLWorkbook.Worksheet(String name)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.WorksheetsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Worksheets()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._CollapseColumnsb__2a2KeyValuePairOfUInt32Column">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;CollapseColumns&gt;b__2a2(KeyValuePair`2&lt;UInt32,Column&gt; kp)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._CollapseColumnsb__2a4Column">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;CollapseColumns&gt;b__2a4(Column co)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._CreatePartsb__5eIdPartPair">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;CreateParts&gt;b__5e(IdPartPair p)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._CreatePartsb__62HyperlinkRelationship">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;CreateParts&gt;b__62(HyperlinkRelationship hr)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._CreatePartsb__63IdPartPair">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;CreateParts&gt;b__63(IdPartPair p)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._CreatePartsb__64IdPartPair">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;CreateParts&gt;b__64(IdPartPair p)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._CreatePartsb__65IXLCell">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;CreateParts&gt;b__65(IXLCell c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._DeleteCommentsb__73XElement">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;DeleteComments&gt;b__73(XElement e)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._DeleteCommentsb__74XElement">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;DeleteComments&gt;b__74(XElement e)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._DeleteCommentsb__75XElement">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;DeleteComments&gt;b__75(XElement e)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._Disposeb__2bfIXLWorksheet">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;Dispose&gt;b__2bf(IXLWorksheet w)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateExtendedFilePropertiesPartContentb__8bString">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateExtendedFilePropertiesPartContent&gt;b__8b(String nr)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GeneratePivotTableCacheDefinitionPartContentb__1afIXLCell">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GeneratePivotTableCacheDefinitionPartContent&gt;b__1af(IXLCell cell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateSharedStringTablePartContentb__dfIXLCell">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateSharedStringTablePartContent&gt;b__df(IXLCell c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateSharedStringTablePartContentb__e0IXLRichString">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateSharedStringTablePartContent&gt;b__e0(IXLRichString r)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorkbookPartContentb__a5Sheet">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorkbookPartContent&gt;b__a5(Sheet s)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorkbookPartContentb__acSheet">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorkbookPartContent&gt;b__ac(Sheet sheet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorkbookPartContentb__b9IXLNamedRange">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorkbookPartContent&gt;b__b9(IXLNamedRange n)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorkbookStylesPartContentb__20dCellStyle">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorkbookStylesPartContent&gt;b__20d(CellStyle c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorkbookStylesPartContentb__20eCellStyle">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorkbookStylesPartContent&gt;b__20e(CellStyle c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorkbookStylesPartContentb__20fCellStyle">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorkbookStylesPartContent&gt;b__20f(CellStyle c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorkbookStylesPartContentb__215CellStyle">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorkbookStylesPartContent&gt;b__215(CellStyle c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetCommentsPartContentb__1e8IXLCell">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetCommentsPartContent&gt;b__1e8(IXLCell c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetCommentsPartContentb__1e9KeyValuePairOfStringInt32">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetCommentsPartContent&gt;b__1e9(KeyValuePair`2&lt;String,Int32&gt; a)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__25aIXLRange">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__25a(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__25bColumn">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__25b(Column c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__25cColumn">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__25c(Column c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__25eColumn">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__25e(Column c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__260Row">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__260(Row r)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__262Int32">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__262(Int32 r)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__265KeyValuePairOfInt32Row">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__265(KeyValuePair`2&lt;Int32,Row&gt; r)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__267Cell">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__267(Cell c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__269Cell">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__269(Cell c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__26eIXLRange">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__26e(IXLRange m)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__26fString">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__26f(String merged)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__270IXLConditionalFormat">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__270(IXLConditionalFormat c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__271IXLConditionalFormat">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__271(IXLConditionalFormat c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__273IXLDataValidation">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__273(IXLDataValidation d)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GenerateWorksheetPartContentb__274StringIXLRange">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GenerateWorksheetPartContent&gt;b__274(String current, IXLRange r)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GetCommentShapeb__eXElement">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GetCommentShape&gt;b__e(XElement e)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GetCommentShapeb__fXElement">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GetCommentShape&gt;b__f(XElement e)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._GetModifiedNamedRangesb__98IXLNamedRange">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;GetModifiedNamedRanges&gt;b__98(IXLNamedRange n)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadColumnBreaksb__56Break">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadColumnBreaks&gt;b__56(Break columnBreak)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadColumnsb__2eColumn">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadColumns&gt;b__2e(Column c)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadHyperlinksb__52HyperlinkRelationship">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadHyperlinks&gt;b__52(HyperlinkRelationship hr)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadHyperlinksb__53HyperlinkRelationship">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadHyperlinks&gt;b__53(HyperlinkRelationship hr)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadSpreadsheetDocumentb__2TableColumn">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadSpreadsheetDocument&gt;b__2(TableColumn t)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadSpreadsheetDocumentb__3XElement">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadSpreadsheetDocument&gt;b__3(XElement e)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._LoadSpreadsheetDocumentb__4XElement">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadSpreadsheetDocument&gt;b__4(XElement e)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._Rangesb__2bcString">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;Ranges&gt;b__2bc(String r)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook._Rangesb__2bdIXLRange">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;Ranges&gt;b__2bd(IXLRange range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.checkForWorksheetsPresent">
            <summary>Задает оболочка совместимости XLWorkbook.checkForWorksheetsPresent()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadClientDataOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.XLWorkbook,ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadClientData(IXLDrawing`1&lt;!!0&gt; drawing, XElement clientData)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadColorsAndLinesOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.XLWorkbook,ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadColorsAndLines(IXLDrawing`1&lt;!!0&gt; drawing, XElement shape)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadDrawingHAlignmentOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.XLWorkbook,ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadDrawingHAlignment(IXLDrawing`1&lt;!!0&gt; drawing, XElement clientData)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadDrawingProtectionOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.XLWorkbook,ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadDrawingProtection(IXLDrawing`1&lt;!!0&gt; drawing, XElement clientData)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadDrawingVAlignmentOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.XLWorkbook,ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadDrawingVAlignment(IXLDrawing`1&lt;!!0&gt; drawing, XElement clientData)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadShapePropertiesOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.XLWorkbook,ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadShapeProperties(IXLDrawing`1&lt;!!0&gt; xlDrawing, XElement shape)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadTextBoxInsetOf1IXLDrawingOfM0XAttribute``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.XLWorkbook,ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XAttribute})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadTextBoxInset(IXLDrawing`1&lt;!!0&gt; xlDrawing, XAttribute attInset)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadTextBoxOf1IXLDrawingOfM0XElement``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{ClosedXML.Excel.XLWorkbook,ClosedXML.Excel.IXLDrawing{``0},System.Xml.Linq.XElement})">
            <summary>Задает оболочка совместимости XLWorkbook.LoadTextBox(IXLDrawing`1&lt;!!0&gt; xlDrawing, XElement textBox)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.AddWorksheetDataSet">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(DataSet dataSet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.AddWorksheetDataTable">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(DataTable dataTable)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.AddWorksheetDataTableString">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(DataTable dataTable, String sheetName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.AddWorksheetIXLWorksheet">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(IXLWorksheet worksheet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.AddWorksheetString">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(String sheetName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.AddWorksheetStringInt32">
            <summary>Задает оболочка совместимости XLWorkbook.AddWorksheet(String sheetName, Int32 position)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.AuthorGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Author()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.AuthorSetString">
            <summary>Задает оболочка совместимости XLWorkbook.set_Author(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.BordersAreEqualBorderIXLBorder">
            <summary>Задает оболочка совместимости XLWorkbook.BordersAreEqual(Border b, IXLBorder xlBorder)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CalculateModeGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_CalculateMode()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CalculateModeSetXLCalculateMode">
            <summary>Задает оболочка совместимости XLWorkbook.set_CalculateMode(XLCalculateMode value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CellString">
            <summary>Задает оболочка совместимости XLWorkbook.Cell(String namedCell)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CellsString">
            <summary>Задает оболочка совместимости XLWorkbook.Cells(String namedCells)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ColumnWidthGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ColumnWidth()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ColumnWidthSetDouble">
            <summary>Задает оболочка совместимости XLWorkbook.set_ColumnWidth(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CreatePackageStreamBooleanSpreadsheetDocumentType">
            <summary>Задает оболочка совместимости XLWorkbook.CreatePackage(Stream stream, Boolean newStream, SpreadsheetDocumentType spreadsheetDocumentType)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CreatePackageStringSpreadsheetDocumentType">
            <summary>Задает оболочка совместимости XLWorkbook.CreatePackage(String filePath, SpreadsheetDocumentType spreadsheetDocumentType)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CreatePartsSpreadsheetDocument">
            <summary>Задает оболочка совместимости XLWorkbook.CreateParts(SpreadsheetDocument document)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CustomPropertiesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_CustomProperties()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CustomPropertiesSetIXLCustomProperties">
            <summary>Задает оболочка совместимости XLWorkbook.set_CustomProperties(IXLCustomProperties value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.CustomPropertyString">
            <summary>Задает оболочка совместимости XLWorkbook.CustomProperty(String name)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.DefaultRightToLeftGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultRightToLeft()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.DefaultShowFormulasGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowFormulas()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.DefaultShowGridLinesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowGridLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.DefaultShowOutlineSymbolsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowOutlineSymbols()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.DefaultShowRowColHeadersGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowRowColHeaders()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.DefaultShowRulerGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowRuler()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.DefaultShowWhiteSpaceGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowWhiteSpace()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.DefaultShowZerosGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_DefaultShowZeros()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.Dispose">
            <summary>Задает оболочка совместимости XLWorkbook.Dispose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.EvaluateString">
            <summary>Задает оболочка совместимости XLWorkbook.Evaluate(String expression)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.EventTrackingGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_EventTracking()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.EventTrackingSetXLEventTracking">
            <summary>Задает оболочка совместимости XLWorkbook.set_EventTracking(XLEventTracking value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ExtractColorString">
            <summary>Задает оболочка совместимости XLWorkbook.ExtractColor(String color)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.FillDifferentialFormatsCollectionDifferentialFormatsDictionaryOfIXLStyleInt32">
            <summary>Задает оболочка совместимости XLWorkbook.FillDifferentialFormatsCollection(DifferentialFormats differentialFormats, Dictionary`2&lt;IXLStyle,Int32&gt; dictionary)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.FillsAreEqualFillIXLFill">
            <summary>Задает оболочка совместимости XLWorkbook.FillsAreEqual(Fill f, IXLFill xlFill)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.FindCellsFuncOfIXLCellBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.FindCells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.FindColumnsFuncOfIXLColumnBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.FindColumns(Func`2&lt;IXLColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.FindRowsFuncOfIXLRowBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.FindRows(Func`2&lt;IXLRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.FontsAreEqualFontIXLFont">
            <summary>Задает оболочка совместимости XLWorkbook.FontsAreEqual(Font f, IXLFont xlFont)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GenerateCustomFilePropertiesPartContentCustomFilePropertiesPart">
            <summary>Задает оболочка совместимости XLWorkbook.GenerateCustomFilePropertiesPartContent(CustomFilePropertiesPart customFilePropertiesPart1)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GenerateExtendedFilePropertiesPartContentExtendedFilePropertiesPart">
            <summary>Задает оболочка совместимости XLWorkbook.GenerateExtendedFilePropertiesPartContent(ExtendedFilePropertiesPart extendedFilePropertiesPart)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GenerateThemePartContentThemePart">
            <summary>Задает оболочка совместимости XLWorkbook.GenerateThemePartContent(ThemePart themePart)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GetColorColorType">
            <summary>Задает оболочка совместимости XLWorkbook.GetColor(ColorType color)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GetCommentVmlFileWorksheetPart">
            <summary>Задает оболочка совместимости XLWorkbook.GetCommentVmlFile(WorksheetPart wsPart)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GetInsetValueString">
            <summary>Задает оболочка совместимости XLWorkbook.GetInsetValue(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GetModifiedNamedRanges">
            <summary>Задает оболочка совместимости XLWorkbook.GetModifiedNamedRanges()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GetPtValueString">
            <summary>Задает оболочка совместимости XLWorkbook.GetPtValue(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GetStyleByIdInt32">
            <summary>Задает оболочка совместимости XLWorkbook.GetStyleById(Int32 id)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GetStyleIdIXLStyle">
            <summary>Задает оболочка совместимости XLWorkbook.GetStyleId(IXLStyle style)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GetTableColumnNameString">
            <summary>Задает оболочка совместимости XLWorkbook.GetTableColumnName(String name)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.GetXLColorXLThemeColor">
            <summary>Задает оболочка совместимости XLWorkbook.GetXLColor(XLThemeColor themeColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.InitializeTheme">
            <summary>Задает оболочка совместимости XLWorkbook.InitializeTheme()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadBorderBorderIXLBorder">
            <summary>Задает оболочка совместимости XLWorkbook.LoadBorder(Border borderSource, IXLBorder border)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadBorderValuesBorderPropertiesTypeFuncOfXLBorderStyleValuesIXLStyleFuncOfXLColorIXLStyle">
            <summary>Задает оболочка совместимости XLWorkbook.LoadBorderValues(BorderPropertiesType source, Func`2&lt;XLBorderStyleValues,IXLStyle&gt; setBorder, Func`2&lt;XLColor,IXLStyle&gt; setColor)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadDefinedNamesWorkbook">
            <summary>Задает оболочка совместимости XLWorkbook.LoadDefinedNames(Workbook workbook)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadFillFillIXLFill">
            <summary>Задает оболочка совместимости XLWorkbook.LoadFill(Fill fillSource, IXLFill fill)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadFontOpenXmlElementIXLFontBase">
            <summary>Задает оболочка совместимости XLWorkbook.LoadFont(OpenXmlElement fontSource, IXLFontBase fontBase)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadNumberFormatNumberingFormatIXLNumberFormat">
            <summary>Задает оболочка совместимости XLWorkbook.LoadNumberFormat(NumberingFormat nfSource, IXLNumberFormat nf)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadPrintTitlesDefinedName">
            <summary>Задает оболочка совместимости XLWorkbook.LoadPrintTitles(DefinedName definedName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadSheetsStream">
            <summary>Задает оболочка совместимости XLWorkbook.LoadSheets(Stream stream)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadSheetsString">
            <summary>Задает оболочка совместимости XLWorkbook.LoadSheets(String fileName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadSpreadsheetDocumentSpreadsheetDocument">
            <summary>Задает оболочка совместимости XLWorkbook.LoadSpreadsheetDocument(SpreadsheetDocument dSpreadsheet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadStream">
            <summary>Задает оболочка совместимости XLWorkbook.Load(Stream stream)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LoadString">
            <summary>Задает оболочка совместимости XLWorkbook.Load(String file)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LockStructureGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_LockStructure()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LockStructureSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_LockStructure(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LockWindowsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_LockWindows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.LockWindowsSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_LockWindows(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.NamedRangeString">
            <summary>Задает оболочка совместимости XLWorkbook.NamedRange(String rangeName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.NamedRangesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_NamedRanges()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.NamedRangesSetIXLNamedRanges">
            <summary>Задает оболочка совместимости XLWorkbook.set_NamedRanges(IXLNamedRanges value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.OutlineGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Outline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.OutlineSetIXLOutline">
            <summary>Задает оболочка совместимости XLWorkbook.set_Outline(IXLOutline value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.PageOptionsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_PageOptions()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.PageOptionsSetIXLPageSetup">
            <summary>Задает оболочка совместимости XLWorkbook.set_PageOptions(IXLPageSetup value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.PropertiesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Properties()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.PropertiesSetXLWorkbookProperties">
            <summary>Задает оболочка совместимости XLWorkbook.set_Properties(XLWorkbookProperties value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.Protect">
            <summary>Задает оболочка совместимости XLWorkbook.Protect()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ProtectBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.Protect(Boolean lockStructure)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ProtectBooleanBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.Protect(Boolean lockStructure, Boolean lockWindows)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.RangeString">
            <summary>Задает оболочка совместимости XLWorkbook.Range(String namedRange)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.RangesString">
            <summary>Задает оболочка совместимости XLWorkbook.Ranges(String namedRanges)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ReferenceStyleGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ReferenceStyle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ReferenceStyleSetXLReferenceStyle">
            <summary>Задает оболочка совместимости XLWorkbook.set_ReferenceStyle(XLReferenceStyle value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.RightToLeftGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_RightToLeft()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.RightToLeftSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_RightToLeft(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.RowHeightGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_RowHeight()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.RowHeightSetDouble">
            <summary>Задает оболочка совместимости XLWorkbook.set_RowHeight(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.Save">
            <summary>Задает оболочка совместимости XLWorkbook.Save()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.SaveAsStream">
            <summary>Задает оболочка совместимости XLWorkbook.SaveAs(Stream stream)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.SaveAsString">
            <summary>Задает оболочка совместимости XLWorkbook.SaveAs(String file)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.SetColumnsOrRowsToRepeatString">
            <summary>Задает оболочка совместимости XLWorkbook.SetColumnsOrRowsToRepeat(String area)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.SetLockStructureBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.SetLockStructure(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.SetLockWindowsBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.SetLockWindows(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.SetPackagePropertiesOpenXmlPackage">
            <summary>Задает оболочка совместимости XLWorkbook.SetPackageProperties(OpenXmlPackage document)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.SetPropertiesSpreadsheetDocument">
            <summary>Задает оболочка совместимости XLWorkbook.SetProperties(SpreadsheetDocument dSpreadsheet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.SetUse1904DateSystem">
            <summary>Задает оболочка совместимости XLWorkbook.SetUse1904DateSystem()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.SetUse1904DateSystemBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.SetUse1904DateSystem(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowFormulasGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowFormulas()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowFormulasSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowFormulas(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowGridLinesGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowGridLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowGridLinesSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowGridLines(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowOutlineSymbolsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowOutlineSymbols()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowOutlineSymbolsSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowOutlineSymbols(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowRowColHeadersGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowRowColHeaders()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowRowColHeadersSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowRowColHeaders(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowRulerGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowRuler()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowRulerSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowRuler(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowWhiteSpaceGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowWhiteSpace()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowWhiteSpaceSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowWhiteSpace(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowZerosGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_ShowZeros()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ShowZerosSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_ShowZeros(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.StyleGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.StyleSetIXLStyle">
            <summary>Задает оболочка совместимости XLWorkbook.set_Style(IXLStyle value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ThemeGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Theme()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.ThemeSetIXLTheme">
            <summary>Задает оболочка совместимости XLWorkbook.set_Theme(IXLTheme value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.TryGetWorksheetStringIXLWorksheetOut">
            <summary>Задает оболочка совместимости XLWorkbook.TryGetWorksheet(String name, IXLWorksheet&amp; worksheet)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.Use1904DateSystemGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Use1904DateSystem()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.Use1904DateSystemSetBoolean">
            <summary>Задает оболочка совместимости XLWorkbook.set_Use1904DateSystem(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.WorksheetInt32">
            <summary>Задает оболочка совместимости XLWorkbook.Worksheet(Int32 position)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.WorksheetString">
            <summary>Задает оболочка совместимости XLWorkbook.Worksheet(String name)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.WorksheetsGet">
            <summary>Задает оболочка совместимости XLWorkbook.get_Worksheets()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances._LoadSpreadsheetDocumentb__2TableColumn">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;LoadSpreadsheetDocument&gt;b__2(TableColumn t)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances._Rangesb__2bcString">
            <summary>Задает оболочка совместимости XLWorkbook.&lt;Ranges&gt;b__2bc(String r)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbook.AllInstances.checkForWorksheetsPresent">
            <summary>Задает оболочка совместимости XLWorkbook.checkForWorksheetsPresent()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties">
            <summary>Тип оболочки совместимости для ClosedXML.Excel.XLWorkbookProperties</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.#ctor">
            <summary>Инициализация нового экземпляра оболочки совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.#ctor(ClosedXML.Excel.XLWorkbookProperties)">
            <summary>Инициализация новой оболочки совместимости для заданного экземпляра</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.BehaveAsCurrent">
            <summary>Назначение поведения &quot;Current&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.BehaveAsNotImplemented">
            <summary>Назначение поведения &quot;NotImplemented&quot; всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AuthorGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Author()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AuthorSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Author(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.Behavior">
            <summary>Назначение поведения всем методам типа с оболочкой совместимости</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.CategoryGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Category()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.CategorySetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Category(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.CommentsGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Comments()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.CommentsSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Comments(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.CompanyGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Company()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.CompanySetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Company(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.Constructor">
            <summary>Задает оболочка совместимости XLWorkbookProperties.XLWorkbookProperties()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.CreatedGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Created()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.CreatedSetDateTime">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Created(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.KeywordsGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Keywords()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.KeywordsSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Keywords(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.LastModifiedByGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_LastModifiedBy()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.LastModifiedBySetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_LastModifiedBy(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.ManagerGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Manager()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.ManagerSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Manager(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.ModifiedGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Modified()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.ModifiedSetDateTime">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Modified(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.StatusGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Status()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.StatusSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Status(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.SubjectGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Subject()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.SubjectSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Subject(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.TitleGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Title()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.TitleSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Title(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances">
            <summary>Определение оболочек совместимости для всех членов экземпляров</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.AuthorGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Author()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.AuthorSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Author(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.CategoryGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Category()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.CategorySetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Category(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.CommentsGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Comments()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.CommentsSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Comments(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.CompanyGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Company()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.CompanySetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Company(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.CreatedGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Created()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.CreatedSetDateTime">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Created(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.KeywordsGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Keywords()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.KeywordsSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Keywords(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.LastModifiedByGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_LastModifiedBy()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.LastModifiedBySetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_LastModifiedBy(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.ManagerGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Manager()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.ManagerSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Manager(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.ModifiedGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Modified()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.ModifiedSetDateTime">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Modified(DateTime value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.StatusGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Status()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.StatusSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Status(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.SubjectGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Subject()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.SubjectSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Subject(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.TitleGet">
            <summary>Задает оболочка совместимости XLWorkbookProperties.get_Title()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.ShimXLWorkbookProperties.AllInstances.TitleSetString">
            <summary>Задает оболочка совместимости XLWorkbookProperties.set_Title(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLAddress">
            <summary>Тип заглушки ClosedXML.Excel.IXLAddress</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLAddress</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#ToString(ClosedXML.Excel.XLReferenceStyle)">
            <summary>Задает заглушка IXLAddress.ToString(XLReferenceStyle referenceStyle)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#ToStringFixed">
            <summary>Задает заглушка IXLAddress.ToStringFixed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#ToStringFixed(ClosedXML.Excel.XLReferenceStyle)">
            <summary>Задает заглушка IXLAddress.ToStringFixed(XLReferenceStyle referenceStyle)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#ToStringFixed(ClosedXML.Excel.XLReferenceStyle,System.Boolean)">
            <summary>Задает заглушка IXLAddress.ToStringFixed(XLReferenceStyle referenceStyle, Boolean includeSheet)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#ToStringRelative">
            <summary>Задает заглушка IXLAddress.ToStringRelative()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#ToStringRelative(System.Boolean)">
            <summary>Задает заглушка IXLAddress.ToStringRelative(Boolean includeSheet)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.ColumnLetterGet">
            <summary>Задает stub IXLAddress.get_ColumnLetter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.ColumnNumberGet">
            <summary>Задает stub IXLAddress.get_ColumnNumber()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.EqualsIXLAddress">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.EqualsIXLAddressIXLAddress">
            <summary>Задает stub IEqualityComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.FixedColumnGet">
            <summary>Задает stub IXLAddress.get_FixedColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.FixedRowGet">
            <summary>Задает stub IXLAddress.get_FixedRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.GetHashCodeIXLAddress">
            <summary>Задает stub IEqualityComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.RowNumberGet">
            <summary>Задает stub IXLAddress.get_RowNumber()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.global::System#Collections#Generic#IEqualityComparer{ClosedXML#Excel#IXLAddress}#Equals(ClosedXML.Excel.IXLAddress,ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IEqualityComparer`1.Equals(!0 x, !0 y)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.global::System#Collections#Generic#IEqualityComparer{ClosedXML#Excel#IXLAddress}#GetHashCode(ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IEqualityComparer`1.GetHashCode(!0 obj)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAddress.global::System#IEquatable{ClosedXML#Excel#IXLAddress}#Equals(ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.ToStringFixed">
            <summary>Задает stub IXLAddress.ToStringFixed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.ToStringFixedXLReferenceStyle">
            <summary>Задает stub IXLAddress.ToStringFixed(XLReferenceStyle referenceStyle)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.ToStringFixedXLReferenceStyleBoolean">
            <summary>Задает stub IXLAddress.ToStringFixed(XLReferenceStyle referenceStyle, Boolean includeSheet)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.ToStringRelative">
            <summary>Задает stub IXLAddress.ToStringRelative()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.ToStringRelativeBoolean">
            <summary>Задает stub IXLAddress.ToStringRelative(Boolean includeSheet)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.ToStringXLReferenceStyle">
            <summary>Задает stub IXLAddress.ToString(XLReferenceStyle referenceStyle)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.UniqueIdGet">
            <summary>Задает stub IXLAddress.get_UniqueId()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAddress.WorksheetGet">
            <summary>Задает stub IXLAddress.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#ColumnLetter">
            <summary>Задает stub IXLAddress.get_ColumnLetter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#ColumnNumber">
            <summary>Задает stub IXLAddress.get_ColumnNumber()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#FixedColumn">
            <summary>Задает stub IXLAddress.get_FixedColumn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#FixedRow">
            <summary>Задает stub IXLAddress.get_FixedRow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#RowNumber">
            <summary>Задает stub IXLAddress.get_RowNumber()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#UniqueId">
            <summary>Задает stub IXLAddress.get_UniqueId()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAddress.cxml::ClosedXML#Excel#IXLAddress#Worksheet">
            <summary>Задает stub IXLAddress.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLAlignment">
            <summary>Тип заглушки ClosedXML.Excel.IXLAlignment</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLAlignment</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToHorizontal">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.Horizontal как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToIndent">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.Indent как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToJustifyLastLine">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.JustifyLastLine как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToReadingOrder">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.ReadingOrder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToRelativeIndent">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.RelativeIndent как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToShrinkToFit">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.ShrinkToFit как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToTextRotation">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.TextRotation как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToTopToBottom">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.TopToBottom как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToVertical">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.Vertical как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.AttachBackingFieldToWrapText">
            <summary>Присоединение делегатов для эмуляции StubIXLAlignment.WrapText как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetHorizontal(ClosedXML.Excel.XLAlignmentHorizontalValues)">
            <summary>Задает заглушка IXLAlignment.SetHorizontal(XLAlignmentHorizontalValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetIndent(System.Int32)">
            <summary>Задает заглушка IXLAlignment.SetIndent(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetJustifyLastLine">
            <summary>Задает заглушка IXLAlignment.SetJustifyLastLine()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetJustifyLastLine(System.Boolean)">
            <summary>Задает заглушка IXLAlignment.SetJustifyLastLine(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetReadingOrder(ClosedXML.Excel.XLAlignmentReadingOrderValues)">
            <summary>Задает заглушка IXLAlignment.SetReadingOrder(XLAlignmentReadingOrderValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetRelativeIndent(System.Int32)">
            <summary>Задает заглушка IXLAlignment.SetRelativeIndent(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetShrinkToFit">
            <summary>Задает заглушка IXLAlignment.SetShrinkToFit()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetShrinkToFit(System.Boolean)">
            <summary>Задает заглушка IXLAlignment.SetShrinkToFit(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetTextRotation(System.Int32)">
            <summary>Задает заглушка IXLAlignment.SetTextRotation(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetTopToBottom">
            <summary>Задает заглушка IXLAlignment.SetTopToBottom()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetTopToBottom(System.Boolean)">
            <summary>Задает заглушка IXLAlignment.SetTopToBottom(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetVertical(ClosedXML.Excel.XLAlignmentVerticalValues)">
            <summary>Задает заглушка IXLAlignment.SetVertical(XLAlignmentVerticalValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetWrapText">
            <summary>Задает заглушка IXLAlignment.SetWrapText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#SetWrapText(System.Boolean)">
            <summary>Задает заглушка IXLAlignment.SetWrapText(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.EqualsIXLAlignment">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.HorizontalGet">
            <summary>Задает stub IXLAlignment.get_Horizontal()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.HorizontalSetXLAlignmentHorizontalValues">
            <summary>Задает stub IXLAlignment.set_Horizontal(XLAlignmentHorizontalValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.IndentGet">
            <summary>Задает stub IXLAlignment.get_Indent()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.IndentSetInt32">
            <summary>Задает stub IXLAlignment.set_Indent(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.JustifyLastLineGet">
            <summary>Задает stub IXLAlignment.get_JustifyLastLine()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.JustifyLastLineSetBoolean">
            <summary>Задает stub IXLAlignment.set_JustifyLastLine(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.ReadingOrderGet">
            <summary>Задает stub IXLAlignment.get_ReadingOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.ReadingOrderSetXLAlignmentReadingOrderValues">
            <summary>Задает stub IXLAlignment.set_ReadingOrder(XLAlignmentReadingOrderValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.RelativeIndentGet">
            <summary>Задает stub IXLAlignment.get_RelativeIndent()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.RelativeIndentSetInt32">
            <summary>Задает stub IXLAlignment.set_RelativeIndent(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetHorizontalXLAlignmentHorizontalValues">
            <summary>Задает stub IXLAlignment.SetHorizontal(XLAlignmentHorizontalValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetIndentInt32">
            <summary>Задает stub IXLAlignment.SetIndent(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetJustifyLastLine">
            <summary>Задает stub IXLAlignment.SetJustifyLastLine()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetJustifyLastLineBoolean">
            <summary>Задает stub IXLAlignment.SetJustifyLastLine(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetReadingOrderXLAlignmentReadingOrderValues">
            <summary>Задает stub IXLAlignment.SetReadingOrder(XLAlignmentReadingOrderValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetRelativeIndentInt32">
            <summary>Задает stub IXLAlignment.SetRelativeIndent(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetShrinkToFit">
            <summary>Задает stub IXLAlignment.SetShrinkToFit()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetShrinkToFitBoolean">
            <summary>Задает stub IXLAlignment.SetShrinkToFit(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetTextRotationInt32">
            <summary>Задает stub IXLAlignment.SetTextRotation(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetTopToBottom">
            <summary>Задает stub IXLAlignment.SetTopToBottom()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetTopToBottomBoolean">
            <summary>Задает stub IXLAlignment.SetTopToBottom(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetVerticalXLAlignmentVerticalValues">
            <summary>Задает stub IXLAlignment.SetVertical(XLAlignmentVerticalValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetWrapText">
            <summary>Задает stub IXLAlignment.SetWrapText()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.SetWrapTextBoolean">
            <summary>Задает stub IXLAlignment.SetWrapText(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.ShrinkToFitGet">
            <summary>Задает stub IXLAlignment.get_ShrinkToFit()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.ShrinkToFitSetBoolean">
            <summary>Задает stub IXLAlignment.set_ShrinkToFit(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAlignment.global::System#IEquatable{ClosedXML#Excel#IXLAlignment}#Equals(ClosedXML.Excel.IXLAlignment)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.TextRotationGet">
            <summary>Задает stub IXLAlignment.get_TextRotation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.TextRotationSetInt32">
            <summary>Задает stub IXLAlignment.set_TextRotation(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.TopToBottomGet">
            <summary>Задает stub IXLAlignment.get_TopToBottom()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.TopToBottomSetBoolean">
            <summary>Задает stub IXLAlignment.set_TopToBottom(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.VerticalGet">
            <summary>Задает stub IXLAlignment.get_Vertical()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.VerticalSetXLAlignmentVerticalValues">
            <summary>Задает stub IXLAlignment.set_Vertical(XLAlignmentVerticalValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.WrapTextGet">
            <summary>Задает stub IXLAlignment.get_WrapText()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAlignment.WrapTextSetBoolean">
            <summary>Задает stub IXLAlignment.set_WrapText(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#Horizontal">
            <summary>Задает stub IXLAlignment.get_Horizontal()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#Indent">
            <summary>Задает stub IXLAlignment.get_Indent()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#JustifyLastLine">
            <summary>Задает stub IXLAlignment.get_JustifyLastLine()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#ReadingOrder">
            <summary>Задает stub IXLAlignment.get_ReadingOrder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#RelativeIndent">
            <summary>Задает stub IXLAlignment.get_RelativeIndent()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#ShrinkToFit">
            <summary>Задает stub IXLAlignment.get_ShrinkToFit()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#TextRotation">
            <summary>Задает stub IXLAlignment.get_TextRotation()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#TopToBottom">
            <summary>Задает stub IXLAlignment.get_TopToBottom()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#Vertical">
            <summary>Задает stub IXLAlignment.get_Vertical()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAlignment.cxml::ClosedXML#Excel#IXLAlignment#WrapText">
            <summary>Задает stub IXLAlignment.get_WrapText()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLAutoFilter">
            <summary>Тип заглушки ClosedXML.Excel.IXLAutoFilter</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAutoFilter.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLAutoFilter</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAutoFilter.AttachBackingFieldToSortColumn">
            <summary>Присоединение делегатов для эмуляции StubIXLAutoFilter.SortColumn как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAutoFilter.AttachBackingFieldToSortOrder">
            <summary>Присоединение делегатов для эмуляции StubIXLAutoFilter.SortOrder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAutoFilter.AttachBackingFieldToSorted">
            <summary>Присоединение делегатов для эмуляции StubIXLAutoFilter.Sorted как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAutoFilter.cxml::ClosedXML#Excel#IXLAutoFilter#Column(System.Int32)">
            <summary>Задает заглушка IXLAutoFilter.Column(Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAutoFilter.cxml::ClosedXML#Excel#IXLAutoFilter#Column(System.String)">
            <summary>Задает заглушка IXLAutoFilter.Column(String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAutoFilter.cxml::ClosedXML#Excel#IXLAutoFilter#Sort(System.Int32,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLAutoFilter.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.ColumnInt32">
            <summary>Задает stub IXLAutoFilter.Column(Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.ColumnString">
            <summary>Задает stub IXLAutoFilter.Column(String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.SortColumnGet">
            <summary>Задает stub IXLAutoFilter.get_SortColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.SortColumnSetInt32">
            <summary>Задает stub IXLAutoFilter.set_SortColumn(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.SortInt32XLSortOrderBooleanBoolean">
            <summary>Задает stub IXLAutoFilter.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.SortOrderGet">
            <summary>Задает stub IXLAutoFilter.get_SortOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.SortOrderSetXLSortOrder">
            <summary>Задает stub IXLAutoFilter.set_SortOrder(XLSortOrder value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.SortedGet">
            <summary>Задает stub IXLAutoFilter.get_Sorted()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLAutoFilter.SortedSetBoolean">
            <summary>Задает stub IXLAutoFilter.set_Sorted(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLAutoFilter.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAutoFilter.cxml::ClosedXML#Excel#IXLAutoFilter#SortColumn">
            <summary>Задает stub IXLAutoFilter.get_SortColumn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAutoFilter.cxml::ClosedXML#Excel#IXLAutoFilter#SortOrder">
            <summary>Задает stub IXLAutoFilter.get_SortOrder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLAutoFilter.cxml::ClosedXML#Excel#IXLAutoFilter#Sorted">
            <summary>Задает stub IXLAutoFilter.get_Sorted()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter">
            <summary>Тип заглушки ClosedXML.Excel.IXLBaseAutoFilter</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLBaseAutoFilter</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.AttachBackingFieldToEnabled">
            <summary>Присоединение делегатов для эмуляции StubIXLBaseAutoFilter.Enabled как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.AttachBackingFieldToRange">
            <summary>Присоединение делегатов для эмуляции StubIXLBaseAutoFilter.Range как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.AttachBackingFieldToSortColumn">
            <summary>Присоединение делегатов для эмуляции StubIXLBaseAutoFilter.SortColumn как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.AttachBackingFieldToSortOrder">
            <summary>Присоединение делегатов для эмуляции StubIXLBaseAutoFilter.SortOrder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.AttachBackingFieldToSorted">
            <summary>Присоединение делегатов для эмуляции StubIXLBaseAutoFilter.Sorted как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.Clear">
            <summary>Задает stub IXLBaseAutoFilter.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#Clear">
            <summary>Задает заглушка IXLBaseAutoFilter.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#Column(System.String)">
            <summary>Задает заглушка IXLBaseAutoFilter.Column(String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#Column(System.Int32)">
            <summary>Задает заглушка IXLBaseAutoFilter.Column(Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#Set(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLBaseAutoFilter.Set(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#Sort(System.Int32,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLBaseAutoFilter.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.ColumnInt32">
            <summary>Задает stub IXLBaseAutoFilter.Column(Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.ColumnString">
            <summary>Задает stub IXLBaseAutoFilter.Column(String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.EnabledGet">
            <summary>Задает stub IXLBaseAutoFilter.get_Enabled()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.EnabledSetBoolean">
            <summary>Задает stub IXLBaseAutoFilter.set_Enabled(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.RangeGet">
            <summary>Задает stub IXLBaseAutoFilter.get_Range()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.RangeSetIXLRange">
            <summary>Задает stub IXLBaseAutoFilter.set_Range(IXLRange value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.SetIXLRangeBase">
            <summary>Задает stub IXLBaseAutoFilter.Set(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.SortColumnGet">
            <summary>Задает stub IXLBaseAutoFilter.get_SortColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.SortColumnSetInt32">
            <summary>Задает stub IXLBaseAutoFilter.set_SortColumn(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.SortInt32XLSortOrderBooleanBoolean">
            <summary>Задает stub IXLBaseAutoFilter.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.SortOrderGet">
            <summary>Задает stub IXLBaseAutoFilter.get_SortOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.SortOrderSetXLSortOrder">
            <summary>Задает stub IXLBaseAutoFilter.set_SortOrder(XLSortOrder value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.SortedGet">
            <summary>Задает stub IXLBaseAutoFilter.get_Sorted()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.SortedSetBoolean">
            <summary>Задает stub IXLBaseAutoFilter.set_Sorted(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#Enabled">
            <summary>Задает stub IXLBaseAutoFilter.get_Enabled()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#Range">
            <summary>Задает stub IXLBaseAutoFilter.get_Range()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#SortColumn">
            <summary>Задает stub IXLBaseAutoFilter.get_SortColumn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#SortOrder">
            <summary>Задает stub IXLBaseAutoFilter.get_SortOrder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBaseAutoFilter.cxml::ClosedXML#Excel#IXLBaseAutoFilter#Sorted">
            <summary>Задает stub IXLBaseAutoFilter.get_Sorted()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2">
            <summary>Тип заглушки ClosedXML.Excel.IXLBaseCollection`2</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLBaseCollection</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.AddToNamedString">
            <summary>Задает stub IXLBaseCollection`2.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.AddToNamedStringXLScope">
            <summary>Задает stub IXLBaseCollection`2.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLBaseCollection`2.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLBaseCollection.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.Cells">
            <summary>Задает stub IXLBaseCollection`2.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.CellsUsed">
            <summary>Задает stub IXLBaseCollection`2.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.CellsUsedBoolean">
            <summary>Задает stub IXLBaseCollection`2.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.ClearXLClearOptions">
            <summary>Задает stub IXLBaseCollection`2.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#AddToNamed(System.String)">
            <summary>Задает заглушка IXLBaseCollection`2.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLBaseCollection`2.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLBaseCollection`2.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#Cells">
            <summary>Задает заглушка IXLBaseCollection`2.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#CellsUsed">
            <summary>Задает заглушка IXLBaseCollection`2.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLBaseCollection`2.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLBaseCollection`2.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLBaseCollection`2.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#SetDataValidation">
            <summary>Задает заглушка IXLBaseCollection`2.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#SetValue``1(``0)">
            <summary>Задает заглушка IXLBaseCollection`2.SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.CountGet">
            <summary>Задает stub IXLBaseCollection`2.get_Count()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.SetDataTypeXLCellValues">
            <summary>Задает stub IXLBaseCollection`2.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.SetDataValidation">
            <summary>Задает stub IXLBaseCollection`2.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,`1})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.StyleGet">
            <summary>Задает stub IXLBaseCollection`2.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.StyleSetIXLStyle">
            <summary>Задает stub IXLBaseCollection`2.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.global::System#Collections#Generic#IEnumerable{TSingle}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.ValueSetObject">
            <summary>Задает stub IXLBaseCollection`2.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#Count">
            <summary>Задает stub IXLBaseCollection`2.get_Count()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#Style">
            <summary>Задает stub IXLBaseCollection`2.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBaseCollection`2.cxml::ClosedXML#Excel#IXLBaseCollection{TSingle@TMultiple}#Value">
            <summary>Задает stub IXLBaseCollection`2.set_Value(Object value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLBorder">
            <summary>Тип заглушки ClosedXML.Excel.IXLBorder</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLBorder</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToBottomBorder">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.BottomBorder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToBottomBorderColor">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.BottomBorderColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToDiagonalBorder">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.DiagonalBorder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToDiagonalBorderColor">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.DiagonalBorderColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToDiagonalDown">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.DiagonalDown как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToDiagonalUp">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.DiagonalUp как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToLeftBorder">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.LeftBorder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToLeftBorderColor">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.LeftBorderColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToRightBorder">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.RightBorder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToRightBorderColor">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.RightBorderColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToTopBorder">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.TopBorder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.AttachBackingFieldToTopBorderColor">
            <summary>Присоединение делегатов для эмуляции StubIXLBorder.TopBorderColor как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.BottomBorderColorGet">
            <summary>Задает stub IXLBorder.get_BottomBorderColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.BottomBorderColorSetXLColor">
            <summary>Задает stub IXLBorder.set_BottomBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.BottomBorderGet">
            <summary>Задает stub IXLBorder.get_BottomBorder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.BottomBorderSetXLBorderStyleValues">
            <summary>Задает stub IXLBorder.set_BottomBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetBottomBorder(ClosedXML.Excel.XLBorderStyleValues)">
            <summary>Задает заглушка IXLBorder.SetBottomBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetBottomBorderColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLBorder.SetBottomBorderColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetDiagonalBorder(ClosedXML.Excel.XLBorderStyleValues)">
            <summary>Задает заглушка IXLBorder.SetDiagonalBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetDiagonalBorderColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLBorder.SetDiagonalBorderColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetDiagonalDown">
            <summary>Задает заглушка IXLBorder.SetDiagonalDown()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetDiagonalDown(System.Boolean)">
            <summary>Задает заглушка IXLBorder.SetDiagonalDown(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetDiagonalUp">
            <summary>Задает заглушка IXLBorder.SetDiagonalUp()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetDiagonalUp(System.Boolean)">
            <summary>Задает заглушка IXLBorder.SetDiagonalUp(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetInsideBorder(ClosedXML.Excel.XLBorderStyleValues)">
            <summary>Задает заглушка IXLBorder.SetInsideBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetInsideBorderColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLBorder.SetInsideBorderColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetLeftBorder(ClosedXML.Excel.XLBorderStyleValues)">
            <summary>Задает заглушка IXLBorder.SetLeftBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetLeftBorderColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLBorder.SetLeftBorderColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetOutsideBorder(ClosedXML.Excel.XLBorderStyleValues)">
            <summary>Задает заглушка IXLBorder.SetOutsideBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetOutsideBorderColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLBorder.SetOutsideBorderColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetRightBorder(ClosedXML.Excel.XLBorderStyleValues)">
            <summary>Задает заглушка IXLBorder.SetRightBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetRightBorderColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLBorder.SetRightBorderColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetTopBorder(ClosedXML.Excel.XLBorderStyleValues)">
            <summary>Задает заглушка IXLBorder.SetTopBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#SetTopBorderColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLBorder.SetTopBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.DiagonalBorderColorGet">
            <summary>Задает stub IXLBorder.get_DiagonalBorderColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.DiagonalBorderColorSetXLColor">
            <summary>Задает stub IXLBorder.set_DiagonalBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.DiagonalBorderGet">
            <summary>Задает stub IXLBorder.get_DiagonalBorder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.DiagonalBorderSetXLBorderStyleValues">
            <summary>Задает stub IXLBorder.set_DiagonalBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.DiagonalDownGet">
            <summary>Задает stub IXLBorder.get_DiagonalDown()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.DiagonalDownSetBoolean">
            <summary>Задает stub IXLBorder.set_DiagonalDown(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.DiagonalUpGet">
            <summary>Задает stub IXLBorder.get_DiagonalUp()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.DiagonalUpSetBoolean">
            <summary>Задает stub IXLBorder.set_DiagonalUp(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.EqualsIXLBorder">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.InsideBorderColorSetXLColor">
            <summary>Задает stub IXLBorder.set_InsideBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.InsideBorderSetXLBorderStyleValues">
            <summary>Задает stub IXLBorder.set_InsideBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.LeftBorderColorGet">
            <summary>Задает stub IXLBorder.get_LeftBorderColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.LeftBorderColorSetXLColor">
            <summary>Задает stub IXLBorder.set_LeftBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.LeftBorderGet">
            <summary>Задает stub IXLBorder.get_LeftBorder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.LeftBorderSetXLBorderStyleValues">
            <summary>Задает stub IXLBorder.set_LeftBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.OutsideBorderColorSetXLColor">
            <summary>Задает stub IXLBorder.set_OutsideBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.OutsideBorderSetXLBorderStyleValues">
            <summary>Задает stub IXLBorder.set_OutsideBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.RightBorderColorGet">
            <summary>Задает stub IXLBorder.get_RightBorderColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.RightBorderColorSetXLColor">
            <summary>Задает stub IXLBorder.set_RightBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.RightBorderGet">
            <summary>Задает stub IXLBorder.get_RightBorder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.RightBorderSetXLBorderStyleValues">
            <summary>Задает stub IXLBorder.set_RightBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetBottomBorderColorXLColor">
            <summary>Задает stub IXLBorder.SetBottomBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetBottomBorderXLBorderStyleValues">
            <summary>Задает stub IXLBorder.SetBottomBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetDiagonalBorderColorXLColor">
            <summary>Задает stub IXLBorder.SetDiagonalBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetDiagonalBorderXLBorderStyleValues">
            <summary>Задает stub IXLBorder.SetDiagonalBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetDiagonalDown">
            <summary>Задает stub IXLBorder.SetDiagonalDown()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetDiagonalDownBoolean">
            <summary>Задает stub IXLBorder.SetDiagonalDown(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetDiagonalUp">
            <summary>Задает stub IXLBorder.SetDiagonalUp()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetDiagonalUpBoolean">
            <summary>Задает stub IXLBorder.SetDiagonalUp(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetInsideBorderColorXLColor">
            <summary>Задает stub IXLBorder.SetInsideBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetInsideBorderXLBorderStyleValues">
            <summary>Задает stub IXLBorder.SetInsideBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetLeftBorderColorXLColor">
            <summary>Задает stub IXLBorder.SetLeftBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetLeftBorderXLBorderStyleValues">
            <summary>Задает stub IXLBorder.SetLeftBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetOutsideBorderColorXLColor">
            <summary>Задает stub IXLBorder.SetOutsideBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetOutsideBorderXLBorderStyleValues">
            <summary>Задает stub IXLBorder.SetOutsideBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetRightBorderColorXLColor">
            <summary>Задает stub IXLBorder.SetRightBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetRightBorderXLBorderStyleValues">
            <summary>Задает stub IXLBorder.SetRightBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetTopBorderColorXLColor">
            <summary>Задает stub IXLBorder.SetTopBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.SetTopBorderXLBorderStyleValues">
            <summary>Задает stub IXLBorder.SetTopBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLBorder.global::System#IEquatable{ClosedXML#Excel#IXLBorder}#Equals(ClosedXML.Excel.IXLBorder)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.TopBorderColorGet">
            <summary>Задает stub IXLBorder.get_TopBorderColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.TopBorderColorSetXLColor">
            <summary>Задает stub IXLBorder.set_TopBorderColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.TopBorderGet">
            <summary>Задает stub IXLBorder.get_TopBorder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLBorder.TopBorderSetXLBorderStyleValues">
            <summary>Задает stub IXLBorder.set_TopBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#BottomBorder">
            <summary>Задает stub IXLBorder.get_BottomBorder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#BottomBorderColor">
            <summary>Задает stub IXLBorder.get_BottomBorderColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#DiagonalBorder">
            <summary>Задает stub IXLBorder.get_DiagonalBorder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#DiagonalBorderColor">
            <summary>Задает stub IXLBorder.get_DiagonalBorderColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#DiagonalDown">
            <summary>Задает stub IXLBorder.get_DiagonalDown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#DiagonalUp">
            <summary>Задает stub IXLBorder.get_DiagonalUp()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#InsideBorder">
            <summary>Задает stub IXLBorder.set_InsideBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#InsideBorderColor">
            <summary>Задает stub IXLBorder.set_InsideBorderColor(XLColor value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#LeftBorder">
            <summary>Задает stub IXLBorder.get_LeftBorder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#LeftBorderColor">
            <summary>Задает stub IXLBorder.get_LeftBorderColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#OutsideBorder">
            <summary>Задает stub IXLBorder.set_OutsideBorder(XLBorderStyleValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#OutsideBorderColor">
            <summary>Задает stub IXLBorder.set_OutsideBorderColor(XLColor value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#RightBorder">
            <summary>Задает stub IXLBorder.get_RightBorder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#RightBorderColor">
            <summary>Задает stub IXLBorder.get_RightBorderColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#TopBorder">
            <summary>Задает stub IXLBorder.get_TopBorder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLBorder.cxml::ClosedXML#Excel#IXLBorder#TopBorderColor">
            <summary>Задает stub IXLBorder.get_TopBorderColor()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMax">
            <summary>Тип заглушки ClosedXML.Excel.IXLCFColorScaleMax</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMax.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCFColorScaleMax</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMax.cxml::ClosedXML#Excel#IXLCFColorScaleMax#HighestValue(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMax.HighestValue(XLColor color)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMax.cxml::ClosedXML#Excel#IXLCFColorScaleMax#Maximum(ClosedXML.Excel.XLCFContentType,System.Double,ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMax.Maximum(XLCFContentType type, Double value, XLColor color)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMax.cxml::ClosedXML#Excel#IXLCFColorScaleMax#Maximum(ClosedXML.Excel.XLCFContentType,System.String,ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMax.Maximum(XLCFContentType type, String value, XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMax.HighestValueXLColor">
            <summary>Задает stub IXLCFColorScaleMax.HighestValue(XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMax.MaximumXLCFContentTypeDoubleXLColor">
            <summary>Задает stub IXLCFColorScaleMax.Maximum(XLCFContentType type, Double value, XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMax.MaximumXLCFContentTypeStringXLColor">
            <summary>Задает stub IXLCFColorScaleMax.Maximum(XLCFContentType type, String value, XLColor color)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid">
            <summary>Тип заглушки ClosedXML.Excel.IXLCFColorScaleMid</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCFColorScaleMid</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.cxml::ClosedXML#Excel#IXLCFColorScaleMid#HighestValue(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMid.HighestValue(XLColor color)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.cxml::ClosedXML#Excel#IXLCFColorScaleMid#Maximum(ClosedXML.Excel.XLCFContentType,System.Double,ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMid.Maximum(XLCFContentType type, Double value, XLColor color)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.cxml::ClosedXML#Excel#IXLCFColorScaleMid#Maximum(ClosedXML.Excel.XLCFContentType,System.String,ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMid.Maximum(XLCFContentType type, String value, XLColor color)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.cxml::ClosedXML#Excel#IXLCFColorScaleMid#Midpoint(ClosedXML.Excel.XLCFContentType,System.String,ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMid.Midpoint(XLCFContentType type, String value, XLColor color)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.cxml::ClosedXML#Excel#IXLCFColorScaleMid#Midpoint(ClosedXML.Excel.XLCFContentType,System.Double,ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMid.Midpoint(XLCFContentType type, Double value, XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.HighestValueXLColor">
            <summary>Задает stub IXLCFColorScaleMid.HighestValue(XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.MaximumXLCFContentTypeDoubleXLColor">
            <summary>Задает stub IXLCFColorScaleMid.Maximum(XLCFContentType type, Double value, XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.MaximumXLCFContentTypeStringXLColor">
            <summary>Задает stub IXLCFColorScaleMid.Maximum(XLCFContentType type, String value, XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.MidpointXLCFContentTypeDoubleXLColor">
            <summary>Задает stub IXLCFColorScaleMid.Midpoint(XLCFContentType type, Double value, XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMid.MidpointXLCFContentTypeStringXLColor">
            <summary>Задает stub IXLCFColorScaleMid.Midpoint(XLCFContentType type, String value, XLColor color)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMin">
            <summary>Тип заглушки ClosedXML.Excel.IXLCFColorScaleMin</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMin.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCFColorScaleMin</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMin.cxml::ClosedXML#Excel#IXLCFColorScaleMin#LowestValue(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMin.LowestValue(XLColor color)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMin.cxml::ClosedXML#Excel#IXLCFColorScaleMin#Minimum(ClosedXML.Excel.XLCFContentType,System.Double,ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMin.Minimum(XLCFContentType type, Double value, XLColor color)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMin.cxml::ClosedXML#Excel#IXLCFColorScaleMin#Minimum(ClosedXML.Excel.XLCFContentType,System.String,ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLCFColorScaleMin.Minimum(XLCFContentType type, String value, XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMin.LowestValueXLColor">
            <summary>Задает stub IXLCFColorScaleMin.LowestValue(XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMin.MinimumXLCFContentTypeDoubleXLColor">
            <summary>Задает stub IXLCFColorScaleMin.Minimum(XLCFContentType type, Double value, XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFColorScaleMin.MinimumXLCFContentTypeStringXLColor">
            <summary>Задает stub IXLCFColorScaleMin.Minimum(XLCFContentType type, String value, XLColor color)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCFDataBarMax">
            <summary>Тип заглушки ClosedXML.Excel.IXLCFDataBarMax</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFDataBarMax.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCFDataBarMax</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFDataBarMax.cxml::ClosedXML#Excel#IXLCFDataBarMax#HighestValue">
            <summary>Задает заглушка IXLCFDataBarMax.HighestValue()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFDataBarMax.cxml::ClosedXML#Excel#IXLCFDataBarMax#Maximum(ClosedXML.Excel.XLCFContentType,System.Double)">
            <summary>Задает заглушка IXLCFDataBarMax.Maximum(XLCFContentType type, Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFDataBarMax.cxml::ClosedXML#Excel#IXLCFDataBarMax#Maximum(ClosedXML.Excel.XLCFContentType,System.String)">
            <summary>Задает заглушка IXLCFDataBarMax.Maximum(XLCFContentType type, String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFDataBarMax.HighestValue">
            <summary>Задает stub IXLCFDataBarMax.HighestValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFDataBarMax.MaximumXLCFContentTypeDouble">
            <summary>Задает stub IXLCFDataBarMax.Maximum(XLCFContentType type, Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFDataBarMax.MaximumXLCFContentTypeString">
            <summary>Задает stub IXLCFDataBarMax.Maximum(XLCFContentType type, String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCFDataBarMin">
            <summary>Тип заглушки ClosedXML.Excel.IXLCFDataBarMin</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFDataBarMin.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCFDataBarMin</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFDataBarMin.cxml::ClosedXML#Excel#IXLCFDataBarMin#LowestValue">
            <summary>Задает заглушка IXLCFDataBarMin.LowestValue()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFDataBarMin.cxml::ClosedXML#Excel#IXLCFDataBarMin#Minimum(ClosedXML.Excel.XLCFContentType,System.Double)">
            <summary>Задает заглушка IXLCFDataBarMin.Minimum(XLCFContentType type, Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFDataBarMin.cxml::ClosedXML#Excel#IXLCFDataBarMin#Minimum(ClosedXML.Excel.XLCFContentType,System.String)">
            <summary>Задает заглушка IXLCFDataBarMin.Minimum(XLCFContentType type, String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFDataBarMin.LowestValue">
            <summary>Задает stub IXLCFDataBarMin.LowestValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFDataBarMin.MinimumXLCFContentTypeDouble">
            <summary>Задает stub IXLCFDataBarMin.Minimum(XLCFContentType type, Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFDataBarMin.MinimumXLCFContentTypeString">
            <summary>Задает stub IXLCFDataBarMin.Minimum(XLCFContentType type, String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCFIconSet">
            <summary>Тип заглушки ClosedXML.Excel.IXLCFIconSet</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFIconSet.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCFIconSet</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFIconSet.AddValueXLCFIconSetOperatorDoubleXLCFContentType">
            <summary>Задает stub IXLCFIconSet.AddValue(XLCFIconSetOperator setOperator, Double value, XLCFContentType type)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCFIconSet.AddValueXLCFIconSetOperatorStringXLCFContentType">
            <summary>Задает stub IXLCFIconSet.AddValue(XLCFIconSetOperator setOperator, String value, XLCFContentType type)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFIconSet.cxml::ClosedXML#Excel#IXLCFIconSet#AddValue(ClosedXML.Excel.XLCFIconSetOperator,System.String,ClosedXML.Excel.XLCFContentType)">
            <summary>Задает заглушка IXLCFIconSet.AddValue(XLCFIconSetOperator setOperator, String value, XLCFContentType type)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCFIconSet.cxml::ClosedXML#Excel#IXLCFIconSet#AddValue(ClosedXML.Excel.XLCFIconSetOperator,System.Double,ClosedXML.Excel.XLCFContentType)">
            <summary>Задает заглушка IXLCFIconSet.AddValue(XLCFIconSetOperator setOperator, Double value, XLCFContentType type)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCell">
            <summary>Тип заглушки ClosedXML.Excel.IXLCell</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCell</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.ActiveGet">
            <summary>Задает stub IXLCell.get_Active()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.ActiveSetBoolean">
            <summary>Задает stub IXLCell.set_Active(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.AddConditionalFormat">
            <summary>Задает stub IXLCell.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.AddToNamedString">
            <summary>Задает stub IXLCell.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.AddToNamedStringXLScope">
            <summary>Задает stub IXLCell.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLCell.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.AddressGet">
            <summary>Задает stub IXLCell.get_Address()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.AsRange">
            <summary>Задает stub IXLCell.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.AttachBackingFieldToActive">
            <summary>Присоединение делегатов для эмуляции StubIXLCell.Active как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.AttachBackingFieldToDataType">
            <summary>Присоединение делегатов для эмуляции StubIXLCell.DataType как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.AttachBackingFieldToFormulaA1">
            <summary>Присоединение делегатов для эмуляции StubIXLCell.FormulaA1 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.AttachBackingFieldToFormulaR1C1">
            <summary>Присоединение делегатов для эмуляции StubIXLCell.FormulaR1C1 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.AttachBackingFieldToFormulaReference">
            <summary>Присоединение делегатов для эмуляции StubIXLCell.FormulaReference как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.AttachBackingFieldToHyperlink">
            <summary>Присоединение делегатов для эмуляции StubIXLCell.Hyperlink как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.AttachBackingFieldToShareString">
            <summary>Присоединение делегатов для эмуляции StubIXLCell.ShareString как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLCell.Style как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.AttachBackingFieldToValue">
            <summary>Присоединение делегатов для эмуляции StubIXLCell.Value как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CellAbove">
            <summary>Задает stub IXLCell.CellAbove()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CellAboveInt32">
            <summary>Задает stub IXLCell.CellAbove(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CellBelow">
            <summary>Задает stub IXLCell.CellBelow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CellBelowInt32">
            <summary>Задает stub IXLCell.CellBelow(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CellLeft">
            <summary>Задает stub IXLCell.CellLeft()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CellLeftInt32">
            <summary>Задает stub IXLCell.CellLeft(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CellRight">
            <summary>Задает stub IXLCell.CellRight()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CellRightInt32">
            <summary>Задает stub IXLCell.CellRight(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.ClearXLClearOptions">
            <summary>Задает stub IXLCell.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#AddConditionalFormat">
            <summary>Задает заглушка IXLCell.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#AddToNamed(System.String)">
            <summary>Задает заглушка IXLCell.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLCell.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLCell.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#AsRange">
            <summary>Задает заглушка IXLCell.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CellAbove">
            <summary>Задает заглушка IXLCell.CellAbove()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CellAbove(System.Int32)">
            <summary>Задает заглушка IXLCell.CellAbove(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CellBelow">
            <summary>Задает заглушка IXLCell.CellBelow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CellBelow(System.Int32)">
            <summary>Задает заглушка IXLCell.CellBelow(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CellLeft">
            <summary>Задает заглушка IXLCell.CellLeft()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CellLeft(System.Int32)">
            <summary>Задает заглушка IXLCell.CellLeft(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CellRight">
            <summary>Задает заглушка IXLCell.CellRight()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CellRight(System.Int32)">
            <summary>Задает заглушка IXLCell.CellRight(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLCell.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CopyFrom(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLCell.CopyFrom(IXLCell otherCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CopyFrom(System.String)">
            <summary>Задает заглушка IXLCell.CopyFrom(String otherCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CopyTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLCell.CopyTo(IXLCell target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#CopyTo(System.String)">
            <summary>Задает заглушка IXLCell.CopyTo(String target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Delete(ClosedXML.Excel.XLShiftDeletedCells)">
            <summary>Задает заглушка IXLCell.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#GetBoolean">
            <summary>Задает заглушка IXLCell.GetBoolean()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#GetDateTime">
            <summary>Задает заглушка IXLCell.GetDateTime()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#GetDouble">
            <summary>Задает заглушка IXLCell.GetDouble()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#GetFormattedString">
            <summary>Задает заглушка IXLCell.GetFormattedString()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#GetHyperlink">
            <summary>Задает заглушка IXLCell.GetHyperlink()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#GetString">
            <summary>Задает заглушка IXLCell.GetString()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#GetTimeSpan">
            <summary>Задает заглушка IXLCell.GetTimeSpan()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#GetValue``1">
            <summary>Задает заглушка IXLCell.GetValue()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertCellsAbove(System.Int32)">
            <summary>Задает заглушка IXLCell.InsertCellsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertCellsAfter(System.Int32)">
            <summary>Задает заглушка IXLCell.InsertCellsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertCellsBefore(System.Int32)">
            <summary>Задает заглушка IXLCell.InsertCellsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertCellsBelow(System.Int32)">
            <summary>Задает заглушка IXLCell.InsertCellsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertData(System.Collections.IEnumerable)">
            <summary>Задает заглушка IXLCell.InsertData(IEnumerable data)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertTable(System.Data.DataTable)">
            <summary>Задает заглушка IXLCell.InsertTable(DataTable data)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Задает заглушка IXLCell.InsertTable(IEnumerable`1&lt;!!0&gt; data)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertTable(System.Data.DataTable,System.Boolean)">
            <summary>Задает заглушка IXLCell.InsertTable(DataTable data, Boolean createTable)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertTable(System.Data.DataTable,System.String)">
            <summary>Задает заглушка IXLCell.InsertTable(DataTable data, String tableName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertTable``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>Задает заглушка IXLCell.InsertTable(IEnumerable`1&lt;!!0&gt; data, String tableName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertTable``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>Задает заглушка IXLCell.InsertTable(IEnumerable`1&lt;!!0&gt; data, Boolean createTable)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertTable(System.Data.DataTable,System.String,System.Boolean)">
            <summary>Задает заглушка IXLCell.InsertTable(DataTable data, String tableName, Boolean createTable)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#InsertTable``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)">
            <summary>Задает заглушка IXLCell.InsertTable(IEnumerable`1&lt;!!0&gt; data, String tableName, Boolean createTable)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#IsEmpty">
            <summary>Задает заглушка IXLCell.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLCell.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#IsMerged">
            <summary>Задает заглушка IXLCell.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Select">
            <summary>Задает заглушка IXLCell.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#SetActive(System.Boolean)">
            <summary>Задает заглушка IXLCell.SetActive(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLCell.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#SetDataValidation">
            <summary>Задает заглушка IXLCell.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#SetFormulaA1(System.String)">
            <summary>Задает заглушка IXLCell.SetFormulaA1(String formula)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#SetFormulaR1C1(System.String)">
            <summary>Задает заглушка IXLCell.SetFormulaR1C1(String formula)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#SetValue``1(``0)">
            <summary>Задает заглушка IXLCell.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#TryGetValue``1(``0@)">
            <summary>Задает заглушка IXLCell.TryGetValue(!!0&amp; value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#WorksheetColumn">
            <summary>Задает заглушка IXLCell.WorksheetColumn()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#WorksheetRow">
            <summary>Задает заглушка IXLCell.WorksheetRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CommentGet">
            <summary>Задает stub IXLCell.get_Comment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CopyFromIXLCell">
            <summary>Задает stub IXLCell.CopyFrom(IXLCell otherCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CopyFromString">
            <summary>Задает stub IXLCell.CopyFrom(String otherCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CopyToIXLCell">
            <summary>Задает stub IXLCell.CopyTo(IXLCell target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.CopyToString">
            <summary>Задает stub IXLCell.CopyTo(String target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.DataTypeGet">
            <summary>Задает stub IXLCell.get_DataType()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.DataTypeSetXLCellValues">
            <summary>Задает stub IXLCell.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.DataValidationGet">
            <summary>Задает stub IXLCell.get_DataValidation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.DeleteXLShiftDeletedCells">
            <summary>Задает stub IXLCell.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.FormulaA1Get">
            <summary>Задает stub IXLCell.get_FormulaA1()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.FormulaA1SetString">
            <summary>Задает stub IXLCell.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.FormulaR1C1Get">
            <summary>Задает stub IXLCell.get_FormulaR1C1()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.FormulaR1C1SetString">
            <summary>Задает stub IXLCell.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.FormulaReferenceGet">
            <summary>Задает stub IXLCell.get_FormulaReference()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.FormulaReferenceSetIXLRangeAddress">
            <summary>Задает stub IXLCell.set_FormulaReference(IXLRangeAddress value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.GetBoolean">
            <summary>Задает stub IXLCell.GetBoolean()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.GetDateTime">
            <summary>Задает stub IXLCell.GetDateTime()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.GetDouble">
            <summary>Задает stub IXLCell.GetDouble()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.GetFormattedString">
            <summary>Задает stub IXLCell.GetFormattedString()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.GetHyperlink">
            <summary>Задает stub IXLCell.GetHyperlink()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.GetString">
            <summary>Задает stub IXLCell.GetString()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.GetTimeSpan">
            <summary>Задает stub IXLCell.GetTimeSpan()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.GetValueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Задает заглушки GetValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.HasCommentGet">
            <summary>Задает stub IXLCell.get_HasComment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.HasDataValidationGet">
            <summary>Задает stub IXLCell.get_HasDataValidation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.HasFormulaGet">
            <summary>Задает stub IXLCell.get_HasFormula()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.HasHyperlinkGet">
            <summary>Задает stub IXLCell.get_HasHyperlink()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.HasRichTextGet">
            <summary>Задает stub IXLCell.get_HasRichText()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.HyperlinkGet">
            <summary>Задает stub IXLCell.get_Hyperlink()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.HyperlinkSetXLHyperlink">
            <summary>Задает stub IXLCell.set_Hyperlink(XLHyperlink value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.InsertCellsAboveInt32">
            <summary>Задает stub IXLCell.InsertCellsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.InsertCellsAfterInt32">
            <summary>Задает stub IXLCell.InsertCellsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.InsertCellsBeforeInt32">
            <summary>Задает stub IXLCell.InsertCellsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.InsertCellsBelowInt32">
            <summary>Задает stub IXLCell.InsertCellsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.InsertDataIEnumerable">
            <summary>Задает stub IXLCell.InsertData(IEnumerable data)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.InsertTableDataTable">
            <summary>Задает stub IXLCell.InsertTable(DataTable data)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.InsertTableDataTableBoolean">
            <summary>Задает stub IXLCell.InsertTable(DataTable data, Boolean createTable)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.InsertTableDataTableString">
            <summary>Задает stub IXLCell.InsertTable(DataTable data, String tableName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.InsertTableDataTableStringBoolean">
            <summary>Задает stub IXLCell.InsertTable(DataTable data, String tableName, Boolean createTable)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.InsertTableOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},ClosedXML.Excel.IXLTable})">
            <summary>Задает заглушки InsertTable(IEnumerable`1&lt;!!0&gt; data)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.InsertTableOf1IEnumerableOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean,ClosedXML.Excel.IXLTable})">
            <summary>Задает заглушки InsertTable(IEnumerable`1&lt;!!0&gt; data, Boolean createTable)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.InsertTableOf1IEnumerableOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.String,ClosedXML.Excel.IXLTable})">
            <summary>Задает заглушки InsertTable(IEnumerable`1&lt;!!0&gt; data, String tableName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.InsertTableOf1IEnumerableOfM0StringBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean,ClosedXML.Excel.IXLTable})">
            <summary>Задает заглушки InsertTable(IEnumerable`1&lt;!!0&gt; data, String tableName, Boolean createTable)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.IsEmpty">
            <summary>Задает stub IXLCell.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.IsEmptyBoolean">
            <summary>Задает stub IXLCell.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.IsMerged">
            <summary>Задает stub IXLCell.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.NewDataValidationGet">
            <summary>Задает stub IXLCell.get_NewDataValidation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.RichTextGet">
            <summary>Задает stub IXLCell.get_RichText()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.Select">
            <summary>Задает stub IXLCell.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.SetActiveBoolean">
            <summary>Задает stub IXLCell.SetActive(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.SetDataTypeXLCellValues">
            <summary>Задает stub IXLCell.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.SetDataValidation">
            <summary>Задает stub IXLCell.SetDataValidation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.SetFormulaA1String">
            <summary>Задает stub IXLCell.SetFormulaA1(String formula)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.SetFormulaR1C1String">
            <summary>Задает stub IXLCell.SetFormulaR1C1(String formula)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLCell})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.ShareStringGet">
            <summary>Задает stub IXLCell.get_ShareString()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.ShareStringSetBoolean">
            <summary>Задает stub IXLCell.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.StyleGet">
            <summary>Задает stub IXLCell.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.StyleSetIXLStyle">
            <summary>Задает stub IXLCell.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCell.TryGetValueOf1M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{``0,System.Boolean})">
            <summary>Задает заглушки TryGetValue(!!0&amp; value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.ValueCachedGet">
            <summary>Задает stub IXLCell.get_ValueCached()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.ValueGet">
            <summary>Задает stub IXLCell.get_Value()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.ValueSetObject">
            <summary>Задает stub IXLCell.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.WorksheetColumn">
            <summary>Задает stub IXLCell.WorksheetColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.WorksheetGet">
            <summary>Задает stub IXLCell.get_Worksheet()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCell.WorksheetRow">
            <summary>Задает stub IXLCell.WorksheetRow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Active">
            <summary>Задает stub IXLCell.get_Active()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Address">
            <summary>Задает stub IXLCell.get_Address()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Comment">
            <summary>Задает stub IXLCell.get_Comment()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#DataType">
            <summary>Задает stub IXLCell.get_DataType()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#DataValidation">
            <summary>Задает stub IXLCell.get_DataValidation()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#FormulaA1">
            <summary>Задает stub IXLCell.get_FormulaA1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#FormulaR1C1">
            <summary>Задает stub IXLCell.get_FormulaR1C1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#FormulaReference">
            <summary>Задает stub IXLCell.get_FormulaReference()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#HasComment">
            <summary>Задает stub IXLCell.get_HasComment()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#HasDataValidation">
            <summary>Задает stub IXLCell.get_HasDataValidation()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#HasFormula">
            <summary>Задает stub IXLCell.get_HasFormula()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#HasHyperlink">
            <summary>Задает stub IXLCell.get_HasHyperlink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#HasRichText">
            <summary>Задает stub IXLCell.get_HasRichText()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Hyperlink">
            <summary>Задает stub IXLCell.get_Hyperlink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#NewDataValidation">
            <summary>Задает stub IXLCell.get_NewDataValidation()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#RichText">
            <summary>Задает stub IXLCell.get_RichText()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#ShareString">
            <summary>Задает stub IXLCell.get_ShareString()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Style">
            <summary>Задает stub IXLCell.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Value">
            <summary>Задает stub IXLCell.get_Value()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#ValueCached">
            <summary>Задает stub IXLCell.get_ValueCached()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCell.cxml::ClosedXML#Excel#IXLCell#Worksheet">
            <summary>Задает stub IXLCell.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCells">
            <summary>Тип заглушки ClosedXML.Excel.IXLCells</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCells.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCells</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCells.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLCells.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.ClearXLClearOptions">
            <summary>Задает stub IXLCells.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCells.cxml::ClosedXML#Excel#IXLCells#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLCells.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCells.cxml::ClosedXML#Excel#IXLCells#DeleteComments">
            <summary>Задает заглушка IXLCells.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCells.cxml::ClosedXML#Excel#IXLCells#Select">
            <summary>Задает заглушка IXLCells.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCells.cxml::ClosedXML#Excel#IXLCells#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLCells.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.DataTypeSetXLCellValues">
            <summary>Задает stub IXLCells.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.DeleteComments">
            <summary>Задает stub IXLCells.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.FormulaA1SetString">
            <summary>Задает stub IXLCells.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.FormulaR1C1SetString">
            <summary>Задает stub IXLCells.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.Select">
            <summary>Задает stub IXLCells.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.SetDataTypeXLCellValues">
            <summary>Задает stub IXLCells.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.StyleGet">
            <summary>Задает stub IXLCells.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.StyleSetIXLStyle">
            <summary>Задает stub IXLCells.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCells.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLCell}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCells.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCells.ValueSetObject">
            <summary>Задает stub IXLCells.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCells.cxml::ClosedXML#Excel#IXLCells#DataType">
            <summary>Задает stub IXLCells.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCells.cxml::ClosedXML#Excel#IXLCells#FormulaA1">
            <summary>Задает stub IXLCells.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCells.cxml::ClosedXML#Excel#IXLCells#FormulaR1C1">
            <summary>Задает stub IXLCells.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCells.cxml::ClosedXML#Excel#IXLCells#Style">
            <summary>Задает stub IXLCells.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCells.cxml::ClosedXML#Excel#IXLCells#Value">
            <summary>Задает stub IXLCells.set_Value(Object value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLChart">
            <summary>Тип заглушки ClosedXML.Excel.IXLChart</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLChart</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.AttachBackingFieldToChartType">
            <summary>Присоединение делегатов для эмуляции StubIXLChart.ChartType как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.AttachBackingFieldToRightAngleAxes">
            <summary>Присоединение делегатов для эмуляции StubIXLChart.RightAngleAxes как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.AttachBackingFieldToVisible">
            <summary>Присоединение делегатов для эмуляции StubIXLChart.Visible как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.AttachBackingFieldToZOrder">
            <summary>Присоединение делегатов для эмуляции StubIXLChart.ZOrder как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.ChartTypeGet">
            <summary>Задает stub IXLChart.get_ChartType()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.ChartTypeSetXLChartType">
            <summary>Задает stub IXLChart.set_ChartType(XLChartType value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLChart#SetChartType(ClosedXML.Excel.XLChartType)">
            <summary>Задает заглушка IXLChart.SetChartType(XLChartType chartType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLChart#SetRightAngleAxes">
            <summary>Задает заглушка IXLChart.SetRightAngleAxes()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLChart#SetRightAngleAxes(System.Boolean)">
            <summary>Задает заглушка IXLChart.SetRightAngleAxes(Boolean rightAngleAxes)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLChart}#SetVisible">
            <summary>Задает заглушка IXLDrawing`1.SetVisible()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLChart}#SetVisible(System.Boolean)">
            <summary>Задает заглушка IXLDrawing`1.SetVisible(Boolean hidden)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLChart}#SetZOrder(System.Int32)">
            <summary>Задает заглушка IXLDrawing`1.SetZOrder(Int32 zOrder)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.PositionGet">
            <summary>Задает stub IXLDrawing`1.get_Position()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.RightAngleAxesGet">
            <summary>Задает stub IXLChart.get_RightAngleAxes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.RightAngleAxesSetBoolean">
            <summary>Задает stub IXLChart.set_RightAngleAxes(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.SetChartTypeXLChartType">
            <summary>Задает stub IXLChart.SetChartType(XLChartType chartType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.SetRightAngleAxes">
            <summary>Задает stub IXLChart.SetRightAngleAxes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.SetRightAngleAxesBoolean">
            <summary>Задает stub IXLChart.SetRightAngleAxes(Boolean rightAngleAxes)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.SetVisible">
            <summary>Задает stub IXLDrawing`1.SetVisible()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.SetVisibleBoolean">
            <summary>Задает stub IXLDrawing`1.SetVisible(Boolean hidden)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.SetZOrderInt32">
            <summary>Задает stub IXLDrawing`1.SetZOrder(Int32 zOrder)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.ShapeIdGet">
            <summary>Задает stub IXLDrawing`1.get_ShapeId()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.StyleGet">
            <summary>Задает stub IXLDrawing`1.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.VisibleGet">
            <summary>Задает stub IXLDrawing`1.get_Visible()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.VisibleSetBoolean">
            <summary>Задает stub IXLDrawing`1.set_Visible(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.ZOrderGet">
            <summary>Задает stub IXLDrawing`1.get_ZOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLChart.ZOrderSetInt32">
            <summary>Задает stub IXLDrawing`1.set_ZOrder(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLChart#ChartType">
            <summary>Задает stub IXLChart.get_ChartType()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLChart}#Position">
            <summary>Задает stub IXLDrawing`1.get_Position()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLChart#RightAngleAxes">
            <summary>Задает stub IXLChart.get_RightAngleAxes()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLChart}#ShapeId">
            <summary>Задает stub IXLDrawing`1.get_ShapeId()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLChart}#Style">
            <summary>Задает stub IXLDrawing`1.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLChart}#Visible">
            <summary>Задает stub IXLDrawing`1.get_Visible()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLChart.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLChart}#ZOrder">
            <summary>Задает stub IXLDrawing`1.get_ZOrder()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCharts">
            <summary>Тип заглушки ClosedXML.Excel.IXLCharts</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCharts.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCharts</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCharts.AddIXLChart">
            <summary>Задает stub IXLCharts.Add(IXLChart chart)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCharts.cxml::ClosedXML#Excel#IXLCharts#Add(ClosedXML.Excel.IXLChart)">
            <summary>Задает заглушка IXLCharts.Add(IXLChart chart)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCharts.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCharts.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCharts.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLChart}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCharts.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLColumn">
            <summary>Тип заглушки ClosedXML.Excel.IXLColumn</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLColumn</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AddVerticalPageBreak">
            <summary>Задает stub IXLColumn.AddVerticalPageBreak()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AdjustToContents">
            <summary>Задает stub IXLColumn.AdjustToContents()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AdjustToContentsDoubleDouble">
            <summary>Задает stub IXLColumn.AdjustToContents(Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AdjustToContentsInt32">
            <summary>Задает stub IXLColumn.AdjustToContents(Int32 startRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AdjustToContentsInt32DoubleDouble">
            <summary>Задает stub IXLColumn.AdjustToContents(Int32 startRow, Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AdjustToContentsInt32Int32">
            <summary>Задает stub IXLColumn.AdjustToContents(Int32 startRow, Int32 endRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AdjustToContentsInt32Int32DoubleDouble">
            <summary>Задает stub IXLColumn.AdjustToContents(Int32 startRow, Int32 endRow, Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.AttachBackingFieldToOutlineLevel">
            <summary>Присоединение делегатов для эмуляции StubIXLColumn.OutlineLevel как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLColumn.Style как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.AttachBackingFieldToWidth">
            <summary>Присоединение делегатов для эмуляции StubIXLColumn.Width как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellCount">
            <summary>Задает stub IXLColumn.CellCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellInt32">
            <summary>Задает stub IXLColumn.Cell(Int32 rowNumber)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellsInt32Int32">
            <summary>Задает stub IXLColumn.Cells(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellsString">
            <summary>Задает stub IXLColumn.Cells(String cellsInColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellsString01">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ClearXLClearOptions">
            <summary>Задает stub IXLColumn.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ClearXLClearOptions01">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#AddVerticalPageBreak">
            <summary>Задает заглушка IXLColumn.AddVerticalPageBreak()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#AdjustToContents">
            <summary>Задает заглушка IXLColumn.AdjustToContents()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#AdjustToContents(System.Int32)">
            <summary>Задает заглушка IXLColumn.AdjustToContents(Int32 startRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#AdjustToContents(System.Double,System.Double)">
            <summary>Задает заглушка IXLColumn.AdjustToContents(Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#AdjustToContents(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLColumn.AdjustToContents(Int32 startRow, Int32 endRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#AdjustToContents(System.Int32,System.Double,System.Double)">
            <summary>Задает заглушка IXLColumn.AdjustToContents(Int32 startRow, Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#AdjustToContents(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Задает заглушка IXLColumn.AdjustToContents(Int32 startRow, Int32 endRow, Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Cell(System.Int32)">
            <summary>Задает заглушка IXLColumn.Cell(Int32 rowNumber)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#CellCount">
            <summary>Задает заглушка IXLColumn.CellCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Cells(System.String)">
            <summary>Задает заглушка IXLColumn.Cells(String cellsInColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Cells(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLColumn.Cells(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLColumn.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Collapse">
            <summary>Задает заглушка IXLColumn.Collapse()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Column(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLColumn.Column(Int32 start, Int32 end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Column(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLColumn.Column(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#ColumnLeft">
            <summary>Задает заглушка IXLColumn.ColumnLeft()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#ColumnLeft(System.Int32)">
            <summary>Задает заглушка IXLColumn.ColumnLeft(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#ColumnLetter">
            <summary>Задает заглушка IXLColumn.ColumnLetter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#ColumnNumber">
            <summary>Задает заглушка IXLColumn.ColumnNumber()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#ColumnRight">
            <summary>Задает заглушка IXLColumn.ColumnRight()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#ColumnRight(System.Int32)">
            <summary>Задает заглушка IXLColumn.ColumnRight(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#ColumnUsed(System.Boolean)">
            <summary>Задает заглушка IXLColumn.ColumnUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Columns(System.String)">
            <summary>Задает заглушка IXLColumn.Columns(String columns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#CopyTo(ClosedXML.Excel.IXLColumn)">
            <summary>Задает заглушка IXLColumn.CopyTo(IXLColumn column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#CopyTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLColumn.CopyTo(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#CopyTo(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLColumn.CopyTo(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Delete">
            <summary>Задает заглушка IXLColumn.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Expand">
            <summary>Задает заглушка IXLColumn.Expand()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Group">
            <summary>Задает заглушка IXLColumn.Group()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Group(System.Boolean)">
            <summary>Задает заглушка IXLColumn.Group(Boolean collapse)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Group(System.Int32)">
            <summary>Задает заглушка IXLColumn.Group(Int32 outlineLevel)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Group(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLColumn.Group(Int32 outlineLevel, Boolean collapse)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Hide">
            <summary>Задает заглушка IXLColumn.Hide()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#InsertColumnsAfter(System.Int32)">
            <summary>Задает заглушка IXLColumn.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#InsertColumnsBefore(System.Int32)">
            <summary>Задает заглушка IXLColumn.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLColumn.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Sort(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLColumn.Sort(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Ungroup">
            <summary>Задает заглушка IXLColumn.Ungroup()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Ungroup(System.Boolean)">
            <summary>Задает заглушка IXLColumn.Ungroup(Boolean fromAll)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Unhide">
            <summary>Задает заглушка IXLColumn.Unhide()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Collapse">
            <summary>Задает stub IXLColumn.Collapse()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnIXLCellIXLCell">
            <summary>Задает stub IXLColumn.Column(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnInt32Int32">
            <summary>Задает stub IXLColumn.Column(Int32 start, Int32 end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnLeft">
            <summary>Задает stub IXLColumn.ColumnLeft()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnLeftInt32">
            <summary>Задает stub IXLColumn.ColumnLeft(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnLetter">
            <summary>Задает stub IXLColumn.ColumnLetter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnNumber">
            <summary>Задает stub IXLColumn.ColumnNumber()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnRight">
            <summary>Задает stub IXLColumn.ColumnRight()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnRightInt32">
            <summary>Задает stub IXLColumn.ColumnRight(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnUsedBoolean">
            <summary>Задает stub IXLColumn.ColumnUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ColumnsString">
            <summary>Задает stub IXLColumn.Columns(String columns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CopyToIXLCell">
            <summary>Задает stub IXLColumn.CopyTo(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CopyToIXLColumn">
            <summary>Задает stub IXLColumn.CopyTo(IXLColumn column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CopyToIXLRangeBase">
            <summary>Задает stub IXLColumn.CopyTo(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Delete">
            <summary>Задает stub IXLColumn.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Expand">
            <summary>Задает stub IXLColumn.Expand()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Group">
            <summary>Задает stub IXLColumn.Group()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.GroupBoolean">
            <summary>Задает stub IXLColumn.Group(Boolean collapse)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.GroupInt32">
            <summary>Задает stub IXLColumn.Group(Int32 outlineLevel)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.GroupInt32Boolean">
            <summary>Задает stub IXLColumn.Group(Int32 outlineLevel, Boolean collapse)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Hide">
            <summary>Задает stub IXLColumn.Hide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.InsertColumnsAfterInt32">
            <summary>Задает stub IXLColumn.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.InsertColumnsBeforeInt32">
            <summary>Задает stub IXLColumn.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.IsHiddenGet">
            <summary>Задает stub IXLColumn.get_IsHidden()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.OutlineLevelGet">
            <summary>Задает stub IXLColumn.get_OutlineLevel()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.OutlineLevelSetInt32">
            <summary>Задает stub IXLColumn.set_OutlineLevel(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.SetAutoFilter">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.SetDataTypeXLCellValues">
            <summary>Задает stub IXLColumn.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.SortXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLColumn.Sort(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumn.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Ungroup">
            <summary>Задает stub IXLColumn.Ungroup()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.UngroupBoolean">
            <summary>Задает stub IXLColumn.Ungroup(Boolean fromAll)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Unhide">
            <summary>Задает stub IXLColumn.Unhide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.WidthGet">
            <summary>Задает stub IXLColumn.get_Width()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.WidthSetDouble">
            <summary>Задает stub IXLColumn.set_Width(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumn.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#IsHidden">
            <summary>Задает stub IXLColumn.get_IsHidden()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#OutlineLevel">
            <summary>Задает stub IXLColumn.get_OutlineLevel()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLColumn#Width">
            <summary>Задает stub IXLColumn.get_Width()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumn.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLColumns">
            <summary>Тип заглушки ClosedXML.Excel.IXLColumns</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLColumns</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.AddVerticalPageBreaks">
            <summary>Задает stub IXLColumns.AddVerticalPageBreaks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.AdjustToContents">
            <summary>Задает stub IXLColumns.AdjustToContents()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.AdjustToContentsDoubleDouble">
            <summary>Задает stub IXLColumns.AdjustToContents(Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.AdjustToContentsInt32">
            <summary>Задает stub IXLColumns.AdjustToContents(Int32 startRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.AdjustToContentsInt32DoubleDouble">
            <summary>Задает stub IXLColumns.AdjustToContents(Int32 startRow, Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.AdjustToContentsInt32Int32">
            <summary>Задает stub IXLColumns.AdjustToContents(Int32 startRow, Int32 endRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.AdjustToContentsInt32Int32DoubleDouble">
            <summary>Задает stub IXLColumns.AdjustToContents(Int32 startRow, Int32 endRow, Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLColumns.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Cells">
            <summary>Задает stub IXLColumns.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.CellsUsed">
            <summary>Задает stub IXLColumns.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.CellsUsedBoolean">
            <summary>Задает stub IXLColumns.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.ClearXLClearOptions">
            <summary>Задает stub IXLColumns.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#AddVerticalPageBreaks">
            <summary>Задает заглушка IXLColumns.AddVerticalPageBreaks()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#AdjustToContents">
            <summary>Задает заглушка IXLColumns.AdjustToContents()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#AdjustToContents(System.Int32)">
            <summary>Задает заглушка IXLColumns.AdjustToContents(Int32 startRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#AdjustToContents(System.Double,System.Double)">
            <summary>Задает заглушка IXLColumns.AdjustToContents(Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#AdjustToContents(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLColumns.AdjustToContents(Int32 startRow, Int32 endRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#AdjustToContents(System.Int32,System.Double,System.Double)">
            <summary>Задает заглушка IXLColumns.AdjustToContents(Int32 startRow, Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#AdjustToContents(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Задает заглушка IXLColumns.AdjustToContents(Int32 startRow, Int32 endRow, Double minWidth, Double maxWidth)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Cells">
            <summary>Задает заглушка IXLColumns.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#CellsUsed">
            <summary>Задает заглушка IXLColumns.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLColumns.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLColumns.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Collapse">
            <summary>Задает заглушка IXLColumns.Collapse()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Delete">
            <summary>Задает заглушка IXLColumns.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Expand">
            <summary>Задает заглушка IXLColumns.Expand()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Group">
            <summary>Задает заглушка IXLColumns.Group()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Group(System.Boolean)">
            <summary>Задает заглушка IXLColumns.Group(Boolean collapse)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Group(System.Int32)">
            <summary>Задает заглушка IXLColumns.Group(Int32 outlineLevel)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Group(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLColumns.Group(Int32 outlineLevel, Boolean collapse)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Hide">
            <summary>Задает заглушка IXLColumns.Hide()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Select">
            <summary>Задает заглушка IXLColumns.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLColumns.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Ungroup">
            <summary>Задает заглушка IXLColumns.Ungroup()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Ungroup(System.Boolean)">
            <summary>Задает заглушка IXLColumns.Ungroup(Boolean fromAll)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Unhide">
            <summary>Задает заглушка IXLColumns.Unhide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Collapse">
            <summary>Задает stub IXLColumns.Collapse()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Delete">
            <summary>Задает stub IXLColumns.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Expand">
            <summary>Задает stub IXLColumns.Expand()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Group">
            <summary>Задает stub IXLColumns.Group()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.GroupBoolean">
            <summary>Задает stub IXLColumns.Group(Boolean collapse)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.GroupInt32">
            <summary>Задает stub IXLColumns.Group(Int32 outlineLevel)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.GroupInt32Boolean">
            <summary>Задает stub IXLColumns.Group(Int32 outlineLevel, Boolean collapse)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Hide">
            <summary>Задает stub IXLColumns.Hide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Select">
            <summary>Задает stub IXLColumns.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.SetDataTypeXLCellValues">
            <summary>Задает stub IXLColumns.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.StyleGet">
            <summary>Задает stub IXLColumns.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.StyleSetIXLStyle">
            <summary>Задает stub IXLColumns.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLColumn}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLColumns.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Ungroup">
            <summary>Задает stub IXLColumns.Ungroup()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.UngroupBoolean">
            <summary>Задает stub IXLColumns.Ungroup(Boolean fromAll)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.Unhide">
            <summary>Задает stub IXLColumns.Unhide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLColumns.WidthSetDouble">
            <summary>Задает stub IXLColumns.set_Width(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Style">
            <summary>Задает stub IXLColumns.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLColumns.cxml::ClosedXML#Excel#IXLColumns#Width">
            <summary>Задает stub IXLColumns.set_Width(Double value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLComment">
            <summary>Тип заглушки ClosedXML.Excel.IXLComment</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLComment</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.AddNewLine">
            <summary>Задает stub IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.AddSignature">
            <summary>Задает stub IXLComment.AddSignature()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.AddTextString">
            <summary>Задает stub IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.AddTextStringIXLFontBase">
            <summary>Задает stub IXLFormattedText`1.AddText(String text, IXLFontBase font)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.AttachBackingFieldToAuthor">
            <summary>Присоединение делегатов для эмуляции StubIXLComment.Author как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.AttachBackingFieldToVisible">
            <summary>Присоединение делегатов для эмуляции StubIXLComment.Visible как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.AttachBackingFieldToZOrder">
            <summary>Присоединение делегатов для эмуляции StubIXLComment.ZOrder как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.AuthorGet">
            <summary>Задает stub IXLComment.get_Author()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.AuthorSetString">
            <summary>Задает stub IXLComment.set_Author(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.BoldSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Bold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.ClearFont">
            <summary>Задает stub IXLFormattedText`1.ClearFont()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.ClearText">
            <summary>Задает stub IXLFormattedText`1.ClearText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLComment#AddSignature">
            <summary>Задает заглушка IXLComment.AddSignature()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLComment#Delete">
            <summary>Задает заглушка IXLComment.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLComment#SetAuthor(System.String)">
            <summary>Задает заглушка IXLComment.SetAuthor(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLComment}#SetVisible">
            <summary>Задает заглушка IXLDrawing`1.SetVisible()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLComment}#SetVisible(System.Boolean)">
            <summary>Задает заглушка IXLDrawing`1.SetVisible(Boolean hidden)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLComment}#SetZOrder(System.Int32)">
            <summary>Задает заглушка IXLDrawing`1.SetZOrder(Int32 zOrder)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#AddText(System.String,ClosedXML.Excel.IXLFontBase)">
            <summary>Задает заглушка IXLFormattedText`1.AddText(String text, IXLFontBase font)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#ClearFont">
            <summary>Задает заглушка IXLFormattedText`1.ClearFont()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#ClearText">
            <summary>Задает заглушка IXLFormattedText`1.ClearText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetBold">
            <summary>Задает заглушка IXLFormattedText`1.SetBold()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetBold(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetBold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetFontColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetFontFamilyNumbering(ClosedXML.Excel.XLFontFamilyNumberingValues)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetFontName(System.String)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontName(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetFontSize(System.Double)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontSize(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetItalic">
            <summary>Задает заглушка IXLFormattedText`1.SetItalic()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetItalic(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetItalic(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetShadow">
            <summary>Задает заглушка IXLFormattedText`1.SetShadow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetShadow(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetShadow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetStrikethrough">
            <summary>Задает заглушка IXLFormattedText`1.SetStrikethrough()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetStrikethrough(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetUnderline">
            <summary>Задает заглушка IXLFormattedText`1.SetUnderline()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetUnderline(ClosedXML.Excel.XLFontUnderlineValues)">
            <summary>Задает заглушка IXLFormattedText`1.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#SetVerticalAlignment(ClosedXML.Excel.XLFontVerticalTextAlignmentValues)">
            <summary>Задает заглушка IXLFormattedText`1.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Substring(System.Int32)">
            <summary>Задает заглушка IXLFormattedText`1.Substring(Int32 index)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Substring(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLFormattedText`1.Substring(Int32 index, Int32 length)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLWithRichString#AddNewLine">
            <summary>Задает заглушка IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLWithRichString#AddText(System.String)">
            <summary>Задает заглушка IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.CountGet">
            <summary>Задает stub IXLFormattedText`1.get_Count()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.Delete">
            <summary>Задает stub IXLComment.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.EqualsIXLFormattedTextOfIXLComment">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.FontColorSetXLColor">
            <summary>Задает stub IXLFormattedText`1.set_FontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.FontFamilyNumberingSetXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFormattedText`1.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.FontNameSetString">
            <summary>Задает stub IXLFormattedText`1.set_FontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.FontSizeSetDouble">
            <summary>Задает stub IXLFormattedText`1.set_FontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.HasPhoneticsGet">
            <summary>Задает stub IXLFormattedText`1.get_HasPhonetics()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.ItalicSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Italic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.LengthGet">
            <summary>Задает stub IXLFormattedText`1.get_Length()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.PhoneticsGet">
            <summary>Задает stub IXLFormattedText`1.get_Phonetics()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.PositionGet">
            <summary>Задает stub IXLDrawing`1.get_Position()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetAuthorString">
            <summary>Задает stub IXLComment.SetAuthor(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetBold">
            <summary>Задает stub IXLFormattedText`1.SetBold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetBoldBoolean">
            <summary>Задает stub IXLFormattedText`1.SetBold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetFontColorXLColor">
            <summary>Задает stub IXLFormattedText`1.SetFontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetFontFamilyNumberingXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFormattedText`1.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetFontNameString">
            <summary>Задает stub IXLFormattedText`1.SetFontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetFontSizeDouble">
            <summary>Задает stub IXLFormattedText`1.SetFontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetItalic">
            <summary>Задает stub IXLFormattedText`1.SetItalic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetItalicBoolean">
            <summary>Задает stub IXLFormattedText`1.SetItalic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetShadow">
            <summary>Задает stub IXLFormattedText`1.SetShadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetShadowBoolean">
            <summary>Задает stub IXLFormattedText`1.SetShadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetStrikethrough">
            <summary>Задает stub IXLFormattedText`1.SetStrikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetStrikethroughBoolean">
            <summary>Задает stub IXLFormattedText`1.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetUnderline">
            <summary>Задает stub IXLFormattedText`1.SetUnderline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetUnderlineXLFontUnderlineValues">
            <summary>Задает stub IXLFormattedText`1.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetVerticalAlignmentXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFormattedText`1.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetVisible">
            <summary>Задает stub IXLDrawing`1.SetVisible()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetVisibleBoolean">
            <summary>Задает stub IXLDrawing`1.SetVisible(Boolean hidden)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SetZOrderInt32">
            <summary>Задает stub IXLDrawing`1.SetZOrder(Int32 zOrder)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.ShadowSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Shadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.ShapeIdGet">
            <summary>Задает stub IXLDrawing`1.get_ShapeId()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.StrikethroughSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.StyleGet">
            <summary>Задает stub IXLDrawing`1.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SubstringInt32">
            <summary>Задает stub IXLFormattedText`1.Substring(Int32 index)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.SubstringInt32Int32">
            <summary>Задает stub IXLFormattedText`1.Substring(Int32 index, Int32 length)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLRichString}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLComment.global::System#IEquatable{ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}}#Equals(ClosedXML.Excel.IXLFormattedText{ClosedXML.Excel.IXLComment})">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.TextGet">
            <summary>Задает stub IXLFormattedText`1.get_Text()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.UnderlineSetXLFontUnderlineValues">
            <summary>Задает stub IXLFormattedText`1.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.VerticalAlignmentSetXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFormattedText`1.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.VisibleGet">
            <summary>Задает stub IXLDrawing`1.get_Visible()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.VisibleSetBoolean">
            <summary>Задает stub IXLDrawing`1.set_Visible(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.ZOrderGet">
            <summary>Задает stub IXLDrawing`1.get_ZOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLComment.ZOrderSetInt32">
            <summary>Задает stub IXLDrawing`1.set_ZOrder(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLComment#Author">
            <summary>Задает stub IXLComment.get_Author()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Bold">
            <summary>Задает stub IXLFormattedText`1.set_Bold(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Count">
            <summary>Задает stub IXLFormattedText`1.get_Count()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#FontColor">
            <summary>Задает stub IXLFormattedText`1.set_FontColor(XLColor value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#FontFamilyNumbering">
            <summary>Задает stub IXLFormattedText`1.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#FontName">
            <summary>Задает stub IXLFormattedText`1.set_FontName(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#FontSize">
            <summary>Задает stub IXLFormattedText`1.set_FontSize(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#HasPhonetics">
            <summary>Задает stub IXLFormattedText`1.get_HasPhonetics()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Italic">
            <summary>Задает stub IXLFormattedText`1.set_Italic(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Length">
            <summary>Задает stub IXLFormattedText`1.get_Length()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Phonetics">
            <summary>Задает stub IXLFormattedText`1.get_Phonetics()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLComment}#Position">
            <summary>Задает stub IXLDrawing`1.get_Position()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Shadow">
            <summary>Задает stub IXLFormattedText`1.set_Shadow(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLComment}#ShapeId">
            <summary>Задает stub IXLDrawing`1.get_ShapeId()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Strikethrough">
            <summary>Задает stub IXLFormattedText`1.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLComment}#Style">
            <summary>Задает stub IXLDrawing`1.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Text">
            <summary>Задает stub IXLFormattedText`1.get_Text()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#Underline">
            <summary>Задает stub IXLFormattedText`1.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLComment}#VerticalAlignment">
            <summary>Задает stub IXLFormattedText`1.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLComment}#Visible">
            <summary>Задает stub IXLDrawing`1.get_Visible()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLComment.cxml::ClosedXML#Excel#IXLDrawing{ClosedXML#Excel#IXLComment}#ZOrder">
            <summary>Задает stub IXLDrawing`1.get_ZOrder()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLConditionalFormat">
            <summary>Тип заглушки ClosedXML.Excel.IXLConditionalFormat</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLConditionalFormat</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.AttachBackingFieldToRange">
            <summary>Присоединение делегатов для эмуляции StubIXLConditionalFormat.Range как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLConditionalFormat.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.BottomGet">
            <summary>Задает stub IXLConditionalFormat.get_Bottom()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#ColorScale">
            <summary>Задает заглушка IXLConditionalFormat.ColorScale()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#DataBar(ClosedXML.Excel.XLColor,System.Boolean)">
            <summary>Задает заглушка IXLConditionalFormat.DataBar(XLColor color, Boolean showBarOnly)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#IconSet(ClosedXML.Excel.XLIconSetStyle,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLConditionalFormat.IconSet(XLIconSetStyle iconSetStyle, Boolean reverseIconOrder, Boolean showIconOnly)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenBetween(System.Double,System.Double)">
            <summary>Задает заглушка IXLConditionalFormat.WhenBetween(Double minValue, Double maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenBetween(System.String,System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenBetween(String minValue, String maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenContains(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenContains(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenDateIs(ClosedXML.Excel.XLTimePeriod)">
            <summary>Задает заглушка IXLConditionalFormat.WhenDateIs(XLTimePeriod timePeriod)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenEndsWith(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenEndsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenEqualOrGreaterThan(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenEqualOrGreaterThan(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenEqualOrGreaterThan(System.Double)">
            <summary>Задает заглушка IXLConditionalFormat.WhenEqualOrGreaterThan(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenEqualOrLessThan(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenEqualOrLessThan(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenEqualOrLessThan(System.Double)">
            <summary>Задает заглушка IXLConditionalFormat.WhenEqualOrLessThan(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenEquals(System.Double)">
            <summary>Задает заглушка IXLConditionalFormat.WhenEquals(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenEquals(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenEquals(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenGreaterThan(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenGreaterThan(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenGreaterThan(System.Double)">
            <summary>Задает заглушка IXLConditionalFormat.WhenGreaterThan(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenIsBlank">
            <summary>Задает заглушка IXLConditionalFormat.WhenIsBlank()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenIsBottom(System.Int32,ClosedXML.Excel.XLTopBottomType)">
            <summary>Задает заглушка IXLConditionalFormat.WhenIsBottom(Int32 value, XLTopBottomType topBottomType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenIsDuplicate">
            <summary>Задает заглушка IXLConditionalFormat.WhenIsDuplicate()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenIsError">
            <summary>Задает заглушка IXLConditionalFormat.WhenIsError()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenIsTop(System.Int32,ClosedXML.Excel.XLTopBottomType)">
            <summary>Задает заглушка IXLConditionalFormat.WhenIsTop(Int32 value, XLTopBottomType topBottomType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenIsTrue(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenIsTrue(String formula)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenIsUnique">
            <summary>Задает заглушка IXLConditionalFormat.WhenIsUnique()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenLessThan(System.Double)">
            <summary>Задает заглушка IXLConditionalFormat.WhenLessThan(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenLessThan(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenLessThan(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenNotBetween(System.String,System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenNotBetween(String minValue, String maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenNotBetween(System.Double,System.Double)">
            <summary>Задает заглушка IXLConditionalFormat.WhenNotBetween(Double minValue, Double maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenNotBlank">
            <summary>Задает заглушка IXLConditionalFormat.WhenNotBlank()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenNotContains(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenNotContains(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenNotEquals(System.Double)">
            <summary>Задает заглушка IXLConditionalFormat.WhenNotEquals(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenNotEquals(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenNotEquals(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenNotError">
            <summary>Задает заглушка IXLConditionalFormat.WhenNotError()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#WhenStartsWith(System.String)">
            <summary>Задает заглушка IXLConditionalFormat.WhenStartsWith(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.ColorScale">
            <summary>Задает stub IXLConditionalFormat.ColorScale()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.ColorsGet">
            <summary>Задает stub IXLConditionalFormat.get_Colors()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.ConditionalFormatTypeGet">
            <summary>Задает stub IXLConditionalFormat.get_ConditionalFormatType()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.ContentTypesGet">
            <summary>Задает stub IXLConditionalFormat.get_ContentTypes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.DataBarXLColorBoolean">
            <summary>Задает stub IXLConditionalFormat.DataBar(XLColor color, Boolean showBarOnly)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.IconSetOperatorsGet">
            <summary>Задает stub IXLConditionalFormat.get_IconSetOperators()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.IconSetStyleGet">
            <summary>Задает stub IXLConditionalFormat.get_IconSetStyle()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.IconSetXLIconSetStyleBooleanBoolean">
            <summary>Задает stub IXLConditionalFormat.IconSet(XLIconSetStyle iconSetStyle, Boolean reverseIconOrder, Boolean showIconOnly)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.OperatorGet">
            <summary>Задает stub IXLConditionalFormat.get_Operator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.PercentGet">
            <summary>Задает stub IXLConditionalFormat.get_Percent()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.RangeGet">
            <summary>Задает stub IXLConditionalFormat.get_Range()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.RangeSetIXLRange">
            <summary>Задает stub IXLConditionalFormat.set_Range(IXLRange value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.ReverseIconOrderGet">
            <summary>Задает stub IXLConditionalFormat.get_ReverseIconOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.ShowBarOnlyGet">
            <summary>Задает stub IXLConditionalFormat.get_ShowBarOnly()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.ShowIconOnlyGet">
            <summary>Задает stub IXLConditionalFormat.get_ShowIconOnly()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.StyleGet">
            <summary>Задает stub IXLConditionalFormat.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.StyleSetIXLStyle">
            <summary>Задает stub IXLConditionalFormat.set_Style(IXLStyle value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.TimePeriodGet">
            <summary>Задает stub IXLConditionalFormat.get_TimePeriod()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.ValuesGet">
            <summary>Задает stub IXLConditionalFormat.get_Values()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenBetweenDoubleDouble">
            <summary>Задает stub IXLConditionalFormat.WhenBetween(Double minValue, Double maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenBetweenStringString">
            <summary>Задает stub IXLConditionalFormat.WhenBetween(String minValue, String maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenContainsString">
            <summary>Задает stub IXLConditionalFormat.WhenContains(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenDateIsXLTimePeriod">
            <summary>Задает stub IXLConditionalFormat.WhenDateIs(XLTimePeriod timePeriod)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenEndsWithString">
            <summary>Задает stub IXLConditionalFormat.WhenEndsWith(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenEqualOrGreaterThanDouble">
            <summary>Задает stub IXLConditionalFormat.WhenEqualOrGreaterThan(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenEqualOrGreaterThanString">
            <summary>Задает stub IXLConditionalFormat.WhenEqualOrGreaterThan(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenEqualOrLessThanDouble">
            <summary>Задает stub IXLConditionalFormat.WhenEqualOrLessThan(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenEqualOrLessThanString">
            <summary>Задает stub IXLConditionalFormat.WhenEqualOrLessThan(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenEqualsDouble">
            <summary>Задает stub IXLConditionalFormat.WhenEquals(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenEqualsString">
            <summary>Задает stub IXLConditionalFormat.WhenEquals(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenGreaterThanDouble">
            <summary>Задает stub IXLConditionalFormat.WhenGreaterThan(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenGreaterThanString">
            <summary>Задает stub IXLConditionalFormat.WhenGreaterThan(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenIsBlank">
            <summary>Задает stub IXLConditionalFormat.WhenIsBlank()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenIsBottomInt32XLTopBottomType">
            <summary>Задает stub IXLConditionalFormat.WhenIsBottom(Int32 value, XLTopBottomType topBottomType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenIsDuplicate">
            <summary>Задает stub IXLConditionalFormat.WhenIsDuplicate()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenIsError">
            <summary>Задает stub IXLConditionalFormat.WhenIsError()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenIsTopInt32XLTopBottomType">
            <summary>Задает stub IXLConditionalFormat.WhenIsTop(Int32 value, XLTopBottomType topBottomType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenIsTrueString">
            <summary>Задает stub IXLConditionalFormat.WhenIsTrue(String formula)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenIsUnique">
            <summary>Задает stub IXLConditionalFormat.WhenIsUnique()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenLessThanDouble">
            <summary>Задает stub IXLConditionalFormat.WhenLessThan(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenLessThanString">
            <summary>Задает stub IXLConditionalFormat.WhenLessThan(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenNotBetweenDoubleDouble">
            <summary>Задает stub IXLConditionalFormat.WhenNotBetween(Double minValue, Double maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenNotBetweenStringString">
            <summary>Задает stub IXLConditionalFormat.WhenNotBetween(String minValue, String maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenNotBlank">
            <summary>Задает stub IXLConditionalFormat.WhenNotBlank()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenNotContainsString">
            <summary>Задает stub IXLConditionalFormat.WhenNotContains(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenNotEqualsDouble">
            <summary>Задает stub IXLConditionalFormat.WhenNotEquals(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenNotEqualsString">
            <summary>Задает stub IXLConditionalFormat.WhenNotEquals(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenNotError">
            <summary>Задает stub IXLConditionalFormat.WhenNotError()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.WhenStartsWithString">
            <summary>Задает stub IXLConditionalFormat.WhenStartsWith(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#Bottom">
            <summary>Задает stub IXLConditionalFormat.get_Bottom()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#Colors">
            <summary>Задает stub IXLConditionalFormat.get_Colors()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#ConditionalFormatType">
            <summary>Задает stub IXLConditionalFormat.get_ConditionalFormatType()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#ContentTypes">
            <summary>Задает stub IXLConditionalFormat.get_ContentTypes()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#IconSetOperators">
            <summary>Задает stub IXLConditionalFormat.get_IconSetOperators()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#IconSetStyle">
            <summary>Задает stub IXLConditionalFormat.get_IconSetStyle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#Operator">
            <summary>Задает stub IXLConditionalFormat.get_Operator()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#Percent">
            <summary>Задает stub IXLConditionalFormat.get_Percent()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#Range">
            <summary>Задает stub IXLConditionalFormat.get_Range()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#ReverseIconOrder">
            <summary>Задает stub IXLConditionalFormat.get_ReverseIconOrder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#ShowBarOnly">
            <summary>Задает stub IXLConditionalFormat.get_ShowBarOnly()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#ShowIconOnly">
            <summary>Задает stub IXLConditionalFormat.get_ShowIconOnly()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#Style">
            <summary>Задает stub IXLConditionalFormat.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#TimePeriod">
            <summary>Задает stub IXLConditionalFormat.get_TimePeriod()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLConditionalFormat.cxml::ClosedXML#Excel#IXLConditionalFormat#Values">
            <summary>Задает stub IXLConditionalFormat.get_Values()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLConditionalFormats">
            <summary>Тип заглушки ClosedXML.Excel.IXLConditionalFormats</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLConditionalFormats</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.AddIXLConditionalFormat">
            <summary>Задает stub IXLConditionalFormats.Add(IXLConditionalFormat conditionalFormat)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.cxml::ClosedXML#Excel#IXLConditionalFormats#Add(ClosedXML.Excel.IXLConditionalFormat)">
            <summary>Задает заглушка IXLConditionalFormats.Add(IXLConditionalFormat conditionalFormat)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.cxml::ClosedXML#Excel#IXLConditionalFormats#Remove(System.Predicate{ClosedXML.Excel.IXLConditionalFormat})">
            <summary>Задает заглушка IXLConditionalFormats.Remove(Predicate`1&lt;IXLConditionalFormat&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.cxml::ClosedXML#Excel#IXLConditionalFormats#RemoveAll">
            <summary>Задает заглушка IXLConditionalFormats.RemoveAll()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.RemoveAll">
            <summary>Задает stub IXLConditionalFormats.RemoveAll()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.RemovePredicateOfIXLConditionalFormat">
            <summary>Задает stub IXLConditionalFormats.Remove(Predicate`1&lt;IXLConditionalFormat&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLConditionalFormat}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLConditionalFormats.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn">
            <summary>Тип заглушки ClosedXML.Excel.IXLCustomFilteredColumn</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCustomFilteredColumn</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.BeginsWithString">
            <summary>Задает stub IXLCustomFilteredColumn.BeginsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#BeginsWith(System.String)">
            <summary>Задает заглушка IXLCustomFilteredColumn.BeginsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#Contains(System.String)">
            <summary>Задает заглушка IXLCustomFilteredColumn.Contains(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#EndsWith(System.String)">
            <summary>Задает заглушка IXLCustomFilteredColumn.EndsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#EqualOrGreaterThan``1(``0)">
            <summary>Задает заглушка IXLCustomFilteredColumn.EqualOrGreaterThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#EqualOrLessThan``1(``0)">
            <summary>Задает заглушка IXLCustomFilteredColumn.EqualOrLessThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#EqualTo``1(``0)">
            <summary>Задает заглушка IXLCustomFilteredColumn.EqualTo(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#GreaterThan``1(``0)">
            <summary>Задает заглушка IXLCustomFilteredColumn.GreaterThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#LessThan``1(``0)">
            <summary>Задает заглушка IXLCustomFilteredColumn.LessThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#NotBeginsWith(System.String)">
            <summary>Задает заглушка IXLCustomFilteredColumn.NotBeginsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#NotContains(System.String)">
            <summary>Задает заглушка IXLCustomFilteredColumn.NotContains(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#NotEndsWith(System.String)">
            <summary>Задает заглушка IXLCustomFilteredColumn.NotEndsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.cxml::ClosedXML#Excel#IXLCustomFilteredColumn#NotEqualTo``1(``0)">
            <summary>Задает заглушка IXLCustomFilteredColumn.NotEqualTo(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.ContainsString">
            <summary>Задает stub IXLCustomFilteredColumn.Contains(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.EndsWithString">
            <summary>Задает stub IXLCustomFilteredColumn.EndsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.EqualOrGreaterThanOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Задает заглушки EqualOrGreaterThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.EqualOrLessThanOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Задает заглушки EqualOrLessThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.EqualToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Задает заглушки EqualTo(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.GreaterThanOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Задает заглушки GreaterThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.LessThanOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Задает заглушки LessThan(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.NotBeginsWithString">
            <summary>Задает stub IXLCustomFilteredColumn.NotBeginsWith(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.NotContainsString">
            <summary>Задает stub IXLCustomFilteredColumn.NotContains(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.NotEndsWithString">
            <summary>Задает stub IXLCustomFilteredColumn.NotEndsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomFilteredColumn.NotEqualToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Задает заглушки NotEqualTo(!!0 value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCustomProperties">
            <summary>Тип заглушки ClosedXML.Excel.IXLCustomProperties</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperties.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCustomProperties</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperties.AddIXLCustomProperty">
            <summary>Задает stub IXLCustomProperties.Add(IXLCustomProperty customProperty)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperties.AddOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.String,``0})">
            <summary>Задает заглушки Add(String name, !!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperties.cxml::ClosedXML#Excel#IXLCustomProperties#Add(ClosedXML.Excel.IXLCustomProperty)">
            <summary>Задает заглушка IXLCustomProperties.Add(IXLCustomProperty customProperty)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperties.cxml::ClosedXML#Excel#IXLCustomProperties#Add``1(System.String,``0)">
            <summary>Задает заглушка IXLCustomProperties.Add(String name, !!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperties.cxml::ClosedXML#Excel#IXLCustomProperties#CustomProperty(System.String)">
            <summary>Задает заглушка IXLCustomProperties.CustomProperty(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperties.cxml::ClosedXML#Excel#IXLCustomProperties#Delete(System.String)">
            <summary>Задает заглушка IXLCustomProperties.Delete(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperties.CustomPropertyString">
            <summary>Задает stub IXLCustomProperties.CustomProperty(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperties.DeleteString">
            <summary>Задает stub IXLCustomProperties.Delete(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperties.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperties.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperties.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLCustomProperty}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperties.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLCustomProperty">
            <summary>Тип заглушки ClosedXML.Excel.IXLCustomProperty</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperty.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLCustomProperty</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperty.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubIXLCustomProperty.Name как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperty.AttachBackingFieldToValue">
            <summary>Присоединение делегатов для эмуляции StubIXLCustomProperty.Value как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperty.cxml::ClosedXML#Excel#IXLCustomProperty#GetValue``1">
            <summary>Задает заглушка IXLCustomProperty.GetValue()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLCustomProperty.GetValueOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Задает заглушки GetValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperty.NameGet">
            <summary>Задает stub IXLCustomProperty.get_Name()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperty.NameSetString">
            <summary>Задает stub IXLCustomProperty.set_Name(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperty.TypeGet">
            <summary>Задает stub IXLCustomProperty.get_Type()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperty.ValueGet">
            <summary>Задает stub IXLCustomProperty.get_Value()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLCustomProperty.ValueSetObject">
            <summary>Задает stub IXLCustomProperty.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCustomProperty.cxml::ClosedXML#Excel#IXLCustomProperty#Name">
            <summary>Задает stub IXLCustomProperty.get_Name()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCustomProperty.cxml::ClosedXML#Excel#IXLCustomProperty#Type">
            <summary>Задает stub IXLCustomProperty.get_Type()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLCustomProperty.cxml::ClosedXML#Excel#IXLCustomProperty#Value">
            <summary>Задает stub IXLCustomProperty.get_Value()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDataValidation">
            <summary>Тип заглушки ClosedXML.Excel.IXLDataValidation</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDataValidation</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.AllowedValuesGet">
            <summary>Задает stub IXLDataValidation.get_AllowedValues()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.AllowedValuesSetXLAllowedValues">
            <summary>Задает stub IXLDataValidation.set_AllowedValues(XLAllowedValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToAllowedValues">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.AllowedValues как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToErrorMessage">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.ErrorMessage как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToErrorStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.ErrorStyle как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToErrorTitle">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.ErrorTitle как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToIgnoreBlanks">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.IgnoreBlanks как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToInCellDropdown">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.InCellDropdown как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToInputMessage">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.InputMessage как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToInputTitle">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.InputTitle как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToMaxValue">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.MaxValue как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToMinValue">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.MinValue как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToOperator">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.Operator как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToRanges">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.Ranges как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToShowErrorMessage">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.ShowErrorMessage как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToShowInputMessage">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.ShowInputMessage как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.AttachBackingFieldToValue">
            <summary>Присоединение делегатов для эмуляции StubIXLDataValidation.Value как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.Clear">
            <summary>Задает stub IXLDataValidation.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#Clear">
            <summary>Задает заглушка IXLDataValidation.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#Custom(System.String)">
            <summary>Задает заглушка IXLDataValidation.Custom(String customValidation)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#IsDirty">
            <summary>Задает заглушка IXLDataValidation.IsDirty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#List(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLDataValidation.List(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#List(System.String)">
            <summary>Задает заглушка IXLDataValidation.List(String list)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#List(ClosedXML.Excel.IXLRange,System.Boolean)">
            <summary>Задает заглушка IXLDataValidation.List(IXLRange range, Boolean inCellDropdown)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#List(System.String,System.Boolean)">
            <summary>Задает заглушка IXLDataValidation.List(String list, Boolean inCellDropdown)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.CustomString">
            <summary>Задает stub IXLDataValidation.Custom(String customValidation)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.DateGet">
            <summary>Задает stub IXLDataValidation.get_Date()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.DecimalGet">
            <summary>Задает stub IXLDataValidation.get_Decimal()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ErrorMessageGet">
            <summary>Задает stub IXLDataValidation.get_ErrorMessage()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ErrorMessageSetString">
            <summary>Задает stub IXLDataValidation.set_ErrorMessage(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ErrorStyleGet">
            <summary>Задает stub IXLDataValidation.get_ErrorStyle()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ErrorStyleSetXLErrorStyle">
            <summary>Задает stub IXLDataValidation.set_ErrorStyle(XLErrorStyle value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ErrorTitleGet">
            <summary>Задает stub IXLDataValidation.get_ErrorTitle()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ErrorTitleSetString">
            <summary>Задает stub IXLDataValidation.set_ErrorTitle(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.IgnoreBlanksGet">
            <summary>Задает stub IXLDataValidation.get_IgnoreBlanks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.IgnoreBlanksSetBoolean">
            <summary>Задает stub IXLDataValidation.set_IgnoreBlanks(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.InCellDropdownGet">
            <summary>Задает stub IXLDataValidation.get_InCellDropdown()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.InCellDropdownSetBoolean">
            <summary>Задает stub IXLDataValidation.set_InCellDropdown(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.InputMessageGet">
            <summary>Задает stub IXLDataValidation.get_InputMessage()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.InputMessageSetString">
            <summary>Задает stub IXLDataValidation.set_InputMessage(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.InputTitleGet">
            <summary>Задает stub IXLDataValidation.get_InputTitle()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.InputTitleSetString">
            <summary>Задает stub IXLDataValidation.set_InputTitle(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.IsDirty">
            <summary>Задает stub IXLDataValidation.IsDirty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ListIXLRange">
            <summary>Задает stub IXLDataValidation.List(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ListIXLRangeBoolean">
            <summary>Задает stub IXLDataValidation.List(IXLRange range, Boolean inCellDropdown)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ListString">
            <summary>Задает stub IXLDataValidation.List(String list)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ListStringBoolean">
            <summary>Задает stub IXLDataValidation.List(String list, Boolean inCellDropdown)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.MaxValueGet">
            <summary>Задает stub IXLDataValidation.get_MaxValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.MaxValueSetString">
            <summary>Задает stub IXLDataValidation.set_MaxValue(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.MinValueGet">
            <summary>Задает stub IXLDataValidation.get_MinValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.MinValueSetString">
            <summary>Задает stub IXLDataValidation.set_MinValue(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.OperatorGet">
            <summary>Задает stub IXLDataValidation.get_Operator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.OperatorSetXLOperator">
            <summary>Задает stub IXLDataValidation.set_Operator(XLOperator value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.RangesGet">
            <summary>Задает stub IXLDataValidation.get_Ranges()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.RangesSetIXLRanges">
            <summary>Задает stub IXLDataValidation.set_Ranges(IXLRanges value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ShowErrorMessageGet">
            <summary>Задает stub IXLDataValidation.get_ShowErrorMessage()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ShowErrorMessageSetBoolean">
            <summary>Задает stub IXLDataValidation.set_ShowErrorMessage(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ShowInputMessageGet">
            <summary>Задает stub IXLDataValidation.get_ShowInputMessage()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ShowInputMessageSetBoolean">
            <summary>Задает stub IXLDataValidation.set_ShowInputMessage(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.TextLengthGet">
            <summary>Задает stub IXLDataValidation.get_TextLength()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.TimeGet">
            <summary>Задает stub IXLDataValidation.get_Time()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ValueGet">
            <summary>Задает stub IXLDataValidation.get_Value()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.ValueSetString">
            <summary>Задает stub IXLDataValidation.set_Value(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidation.WholeNumberGet">
            <summary>Задает stub IXLDataValidation.get_WholeNumber()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#AllowedValues">
            <summary>Задает stub IXLDataValidation.get_AllowedValues()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#Date">
            <summary>Задает stub IXLDataValidation.get_Date()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#Decimal">
            <summary>Задает stub IXLDataValidation.get_Decimal()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#ErrorMessage">
            <summary>Задает stub IXLDataValidation.get_ErrorMessage()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#ErrorStyle">
            <summary>Задает stub IXLDataValidation.get_ErrorStyle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#ErrorTitle">
            <summary>Задает stub IXLDataValidation.get_ErrorTitle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#IgnoreBlanks">
            <summary>Задает stub IXLDataValidation.get_IgnoreBlanks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#InCellDropdown">
            <summary>Задает stub IXLDataValidation.get_InCellDropdown()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#InputMessage">
            <summary>Задает stub IXLDataValidation.get_InputMessage()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#InputTitle">
            <summary>Задает stub IXLDataValidation.get_InputTitle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#MaxValue">
            <summary>Задает stub IXLDataValidation.get_MaxValue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#MinValue">
            <summary>Задает stub IXLDataValidation.get_MinValue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#Operator">
            <summary>Задает stub IXLDataValidation.get_Operator()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#Ranges">
            <summary>Задает stub IXLDataValidation.get_Ranges()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#ShowErrorMessage">
            <summary>Задает stub IXLDataValidation.get_ShowErrorMessage()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#ShowInputMessage">
            <summary>Задает stub IXLDataValidation.get_ShowInputMessage()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#TextLength">
            <summary>Задает stub IXLDataValidation.get_TextLength()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#Time">
            <summary>Задает stub IXLDataValidation.get_Time()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#Value">
            <summary>Задает stub IXLDataValidation.get_Value()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDataValidation.cxml::ClosedXML#Excel#IXLDataValidation#WholeNumber">
            <summary>Задает stub IXLDataValidation.get_WholeNumber()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDataValidations">
            <summary>Тип заглушки ClosedXML.Excel.IXLDataValidations</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidations.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDataValidations</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidations.AddIXLDataValidation">
            <summary>Задает stub IXLDataValidations.Add(IXLDataValidation dataValidation)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidations.cxml::ClosedXML#Excel#IXLDataValidations#Add(ClosedXML.Excel.IXLDataValidation)">
            <summary>Задает заглушка IXLDataValidations.Add(IXLDataValidation dataValidation)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidations.cxml::ClosedXML#Excel#IXLDataValidations#ContainsSingle(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLDataValidations.ContainsSingle(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidations.ContainsSingleIXLRange">
            <summary>Задает stub IXLDataValidations.ContainsSingle(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidations.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDataValidations.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidations.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLDataValidation}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDataValidations.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawing`1">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawing`1</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawing`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawing</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawing`1.AttachBackingFieldToVisible">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawing.Visible как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawing`1.AttachBackingFieldToZOrder">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawing.ZOrder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawing`1.cxml::ClosedXML#Excel#IXLDrawing{T}#SetVisible">
            <summary>Задает заглушка IXLDrawing`1.SetVisible()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawing`1.cxml::ClosedXML#Excel#IXLDrawing{T}#SetVisible(System.Boolean)">
            <summary>Задает заглушка IXLDrawing`1.SetVisible(Boolean hidden)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawing`1.cxml::ClosedXML#Excel#IXLDrawing{T}#SetZOrder(System.Int32)">
            <summary>Задает заглушка IXLDrawing`1.SetZOrder(Int32 zOrder)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.PositionGet">
            <summary>Задает stub IXLDrawing`1.get_Position()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.SetVisible">
            <summary>Задает stub IXLDrawing`1.SetVisible()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.SetVisibleBoolean">
            <summary>Задает stub IXLDrawing`1.SetVisible(Boolean hidden)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.SetZOrderInt32">
            <summary>Задает stub IXLDrawing`1.SetZOrder(Int32 zOrder)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.ShapeIdGet">
            <summary>Задает stub IXLDrawing`1.get_ShapeId()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.StyleGet">
            <summary>Задает stub IXLDrawing`1.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.VisibleGet">
            <summary>Задает stub IXLDrawing`1.get_Visible()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.VisibleSetBoolean">
            <summary>Задает stub IXLDrawing`1.set_Visible(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.ZOrderGet">
            <summary>Задает stub IXLDrawing`1.get_ZOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawing`1.ZOrderSetInt32">
            <summary>Задает stub IXLDrawing`1.set_ZOrder(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawing`1.cxml::ClosedXML#Excel#IXLDrawing{T}#Position">
            <summary>Задает stub IXLDrawing`1.get_Position()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawing`1.cxml::ClosedXML#Excel#IXLDrawing{T}#ShapeId">
            <summary>Задает stub IXLDrawing`1.get_ShapeId()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawing`1.cxml::ClosedXML#Excel#IXLDrawing{T}#Style">
            <summary>Задает stub IXLDrawing`1.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawing`1.cxml::ClosedXML#Excel#IXLDrawing{T}#Visible">
            <summary>Задает stub IXLDrawing`1.get_Visible()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawing`1.cxml::ClosedXML#Excel#IXLDrawing{T}#ZOrder">
            <summary>Задает stub IXLDrawing`1.get_ZOrder()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingAlignment</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingAlignment</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.AttachBackingFieldToAutomaticSize">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingAlignment.AutomaticSize как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.AttachBackingFieldToDirection">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingAlignment.Direction как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.AttachBackingFieldToHorizontal">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingAlignment.Horizontal как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.AttachBackingFieldToOrientation">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingAlignment.Orientation как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.AttachBackingFieldToVertical">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingAlignment.Vertical как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.AutomaticSizeGet">
            <summary>Задает stub IXLDrawingAlignment.get_AutomaticSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.AutomaticSizeSetBoolean">
            <summary>Задает stub IXLDrawingAlignment.set_AutomaticSize(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#SetAutomaticSize">
            <summary>Задает заглушка IXLDrawingAlignment.SetAutomaticSize()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#SetAutomaticSize(System.Boolean)">
            <summary>Задает заглушка IXLDrawingAlignment.SetAutomaticSize(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#SetDirection(ClosedXML.Excel.XLDrawingTextDirection)">
            <summary>Задает заглушка IXLDrawingAlignment.SetDirection(XLDrawingTextDirection value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#SetHorizontal(ClosedXML.Excel.XLDrawingHorizontalAlignment)">
            <summary>Задает заглушка IXLDrawingAlignment.SetHorizontal(XLDrawingHorizontalAlignment value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#SetOrientation(ClosedXML.Excel.XLDrawingTextOrientation)">
            <summary>Задает заглушка IXLDrawingAlignment.SetOrientation(XLDrawingTextOrientation value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#SetVertical(ClosedXML.Excel.XLDrawingVerticalAlignment)">
            <summary>Задает заглушка IXLDrawingAlignment.SetVertical(XLDrawingVerticalAlignment value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.DirectionGet">
            <summary>Задает stub IXLDrawingAlignment.get_Direction()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.DirectionSetXLDrawingTextDirection">
            <summary>Задает stub IXLDrawingAlignment.set_Direction(XLDrawingTextDirection value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.HorizontalGet">
            <summary>Задает stub IXLDrawingAlignment.get_Horizontal()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.HorizontalSetXLDrawingHorizontalAlignment">
            <summary>Задает stub IXLDrawingAlignment.set_Horizontal(XLDrawingHorizontalAlignment value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.OrientationGet">
            <summary>Задает stub IXLDrawingAlignment.get_Orientation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.OrientationSetXLDrawingTextOrientation">
            <summary>Задает stub IXLDrawingAlignment.set_Orientation(XLDrawingTextOrientation value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.SetAutomaticSize">
            <summary>Задает stub IXLDrawingAlignment.SetAutomaticSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.SetAutomaticSizeBoolean">
            <summary>Задает stub IXLDrawingAlignment.SetAutomaticSize(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.SetDirectionXLDrawingTextDirection">
            <summary>Задает stub IXLDrawingAlignment.SetDirection(XLDrawingTextDirection value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.SetHorizontalXLDrawingHorizontalAlignment">
            <summary>Задает stub IXLDrawingAlignment.SetHorizontal(XLDrawingHorizontalAlignment value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.SetOrientationXLDrawingTextOrientation">
            <summary>Задает stub IXLDrawingAlignment.SetOrientation(XLDrawingTextOrientation value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.SetVerticalXLDrawingVerticalAlignment">
            <summary>Задает stub IXLDrawingAlignment.SetVertical(XLDrawingVerticalAlignment value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.VerticalGet">
            <summary>Задает stub IXLDrawingAlignment.get_Vertical()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.VerticalSetXLDrawingVerticalAlignment">
            <summary>Задает stub IXLDrawingAlignment.set_Vertical(XLDrawingVerticalAlignment value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#AutomaticSize">
            <summary>Задает stub IXLDrawingAlignment.get_AutomaticSize()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#Direction">
            <summary>Задает stub IXLDrawingAlignment.get_Direction()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#Horizontal">
            <summary>Задает stub IXLDrawingAlignment.get_Horizontal()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#Orientation">
            <summary>Задает stub IXLDrawingAlignment.get_Orientation()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingAlignment.cxml::ClosedXML#Excel#IXLDrawingAlignment#Vertical">
            <summary>Задает stub IXLDrawingAlignment.get_Vertical()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingColorsAndLines</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingColorsAndLines</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.AttachBackingFieldToFillColor">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingColorsAndLines.FillColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.AttachBackingFieldToFillTransparency">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingColorsAndLines.FillTransparency как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.AttachBackingFieldToLineColor">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingColorsAndLines.LineColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.AttachBackingFieldToLineDash">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingColorsAndLines.LineDash как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.AttachBackingFieldToLineStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingColorsAndLines.LineStyle как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.AttachBackingFieldToLineTransparency">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingColorsAndLines.LineTransparency как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.AttachBackingFieldToLineWeight">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingColorsAndLines.LineWeight как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#SetFillColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLDrawingColorsAndLines.SetFillColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#SetFillTransparency(System.Double)">
            <summary>Задает заглушка IXLDrawingColorsAndLines.SetFillTransparency(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#SetLineColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLDrawingColorsAndLines.SetLineColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#SetLineDash(ClosedXML.Excel.XLDashStyle)">
            <summary>Задает заглушка IXLDrawingColorsAndLines.SetLineDash(XLDashStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#SetLineStyle(ClosedXML.Excel.XLLineStyle)">
            <summary>Задает заглушка IXLDrawingColorsAndLines.SetLineStyle(XLLineStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#SetLineTransparency(System.Double)">
            <summary>Задает заглушка IXLDrawingColorsAndLines.SetLineTransparency(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#SetLineWeight(System.Double)">
            <summary>Задает заглушка IXLDrawingColorsAndLines.SetLineWeight(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.FillColorGet">
            <summary>Задает stub IXLDrawingColorsAndLines.get_FillColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.FillColorSetXLColor">
            <summary>Задает stub IXLDrawingColorsAndLines.set_FillColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.FillTransparencyGet">
            <summary>Задает stub IXLDrawingColorsAndLines.get_FillTransparency()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.FillTransparencySetDouble">
            <summary>Задает stub IXLDrawingColorsAndLines.set_FillTransparency(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineColorGet">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineColorSetXLColor">
            <summary>Задает stub IXLDrawingColorsAndLines.set_LineColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineDashGet">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineDash()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineDashSetXLDashStyle">
            <summary>Задает stub IXLDrawingColorsAndLines.set_LineDash(XLDashStyle value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineStyleGet">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineStyle()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineStyleSetXLLineStyle">
            <summary>Задает stub IXLDrawingColorsAndLines.set_LineStyle(XLLineStyle value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineTransparencyGet">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineTransparency()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineTransparencySetDouble">
            <summary>Задает stub IXLDrawingColorsAndLines.set_LineTransparency(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineWeightGet">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineWeight()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.LineWeightSetDouble">
            <summary>Задает stub IXLDrawingColorsAndLines.set_LineWeight(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.SetFillColorXLColor">
            <summary>Задает stub IXLDrawingColorsAndLines.SetFillColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.SetFillTransparencyDouble">
            <summary>Задает stub IXLDrawingColorsAndLines.SetFillTransparency(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.SetLineColorXLColor">
            <summary>Задает stub IXLDrawingColorsAndLines.SetLineColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.SetLineDashXLDashStyle">
            <summary>Задает stub IXLDrawingColorsAndLines.SetLineDash(XLDashStyle value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.SetLineStyleXLLineStyle">
            <summary>Задает stub IXLDrawingColorsAndLines.SetLineStyle(XLLineStyle value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.SetLineTransparencyDouble">
            <summary>Задает stub IXLDrawingColorsAndLines.SetLineTransparency(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.SetLineWeightDouble">
            <summary>Задает stub IXLDrawingColorsAndLines.SetLineWeight(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#FillColor">
            <summary>Задает stub IXLDrawingColorsAndLines.get_FillColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#FillTransparency">
            <summary>Задает stub IXLDrawingColorsAndLines.get_FillTransparency()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#LineColor">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#LineDash">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineDash()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#LineStyle">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineStyle()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#LineTransparency">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineTransparency()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingColorsAndLines.cxml::ClosedXML#Excel#IXLDrawingColorsAndLines#LineWeight">
            <summary>Задает stub IXLDrawingColorsAndLines.get_LineWeight()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingFont">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingFont</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingFont</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToBold">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.Bold как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToFontColor">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.FontColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToFontFamilyNumbering">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.FontFamilyNumbering как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToFontName">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.FontName как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToFontSize">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.FontSize как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToItalic">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.Italic как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToShadow">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.Shadow как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToStrikethrough">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.Strikethrough как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToUnderline">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.Underline как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.AttachBackingFieldToVerticalAlignment">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingFont.VerticalAlignment как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.BoldGet">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.BoldSetBoolean">
            <summary>Задает stub IXLFontBase.set_Bold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetBold">
            <summary>Задает заглушка IXLDrawingFont.SetBold()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetBold(System.Boolean)">
            <summary>Задает заглушка IXLDrawingFont.SetBold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetFontColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLDrawingFont.SetFontColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetFontFamilyNumbering(ClosedXML.Excel.XLFontFamilyNumberingValues)">
            <summary>Задает заглушка IXLDrawingFont.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetFontName(System.String)">
            <summary>Задает заглушка IXLDrawingFont.SetFontName(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetFontSize(System.Double)">
            <summary>Задает заглушка IXLDrawingFont.SetFontSize(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetItalic">
            <summary>Задает заглушка IXLDrawingFont.SetItalic()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetItalic(System.Boolean)">
            <summary>Задает заглушка IXLDrawingFont.SetItalic(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetShadow">
            <summary>Задает заглушка IXLDrawingFont.SetShadow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetShadow(System.Boolean)">
            <summary>Задает заглушка IXLDrawingFont.SetShadow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetStrikethrough">
            <summary>Задает заглушка IXLDrawingFont.SetStrikethrough()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetStrikethrough(System.Boolean)">
            <summary>Задает заглушка IXLDrawingFont.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetUnderline">
            <summary>Задает заглушка IXLDrawingFont.SetUnderline()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetUnderline(ClosedXML.Excel.XLFontUnderlineValues)">
            <summary>Задает заглушка IXLDrawingFont.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLDrawingFont#SetVerticalAlignment(ClosedXML.Excel.XLFontVerticalTextAlignmentValues)">
            <summary>Задает заглушка IXLDrawingFont.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.FontColorGet">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.FontColorSetXLColor">
            <summary>Задает stub IXLFontBase.set_FontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.FontFamilyNumberingGet">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.FontFamilyNumberingSetXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFontBase.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.FontNameGet">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.FontNameSetString">
            <summary>Задает stub IXLFontBase.set_FontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.FontSizeGet">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.FontSizeSetDouble">
            <summary>Задает stub IXLFontBase.set_FontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.ItalicGet">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.ItalicSetBoolean">
            <summary>Задает stub IXLFontBase.set_Italic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetBold">
            <summary>Задает stub IXLDrawingFont.SetBold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetBoldBoolean">
            <summary>Задает stub IXLDrawingFont.SetBold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetFontColorXLColor">
            <summary>Задает stub IXLDrawingFont.SetFontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetFontFamilyNumberingXLFontFamilyNumberingValues">
            <summary>Задает stub IXLDrawingFont.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetFontNameString">
            <summary>Задает stub IXLDrawingFont.SetFontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetFontSizeDouble">
            <summary>Задает stub IXLDrawingFont.SetFontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetItalic">
            <summary>Задает stub IXLDrawingFont.SetItalic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetItalicBoolean">
            <summary>Задает stub IXLDrawingFont.SetItalic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetShadow">
            <summary>Задает stub IXLDrawingFont.SetShadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetShadowBoolean">
            <summary>Задает stub IXLDrawingFont.SetShadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetStrikethrough">
            <summary>Задает stub IXLDrawingFont.SetStrikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetStrikethroughBoolean">
            <summary>Задает stub IXLDrawingFont.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetUnderline">
            <summary>Задает stub IXLDrawingFont.SetUnderline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetUnderlineXLFontUnderlineValues">
            <summary>Задает stub IXLDrawingFont.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.SetVerticalAlignmentXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLDrawingFont.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.ShadowGet">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.ShadowSetBoolean">
            <summary>Задает stub IXLFontBase.set_Shadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.StrikethroughGet">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.StrikethroughSetBoolean">
            <summary>Задает stub IXLFontBase.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.UnderlineGet">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.UnderlineSetXLFontUnderlineValues">
            <summary>Задает stub IXLFontBase.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.VerticalAlignmentGet">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingFont.VerticalAlignmentSetXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFontBase.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#Bold">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#FontColor">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#FontFamilyNumbering">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#FontName">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#FontSize">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#Italic">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#Shadow">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#Strikethrough">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#Underline">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingFont.cxml::ClosedXML#Excel#IXLFontBase#VerticalAlignment">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingMargins">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingMargins</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingMargins</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.AllSetDouble">
            <summary>Задает stub IXLDrawingMargins.set_All(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.AttachBackingFieldToAutomatic">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingMargins.Automatic как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.AttachBackingFieldToBottom">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingMargins.Bottom как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.AttachBackingFieldToLeft">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingMargins.Left как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.AttachBackingFieldToRight">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingMargins.Right как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.AttachBackingFieldToTop">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingMargins.Top как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.AutomaticGet">
            <summary>Задает stub IXLDrawingMargins.get_Automatic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.AutomaticSetBoolean">
            <summary>Задает stub IXLDrawingMargins.set_Automatic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.BottomGet">
            <summary>Задает stub IXLDrawingMargins.get_Bottom()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.BottomSetDouble">
            <summary>Задает stub IXLDrawingMargins.set_Bottom(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#SetAll(System.Double)">
            <summary>Задает заглушка IXLDrawingMargins.SetAll(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#SetAutomatic">
            <summary>Задает заглушка IXLDrawingMargins.SetAutomatic()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#SetAutomatic(System.Boolean)">
            <summary>Задает заглушка IXLDrawingMargins.SetAutomatic(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#SetBottom(System.Double)">
            <summary>Задает заглушка IXLDrawingMargins.SetBottom(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#SetLeft(System.Double)">
            <summary>Задает заглушка IXLDrawingMargins.SetLeft(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#SetRight(System.Double)">
            <summary>Задает заглушка IXLDrawingMargins.SetRight(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#SetTop(System.Double)">
            <summary>Задает заглушка IXLDrawingMargins.SetTop(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.LeftGet">
            <summary>Задает stub IXLDrawingMargins.get_Left()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.LeftSetDouble">
            <summary>Задает stub IXLDrawingMargins.set_Left(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.RightGet">
            <summary>Задает stub IXLDrawingMargins.get_Right()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.RightSetDouble">
            <summary>Задает stub IXLDrawingMargins.set_Right(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.SetAllDouble">
            <summary>Задает stub IXLDrawingMargins.SetAll(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.SetAutomatic">
            <summary>Задает stub IXLDrawingMargins.SetAutomatic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.SetAutomaticBoolean">
            <summary>Задает stub IXLDrawingMargins.SetAutomatic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.SetBottomDouble">
            <summary>Задает stub IXLDrawingMargins.SetBottom(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.SetLeftDouble">
            <summary>Задает stub IXLDrawingMargins.SetLeft(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.SetRightDouble">
            <summary>Задает stub IXLDrawingMargins.SetRight(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.SetTopDouble">
            <summary>Задает stub IXLDrawingMargins.SetTop(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.TopGet">
            <summary>Задает stub IXLDrawingMargins.get_Top()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.TopSetDouble">
            <summary>Задает stub IXLDrawingMargins.set_Top(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#All">
            <summary>Задает stub IXLDrawingMargins.set_All(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#Automatic">
            <summary>Задает stub IXLDrawingMargins.get_Automatic()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#Bottom">
            <summary>Задает stub IXLDrawingMargins.get_Bottom()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#Left">
            <summary>Задает stub IXLDrawingMargins.get_Left()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#Right">
            <summary>Задает stub IXLDrawingMargins.get_Right()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingMargins.cxml::ClosedXML#Excel#IXLDrawingMargins#Top">
            <summary>Задает stub IXLDrawingMargins.get_Top()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingPosition">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingPosition</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingPosition</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.AttachBackingFieldToColumn">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingPosition.Column как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.AttachBackingFieldToColumnOffset">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingPosition.ColumnOffset как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.AttachBackingFieldToRow">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingPosition.Row как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.AttachBackingFieldToRowOffset">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingPosition.RowOffset как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.cxml::ClosedXML#Excel#IXLDrawingPosition#SetColumn(System.Int32)">
            <summary>Задает заглушка IXLDrawingPosition.SetColumn(Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.cxml::ClosedXML#Excel#IXLDrawingPosition#SetColumnOffset(System.Double)">
            <summary>Задает заглушка IXLDrawingPosition.SetColumnOffset(Double columnOffset)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.cxml::ClosedXML#Excel#IXLDrawingPosition#SetRow(System.Int32)">
            <summary>Задает заглушка IXLDrawingPosition.SetRow(Int32 row)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.cxml::ClosedXML#Excel#IXLDrawingPosition#SetRowOffset(System.Double)">
            <summary>Задает заглушка IXLDrawingPosition.SetRowOffset(Double rowOffset)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.ColumnGet">
            <summary>Задает stub IXLDrawingPosition.get_Column()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.ColumnOffsetGet">
            <summary>Задает stub IXLDrawingPosition.get_ColumnOffset()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.ColumnOffsetSetDouble">
            <summary>Задает stub IXLDrawingPosition.set_ColumnOffset(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.ColumnSetInt32">
            <summary>Задает stub IXLDrawingPosition.set_Column(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.RowGet">
            <summary>Задает stub IXLDrawingPosition.get_Row()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.RowOffsetGet">
            <summary>Задает stub IXLDrawingPosition.get_RowOffset()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.RowOffsetSetDouble">
            <summary>Задает stub IXLDrawingPosition.set_RowOffset(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.RowSetInt32">
            <summary>Задает stub IXLDrawingPosition.set_Row(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.SetColumnInt32">
            <summary>Задает stub IXLDrawingPosition.SetColumn(Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.SetColumnOffsetDouble">
            <summary>Задает stub IXLDrawingPosition.SetColumnOffset(Double columnOffset)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.SetRowInt32">
            <summary>Задает stub IXLDrawingPosition.SetRow(Int32 row)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.SetRowOffsetDouble">
            <summary>Задает stub IXLDrawingPosition.SetRowOffset(Double rowOffset)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.cxml::ClosedXML#Excel#IXLDrawingPosition#Column">
            <summary>Задает stub IXLDrawingPosition.get_Column()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.cxml::ClosedXML#Excel#IXLDrawingPosition#ColumnOffset">
            <summary>Задает stub IXLDrawingPosition.get_ColumnOffset()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.cxml::ClosedXML#Excel#IXLDrawingPosition#Row">
            <summary>Задает stub IXLDrawingPosition.get_Row()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingPosition.cxml::ClosedXML#Excel#IXLDrawingPosition#RowOffset">
            <summary>Задает stub IXLDrawingPosition.get_RowOffset()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingProperties">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingProperties</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProperties.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingProperties</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProperties.AttachBackingFieldToPositioning">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingProperties.Positioning как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProperties.cxml::ClosedXML#Excel#IXLDrawingProperties#SetPositioning(ClosedXML.Excel.XLDrawingAnchor)">
            <summary>Задает заглушка IXLDrawingProperties.SetPositioning(XLDrawingAnchor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProperties.PositioningGet">
            <summary>Задает stub IXLDrawingProperties.get_Positioning()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProperties.PositioningSetXLDrawingAnchor">
            <summary>Задает stub IXLDrawingProperties.set_Positioning(XLDrawingAnchor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProperties.SetPositioningXLDrawingAnchor">
            <summary>Задает stub IXLDrawingProperties.SetPositioning(XLDrawingAnchor value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingProperties.cxml::ClosedXML#Excel#IXLDrawingProperties#Positioning">
            <summary>Задает stub IXLDrawingProperties.get_Positioning()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingProtection">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingProtection</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingProtection</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.AttachBackingFieldToLockText">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingProtection.LockText как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.AttachBackingFieldToLocked">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingProtection.Locked как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.cxml::ClosedXML#Excel#IXLDrawingProtection#SetLockText">
            <summary>Задает заглушка IXLDrawingProtection.SetLockText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.cxml::ClosedXML#Excel#IXLDrawingProtection#SetLockText(System.Boolean)">
            <summary>Задает заглушка IXLDrawingProtection.SetLockText(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.cxml::ClosedXML#Excel#IXLDrawingProtection#SetLocked">
            <summary>Задает заглушка IXLDrawingProtection.SetLocked()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.cxml::ClosedXML#Excel#IXLDrawingProtection#SetLocked(System.Boolean)">
            <summary>Задает заглушка IXLDrawingProtection.SetLocked(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.LockTextGet">
            <summary>Задает stub IXLDrawingProtection.get_LockText()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.LockTextSetBoolean">
            <summary>Задает stub IXLDrawingProtection.set_LockText(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.LockedGet">
            <summary>Задает stub IXLDrawingProtection.get_Locked()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.LockedSetBoolean">
            <summary>Задает stub IXLDrawingProtection.set_Locked(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.SetLockText">
            <summary>Задает stub IXLDrawingProtection.SetLockText()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.SetLockTextBoolean">
            <summary>Задает stub IXLDrawingProtection.SetLockText(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.SetLocked">
            <summary>Задает stub IXLDrawingProtection.SetLocked()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.SetLockedBoolean">
            <summary>Задает stub IXLDrawingProtection.SetLocked(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.cxml::ClosedXML#Excel#IXLDrawingProtection#LockText">
            <summary>Задает stub IXLDrawingProtection.get_LockText()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingProtection.cxml::ClosedXML#Excel#IXLDrawingProtection#Locked">
            <summary>Задает stub IXLDrawingProtection.get_Locked()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingSize">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingSize</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingSize.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingSize</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingSize.AttachBackingFieldToAutomaticSize">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingSize.AutomaticSize как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingSize.AttachBackingFieldToHeight">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingSize.Height как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingSize.AttachBackingFieldToWidth">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingSize.Width как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.AutomaticSizeGet">
            <summary>Задает stub IXLDrawingSize.get_AutomaticSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.AutomaticSizeSetBoolean">
            <summary>Задает stub IXLDrawingSize.set_AutomaticSize(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingSize.cxml::ClosedXML#Excel#IXLDrawingSize#SetAutomaticSize">
            <summary>Задает заглушка IXLDrawingSize.SetAutomaticSize()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingSize.cxml::ClosedXML#Excel#IXLDrawingSize#SetAutomaticSize(System.Boolean)">
            <summary>Задает заглушка IXLDrawingSize.SetAutomaticSize(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingSize.cxml::ClosedXML#Excel#IXLDrawingSize#SetHeight(System.Double)">
            <summary>Задает заглушка IXLDrawingSize.SetHeight(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingSize.cxml::ClosedXML#Excel#IXLDrawingSize#SetWidth(System.Double)">
            <summary>Задает заглушка IXLDrawingSize.SetWidth(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.HeightGet">
            <summary>Задает stub IXLDrawingSize.get_Height()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.HeightSetDouble">
            <summary>Задает stub IXLDrawingSize.set_Height(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.SetAutomaticSize">
            <summary>Задает stub IXLDrawingSize.SetAutomaticSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.SetAutomaticSizeBoolean">
            <summary>Задает stub IXLDrawingSize.SetAutomaticSize(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.SetHeightDouble">
            <summary>Задает stub IXLDrawingSize.SetHeight(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.SetWidthDouble">
            <summary>Задает stub IXLDrawingSize.SetWidth(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.WidthGet">
            <summary>Задает stub IXLDrawingSize.get_Width()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingSize.WidthSetDouble">
            <summary>Задает stub IXLDrawingSize.set_Width(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingSize.cxml::ClosedXML#Excel#IXLDrawingSize#AutomaticSize">
            <summary>Задает stub IXLDrawingSize.get_AutomaticSize()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingSize.cxml::ClosedXML#Excel#IXLDrawingSize#Height">
            <summary>Задает stub IXLDrawingSize.get_Height()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingSize.cxml::ClosedXML#Excel#IXLDrawingSize#Width">
            <summary>Задает stub IXLDrawingSize.get_Width()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingStyle">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingStyle</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingStyle</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.AlignmentGet">
            <summary>Задает stub IXLDrawingStyle.get_Alignment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.ColorsAndLinesGet">
            <summary>Задает stub IXLDrawingStyle.get_ColorsAndLines()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.MarginsGet">
            <summary>Задает stub IXLDrawingStyle.get_Margins()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.PropertiesGet">
            <summary>Задает stub IXLDrawingStyle.get_Properties()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.ProtectionGet">
            <summary>Задает stub IXLDrawingStyle.get_Protection()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.SizeGet">
            <summary>Задает stub IXLDrawingStyle.get_Size()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.WebGet">
            <summary>Задает stub IXLDrawingStyle.get_Web()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.cxml::ClosedXML#Excel#IXLDrawingStyle#Alignment">
            <summary>Задает stub IXLDrawingStyle.get_Alignment()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.cxml::ClosedXML#Excel#IXLDrawingStyle#ColorsAndLines">
            <summary>Задает stub IXLDrawingStyle.get_ColorsAndLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.cxml::ClosedXML#Excel#IXLDrawingStyle#Margins">
            <summary>Задает stub IXLDrawingStyle.get_Margins()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.cxml::ClosedXML#Excel#IXLDrawingStyle#Properties">
            <summary>Задает stub IXLDrawingStyle.get_Properties()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.cxml::ClosedXML#Excel#IXLDrawingStyle#Protection">
            <summary>Задает stub IXLDrawingStyle.get_Protection()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.cxml::ClosedXML#Excel#IXLDrawingStyle#Size">
            <summary>Задает stub IXLDrawingStyle.get_Size()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingStyle.cxml::ClosedXML#Excel#IXLDrawingStyle#Web">
            <summary>Задает stub IXLDrawingStyle.get_Web()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLDrawingWeb">
            <summary>Тип заглушки ClosedXML.Excel.IXLDrawingWeb</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingWeb.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLDrawingWeb</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingWeb.AlternateTextGet">
            <summary>Задает stub IXLDrawingWeb.get_AlternateText()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingWeb.AlternateTextSetString">
            <summary>Задает stub IXLDrawingWeb.set_AlternateText(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingWeb.AttachBackingFieldToAlternateText">
            <summary>Присоединение делегатов для эмуляции StubIXLDrawingWeb.AlternateText как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLDrawingWeb.cxml::ClosedXML#Excel#IXLDrawingWeb#SetAlternateText(System.String)">
            <summary>Задает заглушка IXLDrawingWeb.SetAlternateText(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLDrawingWeb.SetAlternateTextString">
            <summary>Задает stub IXLDrawingWeb.SetAlternateText(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLDrawingWeb.cxml::ClosedXML#Excel#IXLDrawingWeb#AlternateText">
            <summary>Задает stub IXLDrawingWeb.get_AlternateText()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLFill">
            <summary>Тип заглушки ClosedXML.Excel.IXLFill</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLFill</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.AttachBackingFieldToBackgroundColor">
            <summary>Присоединение делегатов для эмуляции StubIXLFill.BackgroundColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.AttachBackingFieldToPatternBackgroundColor">
            <summary>Присоединение делегатов для эмуляции StubIXLFill.PatternBackgroundColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.AttachBackingFieldToPatternColor">
            <summary>Присоединение делегатов для эмуляции StubIXLFill.PatternColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.AttachBackingFieldToPatternType">
            <summary>Присоединение делегатов для эмуляции StubIXLFill.PatternType как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.BackgroundColorGet">
            <summary>Задает stub IXLFill.get_BackgroundColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.BackgroundColorSetXLColor">
            <summary>Задает stub IXLFill.set_BackgroundColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.cxml::ClosedXML#Excel#IXLFill#SetBackgroundColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLFill.SetBackgroundColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.cxml::ClosedXML#Excel#IXLFill#SetPatternBackgroundColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLFill.SetPatternBackgroundColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.cxml::ClosedXML#Excel#IXLFill#SetPatternColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLFill.SetPatternColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.cxml::ClosedXML#Excel#IXLFill#SetPatternType(ClosedXML.Excel.XLFillPatternValues)">
            <summary>Задает заглушка IXLFill.SetPatternType(XLFillPatternValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.EqualsIXLFill">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.PatternBackgroundColorGet">
            <summary>Задает stub IXLFill.get_PatternBackgroundColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.PatternBackgroundColorSetXLColor">
            <summary>Задает stub IXLFill.set_PatternBackgroundColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.PatternColorGet">
            <summary>Задает stub IXLFill.get_PatternColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.PatternColorSetXLColor">
            <summary>Задает stub IXLFill.set_PatternColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.PatternTypeGet">
            <summary>Задает stub IXLFill.get_PatternType()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.PatternTypeSetXLFillPatternValues">
            <summary>Задает stub IXLFill.set_PatternType(XLFillPatternValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.SetBackgroundColorXLColor">
            <summary>Задает stub IXLFill.SetBackgroundColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.SetPatternBackgroundColorXLColor">
            <summary>Задает stub IXLFill.SetPatternBackgroundColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.SetPatternColorXLColor">
            <summary>Задает stub IXLFill.SetPatternColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFill.SetPatternTypeXLFillPatternValues">
            <summary>Задает stub IXLFill.SetPatternType(XLFillPatternValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFill.global::System#IEquatable{ClosedXML#Excel#IXLFill}#Equals(ClosedXML.Excel.IXLFill)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFill.cxml::ClosedXML#Excel#IXLFill#BackgroundColor">
            <summary>Задает stub IXLFill.get_BackgroundColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFill.cxml::ClosedXML#Excel#IXLFill#PatternBackgroundColor">
            <summary>Задает stub IXLFill.get_PatternBackgroundColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFill.cxml::ClosedXML#Excel#IXLFill#PatternColor">
            <summary>Задает stub IXLFill.get_PatternColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFill.cxml::ClosedXML#Excel#IXLFill#PatternType">
            <summary>Задает stub IXLFill.get_PatternType()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLFilterColumn">
            <summary>Тип заглушки ClosedXML.Excel.IXLFilterColumn</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLFilterColumn</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.AboveAverage">
            <summary>Задает stub IXLFilterColumn.AboveAverage()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.AddFilterOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLFilteredColumn})">
            <summary>Задает заглушки AddFilter(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.AttachBackingFieldToDynamicType">
            <summary>Присоединение делегатов для эмуляции StubIXLFilterColumn.DynamicType как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.AttachBackingFieldToDynamicValue">
            <summary>Присоединение делегатов для эмуляции StubIXLFilterColumn.DynamicValue как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.AttachBackingFieldToFilterType">
            <summary>Присоединение делегатов для эмуляции StubIXLFilterColumn.FilterType как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.AttachBackingFieldToTopBottomPart">
            <summary>Присоединение делегатов для эмуляции StubIXLFilterColumn.TopBottomPart как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.AttachBackingFieldToTopBottomType">
            <summary>Присоединение делегатов для эмуляции StubIXLFilterColumn.TopBottomType как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.AttachBackingFieldToTopBottomValue">
            <summary>Присоединение делегатов для эмуляции StubIXLFilterColumn.TopBottomValue как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.BeginsWithString">
            <summary>Задает stub IXLFilterColumn.BeginsWith(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.BelowAverage">
            <summary>Задает stub IXLFilterColumn.BelowAverage()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.BetweenOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0})">
            <summary>Задает заглушки Between(!!0 minValue, !!0 maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.BottomInt32XLTopBottomType">
            <summary>Задает stub IXLFilterColumn.Bottom(Int32 value, XLTopBottomType type)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.Clear">
            <summary>Задает stub IXLFilterColumn.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#AboveAverage">
            <summary>Задает заглушка IXLFilterColumn.AboveAverage()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#AddFilter``1(``0)">
            <summary>Задает заглушка IXLFilterColumn.AddFilter(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#BeginsWith(System.String)">
            <summary>Задает заглушка IXLFilterColumn.BeginsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#BelowAverage">
            <summary>Задает заглушка IXLFilterColumn.BelowAverage()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#Between``1(``0,``0)">
            <summary>Задает заглушка IXLFilterColumn.Between(!!0 minValue, !!0 maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#Bottom(System.Int32,ClosedXML.Excel.XLTopBottomType)">
            <summary>Задает заглушка IXLFilterColumn.Bottom(Int32 value, XLTopBottomType type)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#Clear">
            <summary>Задает заглушка IXLFilterColumn.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#Contains(System.String)">
            <summary>Задает заглушка IXLFilterColumn.Contains(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#EndsWith(System.String)">
            <summary>Задает заглушка IXLFilterColumn.EndsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#EqualOrGreaterThan``1(``0)">
            <summary>Задает заглушка IXLFilterColumn.EqualOrGreaterThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#EqualOrLessThan``1(``0)">
            <summary>Задает заглушка IXLFilterColumn.EqualOrLessThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#EqualTo``1(``0)">
            <summary>Задает заглушка IXLFilterColumn.EqualTo(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#GreaterThan``1(``0)">
            <summary>Задает заглушка IXLFilterColumn.GreaterThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#LessThan``1(``0)">
            <summary>Задает заглушка IXLFilterColumn.LessThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#NotBeginsWith(System.String)">
            <summary>Задает заглушка IXLFilterColumn.NotBeginsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#NotBetween``1(``0,``0)">
            <summary>Задает заглушка IXLFilterColumn.NotBetween(!!0 minValue, !!0 maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#NotContains(System.String)">
            <summary>Задает заглушка IXLFilterColumn.NotContains(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#NotEndsWith(System.String)">
            <summary>Задает заглушка IXLFilterColumn.NotEndsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#NotEqualTo``1(``0)">
            <summary>Задает заглушка IXLFilterColumn.NotEqualTo(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#SetDynamicType(ClosedXML.Excel.XLFilterDynamicType)">
            <summary>Задает заглушка IXLFilterColumn.SetDynamicType(XLFilterDynamicType value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#SetDynamicValue(System.Double)">
            <summary>Задает заглушка IXLFilterColumn.SetDynamicValue(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#SetFilterType(ClosedXML.Excel.XLFilterType)">
            <summary>Задает заглушка IXLFilterColumn.SetFilterType(XLFilterType value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#SetTopBottomPart(ClosedXML.Excel.XLTopBottomPart)">
            <summary>Задает заглушка IXLFilterColumn.SetTopBottomPart(XLTopBottomPart value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#SetTopBottomType(ClosedXML.Excel.XLTopBottomType)">
            <summary>Задает заглушка IXLFilterColumn.SetTopBottomType(XLTopBottomType value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#SetTopBottomValue(System.Int32)">
            <summary>Задает заглушка IXLFilterColumn.SetTopBottomValue(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#Top(System.Int32,ClosedXML.Excel.XLTopBottomType)">
            <summary>Задает заглушка IXLFilterColumn.Top(Int32 value, XLTopBottomType type)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.ContainsString">
            <summary>Задает stub IXLFilterColumn.Contains(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.DynamicTypeGet">
            <summary>Задает stub IXLFilterColumn.get_DynamicType()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.DynamicTypeSetXLFilterDynamicType">
            <summary>Задает stub IXLFilterColumn.set_DynamicType(XLFilterDynamicType value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.DynamicValueGet">
            <summary>Задает stub IXLFilterColumn.get_DynamicValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.DynamicValueSetDouble">
            <summary>Задает stub IXLFilterColumn.set_DynamicValue(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.EndsWithString">
            <summary>Задает stub IXLFilterColumn.EndsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.EqualOrGreaterThanOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLFilterConnector})">
            <summary>Задает заглушки EqualOrGreaterThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.EqualOrLessThanOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLFilterConnector})">
            <summary>Задает заглушки EqualOrLessThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.EqualToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLFilterConnector})">
            <summary>Задает заглушки EqualTo(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.FilterTypeGet">
            <summary>Задает stub IXLFilterColumn.get_FilterType()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.FilterTypeSetXLFilterType">
            <summary>Задает stub IXLFilterColumn.set_FilterType(XLFilterType value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.GreaterThanOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLFilterConnector})">
            <summary>Задает заглушки GreaterThan(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.LessThanOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLFilterConnector})">
            <summary>Задает заглушки LessThan(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.NotBeginsWithString">
            <summary>Задает stub IXLFilterColumn.NotBeginsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.NotBetweenOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0})">
            <summary>Задает заглушки NotBetween(!!0 minValue, !!0 maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.NotContainsString">
            <summary>Задает stub IXLFilterColumn.NotContains(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.NotEndsWithString">
            <summary>Задает stub IXLFilterColumn.NotEndsWith(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterColumn.NotEqualToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLFilterConnector})">
            <summary>Задает заглушки NotEqualTo(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.SetDynamicTypeXLFilterDynamicType">
            <summary>Задает stub IXLFilterColumn.SetDynamicType(XLFilterDynamicType value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.SetDynamicValueDouble">
            <summary>Задает stub IXLFilterColumn.SetDynamicValue(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.SetFilterTypeXLFilterType">
            <summary>Задает stub IXLFilterColumn.SetFilterType(XLFilterType value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.SetTopBottomPartXLTopBottomPart">
            <summary>Задает stub IXLFilterColumn.SetTopBottomPart(XLTopBottomPart value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.SetTopBottomTypeXLTopBottomType">
            <summary>Задает stub IXLFilterColumn.SetTopBottomType(XLTopBottomType value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.SetTopBottomValueInt32">
            <summary>Задает stub IXLFilterColumn.SetTopBottomValue(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.TopBottomPartGet">
            <summary>Задает stub IXLFilterColumn.get_TopBottomPart()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.TopBottomPartSetXLTopBottomPart">
            <summary>Задает stub IXLFilterColumn.set_TopBottomPart(XLTopBottomPart value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.TopBottomTypeGet">
            <summary>Задает stub IXLFilterColumn.get_TopBottomType()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.TopBottomTypeSetXLTopBottomType">
            <summary>Задает stub IXLFilterColumn.set_TopBottomType(XLTopBottomType value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.TopBottomValueGet">
            <summary>Задает stub IXLFilterColumn.get_TopBottomValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.TopBottomValueSetInt32">
            <summary>Задает stub IXLFilterColumn.set_TopBottomValue(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterColumn.TopInt32XLTopBottomType">
            <summary>Задает stub IXLFilterColumn.Top(Int32 value, XLTopBottomType type)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#DynamicType">
            <summary>Задает stub IXLFilterColumn.get_DynamicType()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#DynamicValue">
            <summary>Задает stub IXLFilterColumn.get_DynamicValue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#FilterType">
            <summary>Задает stub IXLFilterColumn.get_FilterType()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#TopBottomPart">
            <summary>Задает stub IXLFilterColumn.get_TopBottomPart()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#TopBottomType">
            <summary>Задает stub IXLFilterColumn.get_TopBottomType()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFilterColumn.cxml::ClosedXML#Excel#IXLFilterColumn#TopBottomValue">
            <summary>Задает stub IXLFilterColumn.get_TopBottomValue()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLFilterConnector">
            <summary>Тип заглушки ClosedXML.Excel.IXLFilterConnector</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilterConnector.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLFilterConnector</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterConnector.AndGet">
            <summary>Задает stub IXLFilterConnector.get_And()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFilterConnector.OrGet">
            <summary>Задает stub IXLFilterConnector.get_Or()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFilterConnector.cxml::ClosedXML#Excel#IXLFilterConnector#And">
            <summary>Задает stub IXLFilterConnector.get_And()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFilterConnector.cxml::ClosedXML#Excel#IXLFilterConnector#Or">
            <summary>Задает stub IXLFilterConnector.get_Or()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLFilteredColumn">
            <summary>Тип заглушки ClosedXML.Excel.IXLFilteredColumn</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilteredColumn.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLFilteredColumn</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilteredColumn.AddFilterOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLFilteredColumn})">
            <summary>Задает заглушки AddFilter(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFilteredColumn.cxml::ClosedXML#Excel#IXLFilteredColumn#AddFilter``1(``0)">
            <summary>Задает заглушка IXLFilteredColumn.AddFilter(!!0 value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLFont">
            <summary>Тип заглушки ClosedXML.Excel.IXLFont</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLFont</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToBold">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.Bold как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToFontColor">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.FontColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToFontFamilyNumbering">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.FontFamilyNumbering как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToFontName">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.FontName как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToFontSize">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.FontSize как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToItalic">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.Italic как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToShadow">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.Shadow как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToStrikethrough">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.Strikethrough как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToUnderline">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.Underline как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.AttachBackingFieldToVerticalAlignment">
            <summary>Присоединение делегатов для эмуляции StubIXLFont.VerticalAlignment как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.BoldGet">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.BoldSetBoolean">
            <summary>Задает stub IXLFontBase.set_Bold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetBold">
            <summary>Задает заглушка IXLFont.SetBold()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetBold(System.Boolean)">
            <summary>Задает заглушка IXLFont.SetBold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetFontColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLFont.SetFontColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetFontFamilyNumbering(ClosedXML.Excel.XLFontFamilyNumberingValues)">
            <summary>Задает заглушка IXLFont.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetFontName(System.String)">
            <summary>Задает заглушка IXLFont.SetFontName(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetFontSize(System.Double)">
            <summary>Задает заглушка IXLFont.SetFontSize(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetItalic">
            <summary>Задает заглушка IXLFont.SetItalic()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetItalic(System.Boolean)">
            <summary>Задает заглушка IXLFont.SetItalic(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetShadow">
            <summary>Задает заглушка IXLFont.SetShadow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetShadow(System.Boolean)">
            <summary>Задает заглушка IXLFont.SetShadow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetStrikethrough">
            <summary>Задает заглушка IXLFont.SetStrikethrough()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetStrikethrough(System.Boolean)">
            <summary>Задает заглушка IXLFont.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetUnderline">
            <summary>Задает заглушка IXLFont.SetUnderline()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetUnderline(ClosedXML.Excel.XLFontUnderlineValues)">
            <summary>Задает заглушка IXLFont.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFont#SetVerticalAlignment(ClosedXML.Excel.XLFontVerticalTextAlignmentValues)">
            <summary>Задает заглушка IXLFont.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.EqualsIXLFont">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.FontColorGet">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.FontColorSetXLColor">
            <summary>Задает stub IXLFontBase.set_FontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.FontFamilyNumberingGet">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.FontFamilyNumberingSetXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFontBase.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.FontNameGet">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.FontNameSetString">
            <summary>Задает stub IXLFontBase.set_FontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.FontSizeGet">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.FontSizeSetDouble">
            <summary>Задает stub IXLFontBase.set_FontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.ItalicGet">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.ItalicSetBoolean">
            <summary>Задает stub IXLFontBase.set_Italic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetBold">
            <summary>Задает stub IXLFont.SetBold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetBoldBoolean">
            <summary>Задает stub IXLFont.SetBold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetFontColorXLColor">
            <summary>Задает stub IXLFont.SetFontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetFontFamilyNumberingXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFont.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetFontNameString">
            <summary>Задает stub IXLFont.SetFontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetFontSizeDouble">
            <summary>Задает stub IXLFont.SetFontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetItalic">
            <summary>Задает stub IXLFont.SetItalic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetItalicBoolean">
            <summary>Задает stub IXLFont.SetItalic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetShadow">
            <summary>Задает stub IXLFont.SetShadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetShadowBoolean">
            <summary>Задает stub IXLFont.SetShadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetStrikethrough">
            <summary>Задает stub IXLFont.SetStrikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetStrikethroughBoolean">
            <summary>Задает stub IXLFont.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetUnderline">
            <summary>Задает stub IXLFont.SetUnderline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetUnderlineXLFontUnderlineValues">
            <summary>Задает stub IXLFont.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.SetVerticalAlignmentXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFont.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.ShadowGet">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.ShadowSetBoolean">
            <summary>Задает stub IXLFontBase.set_Shadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.StrikethroughGet">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.StrikethroughSetBoolean">
            <summary>Задает stub IXLFontBase.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFont.global::System#IEquatable{ClosedXML#Excel#IXLFont}#Equals(ClosedXML.Excel.IXLFont)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.UnderlineGet">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.UnderlineSetXLFontUnderlineValues">
            <summary>Задает stub IXLFontBase.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.VerticalAlignmentGet">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFont.VerticalAlignmentSetXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFontBase.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#Bold">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#FontColor">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#FontFamilyNumbering">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#FontName">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#FontSize">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#Italic">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#Shadow">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#Strikethrough">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#Underline">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFont.cxml::ClosedXML#Excel#IXLFontBase#VerticalAlignment">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLFontBase">
            <summary>Тип заглушки ClosedXML.Excel.IXLFontBase</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLFontBase</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToBold">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.Bold как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToFontColor">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.FontColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToFontFamilyNumbering">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.FontFamilyNumbering как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToFontName">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.FontName как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToFontSize">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.FontSize как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToItalic">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.Italic как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToShadow">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.Shadow как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToStrikethrough">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.Strikethrough как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToUnderline">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.Underline как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFontBase.AttachBackingFieldToVerticalAlignment">
            <summary>Присоединение делегатов для эмуляции StubIXLFontBase.VerticalAlignment как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.BoldGet">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.BoldSetBoolean">
            <summary>Задает stub IXLFontBase.set_Bold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.FontColorGet">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.FontColorSetXLColor">
            <summary>Задает stub IXLFontBase.set_FontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.FontFamilyNumberingGet">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.FontFamilyNumberingSetXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFontBase.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.FontNameGet">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.FontNameSetString">
            <summary>Задает stub IXLFontBase.set_FontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.FontSizeGet">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.FontSizeSetDouble">
            <summary>Задает stub IXLFontBase.set_FontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.ItalicGet">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.ItalicSetBoolean">
            <summary>Задает stub IXLFontBase.set_Italic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.ShadowGet">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.ShadowSetBoolean">
            <summary>Задает stub IXLFontBase.set_Shadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.StrikethroughGet">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.StrikethroughSetBoolean">
            <summary>Задает stub IXLFontBase.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.UnderlineGet">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.UnderlineSetXLFontUnderlineValues">
            <summary>Задает stub IXLFontBase.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.VerticalAlignmentGet">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFontBase.VerticalAlignmentSetXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFontBase.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#Bold">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#FontColor">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#FontFamilyNumbering">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#FontName">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#FontSize">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#Italic">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#Shadow">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#Strikethrough">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#Underline">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFontBase.cxml::ClosedXML#Excel#IXLFontBase#VerticalAlignment">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLFormattedText`1">
            <summary>Тип заглушки ClosedXML.Excel.IXLFormattedText`1</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLFormattedText</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.AddNewLine">
            <summary>Задает stub IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.AddTextString">
            <summary>Задает stub IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.AddTextStringIXLFontBase">
            <summary>Задает stub IXLFormattedText`1.AddText(String text, IXLFontBase font)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.BoldSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Bold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.ClearFont">
            <summary>Задает stub IXLFormattedText`1.ClearFont()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.ClearText">
            <summary>Задает stub IXLFormattedText`1.ClearText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#AddText(System.String,ClosedXML.Excel.IXLFontBase)">
            <summary>Задает заглушка IXLFormattedText`1.AddText(String text, IXLFontBase font)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#ClearFont">
            <summary>Задает заглушка IXLFormattedText`1.ClearFont()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#ClearText">
            <summary>Задает заглушка IXLFormattedText`1.ClearText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetBold">
            <summary>Задает заглушка IXLFormattedText`1.SetBold()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetBold(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetBold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetFontColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetFontFamilyNumbering(ClosedXML.Excel.XLFontFamilyNumberingValues)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetFontName(System.String)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontName(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetFontSize(System.Double)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontSize(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetItalic">
            <summary>Задает заглушка IXLFormattedText`1.SetItalic()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetItalic(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetItalic(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetShadow">
            <summary>Задает заглушка IXLFormattedText`1.SetShadow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetShadow(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetShadow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetStrikethrough">
            <summary>Задает заглушка IXLFormattedText`1.SetStrikethrough()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetStrikethrough(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetUnderline">
            <summary>Задает заглушка IXLFormattedText`1.SetUnderline()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetUnderline(ClosedXML.Excel.XLFontUnderlineValues)">
            <summary>Задает заглушка IXLFormattedText`1.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#SetVerticalAlignment(ClosedXML.Excel.XLFontVerticalTextAlignmentValues)">
            <summary>Задает заглушка IXLFormattedText`1.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Substring(System.Int32)">
            <summary>Задает заглушка IXLFormattedText`1.Substring(Int32 index)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Substring(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLFormattedText`1.Substring(Int32 index, Int32 length)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLWithRichString#AddNewLine">
            <summary>Задает заглушка IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLWithRichString#AddText(System.String)">
            <summary>Задает заглушка IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.CountGet">
            <summary>Задает stub IXLFormattedText`1.get_Count()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.EqualsIXLFormattedTextOfT0">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.FontColorSetXLColor">
            <summary>Задает stub IXLFormattedText`1.set_FontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.FontFamilyNumberingSetXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFormattedText`1.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.FontNameSetString">
            <summary>Задает stub IXLFormattedText`1.set_FontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.FontSizeSetDouble">
            <summary>Задает stub IXLFormattedText`1.set_FontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.HasPhoneticsGet">
            <summary>Задает stub IXLFormattedText`1.get_HasPhonetics()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.ItalicSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Italic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.LengthGet">
            <summary>Задает stub IXLFormattedText`1.get_Length()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.PhoneticsGet">
            <summary>Задает stub IXLFormattedText`1.get_Phonetics()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetBold">
            <summary>Задает stub IXLFormattedText`1.SetBold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetBoldBoolean">
            <summary>Задает stub IXLFormattedText`1.SetBold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetFontColorXLColor">
            <summary>Задает stub IXLFormattedText`1.SetFontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetFontFamilyNumberingXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFormattedText`1.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetFontNameString">
            <summary>Задает stub IXLFormattedText`1.SetFontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetFontSizeDouble">
            <summary>Задает stub IXLFormattedText`1.SetFontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetItalic">
            <summary>Задает stub IXLFormattedText`1.SetItalic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetItalicBoolean">
            <summary>Задает stub IXLFormattedText`1.SetItalic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetShadow">
            <summary>Задает stub IXLFormattedText`1.SetShadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetShadowBoolean">
            <summary>Задает stub IXLFormattedText`1.SetShadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetStrikethrough">
            <summary>Задает stub IXLFormattedText`1.SetStrikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetStrikethroughBoolean">
            <summary>Задает stub IXLFormattedText`1.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetUnderline">
            <summary>Задает stub IXLFormattedText`1.SetUnderline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetUnderlineXLFontUnderlineValues">
            <summary>Задает stub IXLFormattedText`1.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SetVerticalAlignmentXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFormattedText`1.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.ShadowSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Shadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.StrikethroughSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SubstringInt32">
            <summary>Задает stub IXLFormattedText`1.Substring(Int32 index)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.SubstringInt32Int32">
            <summary>Задает stub IXLFormattedText`1.Substring(Int32 index, Int32 length)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLRichString}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.global::System#IEquatable{ClosedXML#Excel#IXLFormattedText{T}}#Equals(ClosedXML.Excel.IXLFormattedText{`0})">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.TextGet">
            <summary>Задает stub IXLFormattedText`1.get_Text()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.UnderlineSetXLFontUnderlineValues">
            <summary>Задает stub IXLFormattedText`1.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.VerticalAlignmentSetXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFormattedText`1.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Bold">
            <summary>Задает stub IXLFormattedText`1.set_Bold(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Count">
            <summary>Задает stub IXLFormattedText`1.get_Count()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#FontColor">
            <summary>Задает stub IXLFormattedText`1.set_FontColor(XLColor value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#FontFamilyNumbering">
            <summary>Задает stub IXLFormattedText`1.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#FontName">
            <summary>Задает stub IXLFormattedText`1.set_FontName(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#FontSize">
            <summary>Задает stub IXLFormattedText`1.set_FontSize(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#HasPhonetics">
            <summary>Задает stub IXLFormattedText`1.get_HasPhonetics()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Italic">
            <summary>Задает stub IXLFormattedText`1.set_Italic(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Length">
            <summary>Задает stub IXLFormattedText`1.get_Length()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Phonetics">
            <summary>Задает stub IXLFormattedText`1.get_Phonetics()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Shadow">
            <summary>Задает stub IXLFormattedText`1.set_Shadow(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Strikethrough">
            <summary>Задает stub IXLFormattedText`1.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Text">
            <summary>Задает stub IXLFormattedText`1.get_Text()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#Underline">
            <summary>Задает stub IXLFormattedText`1.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLFormattedText`1.cxml::ClosedXML#Excel#IXLFormattedText{T}#VerticalAlignment">
            <summary>Задает stub IXLFormattedText`1.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLHFItem">
            <summary>Тип заглушки ClosedXML.Excel.IXLHFItem</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHFItem.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLHFItem</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHFItem.AddImageStringXLHFOccurrence">
            <summary>Задает stub IXLHFItem.AddImage(String imagePath, XLHFOccurrence occurrence)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHFItem.AddNewLine">
            <summary>Задает stub IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHFItem.AddTextString">
            <summary>Задает stub IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHFItem.AddTextStringXLHFOccurrence">
            <summary>Задает stub IXLHFItem.AddText(String text, XLHFOccurrence occurrence)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHFItem.AddTextXLHFPredefinedText">
            <summary>Задает stub IXLHFItem.AddText(XLHFPredefinedText predefinedText)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHFItem.AddTextXLHFPredefinedTextXLHFOccurrence">
            <summary>Задает stub IXLHFItem.AddText(XLHFPredefinedText predefinedText, XLHFOccurrence occurrence)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHFItem.ClearXLHFOccurrence">
            <summary>Задает stub IXLHFItem.Clear(XLHFOccurrence occurrence)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHFItem.cxml::ClosedXML#Excel#IXLHFItem#AddImage(System.String,ClosedXML.Excel.XLHFOccurrence)">
            <summary>Задает заглушка IXLHFItem.AddImage(String imagePath, XLHFOccurrence occurrence)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHFItem.cxml::ClosedXML#Excel#IXLHFItem#AddText(ClosedXML.Excel.XLHFPredefinedText)">
            <summary>Задает заглушка IXLHFItem.AddText(XLHFPredefinedText predefinedText)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHFItem.cxml::ClosedXML#Excel#IXLHFItem#AddText(ClosedXML.Excel.XLHFPredefinedText,ClosedXML.Excel.XLHFOccurrence)">
            <summary>Задает заглушка IXLHFItem.AddText(XLHFPredefinedText predefinedText, XLHFOccurrence occurrence)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHFItem.cxml::ClosedXML#Excel#IXLHFItem#AddText(System.String,ClosedXML.Excel.XLHFOccurrence)">
            <summary>Задает заглушка IXLHFItem.AddText(String text, XLHFOccurrence occurrence)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHFItem.cxml::ClosedXML#Excel#IXLHFItem#Clear(ClosedXML.Excel.XLHFOccurrence)">
            <summary>Задает заглушка IXLHFItem.Clear(XLHFOccurrence occurrence)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHFItem.cxml::ClosedXML#Excel#IXLHFItem#GetText(ClosedXML.Excel.XLHFOccurrence)">
            <summary>Задает заглушка IXLHFItem.GetText(XLHFOccurrence occurrence)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHFItem.cxml::ClosedXML#Excel#IXLWithRichString#AddNewLine">
            <summary>Задает заглушка IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHFItem.cxml::ClosedXML#Excel#IXLWithRichString#AddText(System.String)">
            <summary>Задает заглушка IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHFItem.GetTextXLHFOccurrence">
            <summary>Задает stub IXLHFItem.GetText(XLHFOccurrence occurrence)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLHeaderFooter">
            <summary>Тип заглушки ClosedXML.Excel.IXLHeaderFooter</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLHeaderFooter</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.CenterGet">
            <summary>Задает stub IXLHeaderFooter.get_Center()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.ClearXLHFOccurrence">
            <summary>Задает stub IXLHeaderFooter.Clear(XLHFOccurrence occurrence)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.cxml::ClosedXML#Excel#IXLHeaderFooter#Clear(ClosedXML.Excel.XLHFOccurrence)">
            <summary>Задает заглушка IXLHeaderFooter.Clear(XLHFOccurrence occurrence)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.cxml::ClosedXML#Excel#IXLHeaderFooter#GetText(ClosedXML.Excel.XLHFOccurrence)">
            <summary>Задает заглушка IXLHeaderFooter.GetText(XLHFOccurrence occurrence)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.GetTextXLHFOccurrence">
            <summary>Задает stub IXLHeaderFooter.GetText(XLHFOccurrence occurrence)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.LeftGet">
            <summary>Задает stub IXLHeaderFooter.get_Left()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.RightGet">
            <summary>Задает stub IXLHeaderFooter.get_Right()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.cxml::ClosedXML#Excel#IXLHeaderFooter#Center">
            <summary>Задает stub IXLHeaderFooter.get_Center()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.cxml::ClosedXML#Excel#IXLHeaderFooter#Left">
            <summary>Задает stub IXLHeaderFooter.get_Left()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLHeaderFooter.cxml::ClosedXML#Excel#IXLHeaderFooter#Right">
            <summary>Задает stub IXLHeaderFooter.get_Right()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLHyperlinks">
            <summary>Тип заглушки ClosedXML.Excel.IXLHyperlinks</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHyperlinks.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLHyperlinks</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHyperlinks.AddXLHyperlink">
            <summary>Задает stub IXLHyperlinks.Add(XLHyperlink hyperlink)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHyperlinks.cxml::ClosedXML#Excel#IXLHyperlinks#Add(ClosedXML.Excel.XLHyperlink)">
            <summary>Задает заглушка IXLHyperlinks.Add(XLHyperlink hyperlink)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHyperlinks.cxml::ClosedXML#Excel#IXLHyperlinks#Delete(ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLHyperlinks.Delete(IXLAddress address)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHyperlinks.cxml::ClosedXML#Excel#IXLHyperlinks#Delete(ClosedXML.Excel.XLHyperlink)">
            <summary>Задает заглушка IXLHyperlinks.Delete(XLHyperlink hyperlink)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHyperlinks.DeleteIXLAddress">
            <summary>Задает stub IXLHyperlinks.Delete(IXLAddress address)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHyperlinks.DeleteXLHyperlink">
            <summary>Задает stub IXLHyperlinks.Delete(XLHyperlink hyperlink)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHyperlinks.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLHyperlinks.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHyperlinks.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#XLHyperlink}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLHyperlinks.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLMargins">
            <summary>Тип заглушки ClosedXML.Excel.IXLMargins</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLMargins</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.AttachBackingFieldToBottom">
            <summary>Присоединение делегатов для эмуляции StubIXLMargins.Bottom как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.AttachBackingFieldToFooter">
            <summary>Присоединение делегатов для эмуляции StubIXLMargins.Footer как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.AttachBackingFieldToHeader">
            <summary>Присоединение делегатов для эмуляции StubIXLMargins.Header как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.AttachBackingFieldToLeft">
            <summary>Присоединение делегатов для эмуляции StubIXLMargins.Left как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.AttachBackingFieldToRight">
            <summary>Присоединение делегатов для эмуляции StubIXLMargins.Right как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.AttachBackingFieldToTop">
            <summary>Присоединение делегатов для эмуляции StubIXLMargins.Top как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.BottomGet">
            <summary>Задает stub IXLMargins.get_Bottom()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.BottomSetDouble">
            <summary>Задает stub IXLMargins.set_Bottom(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#SetBottom(System.Double)">
            <summary>Задает заглушка IXLMargins.SetBottom(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#SetFooter(System.Double)">
            <summary>Задает заглушка IXLMargins.SetFooter(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#SetHeader(System.Double)">
            <summary>Задает заглушка IXLMargins.SetHeader(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#SetLeft(System.Double)">
            <summary>Задает заглушка IXLMargins.SetLeft(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#SetRight(System.Double)">
            <summary>Задает заглушка IXLMargins.SetRight(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#SetTop(System.Double)">
            <summary>Задает заглушка IXLMargins.SetTop(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.FooterGet">
            <summary>Задает stub IXLMargins.get_Footer()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.FooterSetDouble">
            <summary>Задает stub IXLMargins.set_Footer(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.HeaderGet">
            <summary>Задает stub IXLMargins.get_Header()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.HeaderSetDouble">
            <summary>Задает stub IXLMargins.set_Header(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.LeftGet">
            <summary>Задает stub IXLMargins.get_Left()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.LeftSetDouble">
            <summary>Задает stub IXLMargins.set_Left(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.RightGet">
            <summary>Задает stub IXLMargins.get_Right()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.RightSetDouble">
            <summary>Задает stub IXLMargins.set_Right(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.SetBottomDouble">
            <summary>Задает stub IXLMargins.SetBottom(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.SetFooterDouble">
            <summary>Задает stub IXLMargins.SetFooter(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.SetHeaderDouble">
            <summary>Задает stub IXLMargins.SetHeader(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.SetLeftDouble">
            <summary>Задает stub IXLMargins.SetLeft(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.SetRightDouble">
            <summary>Задает stub IXLMargins.SetRight(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.SetTopDouble">
            <summary>Задает stub IXLMargins.SetTop(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.TopGet">
            <summary>Задает stub IXLMargins.get_Top()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLMargins.TopSetDouble">
            <summary>Задает stub IXLMargins.set_Top(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#Bottom">
            <summary>Задает stub IXLMargins.get_Bottom()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#Footer">
            <summary>Задает stub IXLMargins.get_Footer()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#Header">
            <summary>Задает stub IXLMargins.get_Header()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#Left">
            <summary>Задает stub IXLMargins.get_Left()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#Right">
            <summary>Задает stub IXLMargins.get_Right()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLMargins.cxml::ClosedXML#Excel#IXLMargins#Top">
            <summary>Задает stub IXLMargins.get_Top()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLNamedRange">
            <summary>Тип заглушки ClosedXML.Excel.IXLNamedRange</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLNamedRange</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.AddIXLRange">
            <summary>Задает stub IXLNamedRange.Add(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.AddIXLRanges">
            <summary>Задает stub IXLNamedRange.Add(IXLRanges ranges)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.AddXLWorkbookString">
            <summary>Задает stub IXLNamedRange.Add(XLWorkbook workbook, String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.AttachBackingFieldToComment">
            <summary>Присоединение делегатов для эмуляции StubIXLNamedRange.Comment как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubIXLNamedRange.Name как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.AttachBackingFieldToRefersTo">
            <summary>Присоединение делегатов для эмуляции StubIXLNamedRange.RefersTo как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.Clear">
            <summary>Задает stub IXLNamedRange.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Add(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLNamedRange.Add(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Add(ClosedXML.Excel.IXLRanges)">
            <summary>Задает заглушка IXLNamedRange.Add(IXLRanges ranges)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Add(ClosedXML.Excel.XLWorkbook,System.String)">
            <summary>Задает заглушка IXLNamedRange.Add(XLWorkbook workbook, String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Clear">
            <summary>Задает заглушка IXLNamedRange.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Delete">
            <summary>Задает заглушка IXLNamedRange.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Remove(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLNamedRange.Remove(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Remove(ClosedXML.Excel.IXLRanges)">
            <summary>Задает заглушка IXLNamedRange.Remove(IXLRanges ranges)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Remove(System.String)">
            <summary>Задает заглушка IXLNamedRange.Remove(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#SetRefersTo(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLNamedRange.SetRefersTo(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#SetRefersTo(ClosedXML.Excel.IXLRanges)">
            <summary>Задает заглушка IXLNamedRange.SetRefersTo(IXLRanges ranges)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#SetRefersTo(System.String)">
            <summary>Задает заглушка IXLNamedRange.SetRefersTo(String range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.CommentGet">
            <summary>Задает stub IXLNamedRange.get_Comment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.CommentSetString">
            <summary>Задает stub IXLNamedRange.set_Comment(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.Delete">
            <summary>Задает stub IXLNamedRange.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.NameGet">
            <summary>Задает stub IXLNamedRange.get_Name()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.NameSetString">
            <summary>Задает stub IXLNamedRange.set_Name(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.RangesGet">
            <summary>Задает stub IXLNamedRange.get_Ranges()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.RefersToGet">
            <summary>Задает stub IXLNamedRange.get_RefersTo()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.RefersToSetString">
            <summary>Задает stub IXLNamedRange.set_RefersTo(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.RemoveIXLRange">
            <summary>Задает stub IXLNamedRange.Remove(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.RemoveIXLRanges">
            <summary>Задает stub IXLNamedRange.Remove(IXLRanges ranges)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.RemoveString">
            <summary>Задает stub IXLNamedRange.Remove(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.SetRefersToIXLRangeBase">
            <summary>Задает stub IXLNamedRange.SetRefersTo(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.SetRefersToIXLRanges">
            <summary>Задает stub IXLNamedRange.SetRefersTo(IXLRanges ranges)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRange.SetRefersToString">
            <summary>Задает stub IXLNamedRange.SetRefersTo(String range)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Comment">
            <summary>Задает stub IXLNamedRange.get_Comment()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Name">
            <summary>Задает stub IXLNamedRange.get_Name()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#Ranges">
            <summary>Задает stub IXLNamedRange.get_Ranges()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLNamedRange.cxml::ClosedXML#Excel#IXLNamedRange#RefersTo">
            <summary>Задает stub IXLNamedRange.get_RefersTo()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLNamedRanges">
            <summary>Тип заглушки ClosedXML.Excel.IXLNamedRanges</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLNamedRanges</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.AddStringIXLRange">
            <summary>Задает stub IXLNamedRanges.Add(String rangeName, IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.AddStringIXLRangeString">
            <summary>Задает stub IXLNamedRanges.Add(String rangeName, IXLRange range, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.AddStringIXLRanges">
            <summary>Задает stub IXLNamedRanges.Add(String rangeName, IXLRanges ranges)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.AddStringIXLRangesString">
            <summary>Задает stub IXLNamedRanges.Add(String rangeName, IXLRanges ranges, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.AddStringString">
            <summary>Задает stub IXLNamedRanges.Add(String rangeName, String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.AddStringStringString">
            <summary>Задает stub IXLNamedRanges.Add(String rangeName, String rangeAddress, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#Add(System.String,ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLNamedRanges.Add(String rangeName, IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#Add(System.String,ClosedXML.Excel.IXLRanges)">
            <summary>Задает заглушка IXLNamedRanges.Add(String rangeName, IXLRanges ranges)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#Add(System.String,System.String)">
            <summary>Задает заглушка IXLNamedRanges.Add(String rangeName, String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#Add(System.String,ClosedXML.Excel.IXLRange,System.String)">
            <summary>Задает заглушка IXLNamedRanges.Add(String rangeName, IXLRange range, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#Add(System.String,ClosedXML.Excel.IXLRanges,System.String)">
            <summary>Задает заглушка IXLNamedRanges.Add(String rangeName, IXLRanges ranges, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#Add(System.String,System.String,System.String)">
            <summary>Задает заглушка IXLNamedRanges.Add(String rangeName, String rangeAddress, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#Contains(System.String)">
            <summary>Задает заглушка IXLNamedRanges.Contains(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#Delete(System.String)">
            <summary>Задает заглушка IXLNamedRanges.Delete(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#Delete(System.Int32)">
            <summary>Задает заглушка IXLNamedRanges.Delete(Int32 rangeIndex)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#DeleteAll">
            <summary>Задает заглушка IXLNamedRanges.DeleteAll()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#NamedRange(System.String)">
            <summary>Задает заглушка IXLNamedRanges.NamedRange(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.cxml::ClosedXML#Excel#IXLNamedRanges#TryGetValue(System.String,ClosedXML.Excel.IXLNamedRange@)">
            <summary>Задает заглушка IXLNamedRanges.TryGetValue(String name, IXLNamedRange&amp; range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.ContainsString">
            <summary>Задает stub IXLNamedRanges.Contains(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.DeleteAll">
            <summary>Задает stub IXLNamedRanges.DeleteAll()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.DeleteInt32">
            <summary>Задает stub IXLNamedRanges.Delete(Int32 rangeIndex)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.DeleteString">
            <summary>Задает stub IXLNamedRanges.Delete(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.NamedRangeString">
            <summary>Задает stub IXLNamedRanges.NamedRange(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLNamedRange}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNamedRanges.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNamedRanges.TryGetValueStringIXLNamedRangeOut">
            <summary>Задает stub IXLNamedRanges.TryGetValue(String name, IXLNamedRange&amp; range)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLNumberFormat">
            <summary>Тип заглушки ClosedXML.Excel.IXLNumberFormat</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNumberFormat.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLNumberFormat</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNumberFormat.AttachBackingFieldToFormat">
            <summary>Присоединение делегатов для эмуляции StubIXLNumberFormat.Format как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNumberFormat.AttachBackingFieldToNumberFormatId">
            <summary>Присоединение делегатов для эмуляции StubIXLNumberFormat.NumberFormatId как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNumberFormat.cxml::ClosedXML#Excel#IXLNumberFormat#SetFormat(System.String)">
            <summary>Задает заглушка IXLNumberFormat.SetFormat(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNumberFormat.cxml::ClosedXML#Excel#IXLNumberFormat#SetNumberFormatId(System.Int32)">
            <summary>Задает заглушка IXLNumberFormat.SetNumberFormatId(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormat.EqualsIXLNumberFormat">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormat.FormatGet">
            <summary>Задает stub IXLNumberFormatBase.get_Format()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormat.FormatSetString">
            <summary>Задает stub IXLNumberFormatBase.set_Format(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormat.NumberFormatIdGet">
            <summary>Задает stub IXLNumberFormatBase.get_NumberFormatId()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormat.NumberFormatIdSetInt32">
            <summary>Задает stub IXLNumberFormatBase.set_NumberFormatId(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormat.SetFormatString">
            <summary>Задает stub IXLNumberFormat.SetFormat(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormat.SetNumberFormatIdInt32">
            <summary>Задает stub IXLNumberFormat.SetNumberFormatId(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNumberFormat.global::System#IEquatable{ClosedXML#Excel#IXLNumberFormat}#Equals(ClosedXML.Excel.IXLNumberFormat)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLNumberFormat.cxml::ClosedXML#Excel#IXLNumberFormatBase#Format">
            <summary>Задает stub IXLNumberFormatBase.get_Format()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLNumberFormat.cxml::ClosedXML#Excel#IXLNumberFormatBase#NumberFormatId">
            <summary>Задает stub IXLNumberFormatBase.get_NumberFormatId()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase">
            <summary>Тип заглушки ClosedXML.Excel.IXLNumberFormatBase</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLNumberFormatBase</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase.AttachBackingFieldToFormat">
            <summary>Присоединение делегатов для эмуляции StubIXLNumberFormatBase.Format как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase.AttachBackingFieldToNumberFormatId">
            <summary>Присоединение делегатов для эмуляции StubIXLNumberFormatBase.NumberFormatId как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase.FormatGet">
            <summary>Задает stub IXLNumberFormatBase.get_Format()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase.FormatSetString">
            <summary>Задает stub IXLNumberFormatBase.set_Format(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase.NumberFormatIdGet">
            <summary>Задает stub IXLNumberFormatBase.get_NumberFormatId()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase.NumberFormatIdSetInt32">
            <summary>Задает stub IXLNumberFormatBase.set_NumberFormatId(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase.cxml::ClosedXML#Excel#IXLNumberFormatBase#Format">
            <summary>Задает stub IXLNumberFormatBase.get_Format()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLNumberFormatBase.cxml::ClosedXML#Excel#IXLNumberFormatBase#NumberFormatId">
            <summary>Задает stub IXLNumberFormatBase.get_NumberFormatId()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLOutline">
            <summary>Тип заглушки ClosedXML.Excel.IXLOutline</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLOutline.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLOutline</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLOutline.AttachBackingFieldToSummaryHLocation">
            <summary>Присоединение делегатов для эмуляции StubIXLOutline.SummaryHLocation как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLOutline.AttachBackingFieldToSummaryVLocation">
            <summary>Присоединение делегатов для эмуляции StubIXLOutline.SummaryVLocation как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLOutline.SummaryHLocationGet">
            <summary>Задает stub IXLOutline.get_SummaryHLocation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLOutline.SummaryHLocationSetXLOutlineSummaryHLocation">
            <summary>Задает stub IXLOutline.set_SummaryHLocation(XLOutlineSummaryHLocation value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLOutline.SummaryVLocationGet">
            <summary>Задает stub IXLOutline.get_SummaryVLocation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLOutline.SummaryVLocationSetXLOutlineSummaryVLocation">
            <summary>Задает stub IXLOutline.set_SummaryVLocation(XLOutlineSummaryVLocation value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLOutline.cxml::ClosedXML#Excel#IXLOutline#SummaryHLocation">
            <summary>Задает stub IXLOutline.get_SummaryHLocation()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLOutline.cxml::ClosedXML#Excel#IXLOutline#SummaryVLocation">
            <summary>Задает stub IXLOutline.get_SummaryVLocation()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPageSetup">
            <summary>Тип заглушки ClosedXML.Excel.IXLPageSetup</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPageSetup</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.AddHorizontalPageBreakInt32">
            <summary>Задает stub IXLPageSetup.AddHorizontalPageBreak(Int32 row)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.AddVerticalPageBreakInt32">
            <summary>Задает stub IXLPageSetup.AddVerticalPageBreak(Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.AdjustToInt32">
            <summary>Задает stub IXLPageSetup.AdjustTo(Int32 pctOfNormalSize)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.AlignHFWithMarginsGet">
            <summary>Задает stub IXLPageSetup.get_AlignHFWithMargins()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.AlignHFWithMarginsSetBoolean">
            <summary>Задает stub IXLPageSetup.set_AlignHFWithMargins(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToAlignHFWithMargins">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.AlignHFWithMargins как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToBlackAndWhite">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.BlackAndWhite как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToCenterHorizontally">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.CenterHorizontally как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToCenterVertically">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.CenterVertically как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToDifferentFirstPageOnHF">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.DifferentFirstPageOnHF как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToDifferentOddEvenPagesOnHF">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.DifferentOddEvenPagesOnHF как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToDraftQuality">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.DraftQuality как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToFirstPageNumber">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.FirstPageNumber как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToHorizontalDpi">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.HorizontalDpi как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToPageOrder">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.PageOrder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToPageOrientation">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.PageOrientation как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToPagesTall">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.PagesTall как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToPagesWide">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.PagesWide как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToPaperSize">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.PaperSize как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToPrintErrorValue">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.PrintErrorValue как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToScale">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.Scale как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToScaleHFWithDocument">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.ScaleHFWithDocument как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToShowComments">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.ShowComments как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToShowGridlines">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.ShowGridlines как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToShowRowAndColumnHeadings">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.ShowRowAndColumnHeadings как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.AttachBackingFieldToVerticalDpi">
            <summary>Присоединение делегатов для эмуляции StubIXLPageSetup.VerticalDpi как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.BlackAndWhiteGet">
            <summary>Задает stub IXLPageSetup.get_BlackAndWhite()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.BlackAndWhiteSetBoolean">
            <summary>Задает stub IXLPageSetup.set_BlackAndWhite(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.CenterHorizontallyGet">
            <summary>Задает stub IXLPageSetup.get_CenterHorizontally()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.CenterHorizontallySetBoolean">
            <summary>Задает stub IXLPageSetup.set_CenterHorizontally(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.CenterVerticallyGet">
            <summary>Задает stub IXLPageSetup.get_CenterVertically()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.CenterVerticallySetBoolean">
            <summary>Задает stub IXLPageSetup.set_CenterVertically(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#AddHorizontalPageBreak(System.Int32)">
            <summary>Задает заглушка IXLPageSetup.AddHorizontalPageBreak(Int32 row)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#AddVerticalPageBreak(System.Int32)">
            <summary>Задает заглушка IXLPageSetup.AddVerticalPageBreak(Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#AdjustTo(System.Int32)">
            <summary>Задает заглушка IXLPageSetup.AdjustTo(Int32 pctOfNormalSize)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#FitToPages(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLPageSetup.FitToPages(Int32 pagesWide, Int32 pagesTall)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetAlignHFWithMargins">
            <summary>Задает заглушка IXLPageSetup.SetAlignHFWithMargins()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetAlignHFWithMargins(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetAlignHFWithMargins(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetBlackAndWhite">
            <summary>Задает заглушка IXLPageSetup.SetBlackAndWhite()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetBlackAndWhite(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetBlackAndWhite(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetCenterHorizontally">
            <summary>Задает заглушка IXLPageSetup.SetCenterHorizontally()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetCenterHorizontally(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetCenterHorizontally(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetCenterVertically">
            <summary>Задает заглушка IXLPageSetup.SetCenterVertically()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetCenterVertically(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetCenterVertically(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetColumnsToRepeatAtLeft(System.String)">
            <summary>Задает заглушка IXLPageSetup.SetColumnsToRepeatAtLeft(String range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetColumnsToRepeatAtLeft(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLPageSetup.SetColumnsToRepeatAtLeft(Int32 firstColumnToRepeatAtLeft, Int32 lastColumnToRepeatAtLeft)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetDifferentFirstPageOnHF">
            <summary>Задает заглушка IXLPageSetup.SetDifferentFirstPageOnHF()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetDifferentFirstPageOnHF(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetDifferentFirstPageOnHF(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetDifferentOddEvenPagesOnHF">
            <summary>Задает заглушка IXLPageSetup.SetDifferentOddEvenPagesOnHF()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetDifferentOddEvenPagesOnHF(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetDifferentOddEvenPagesOnHF(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetDraftQuality">
            <summary>Задает заглушка IXLPageSetup.SetDraftQuality()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetDraftQuality(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetDraftQuality(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetFirstPageNumber(System.Int64)">
            <summary>Задает заглушка IXLPageSetup.SetFirstPageNumber(Int64 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetHorizontalDpi(System.Int32)">
            <summary>Задает заглушка IXLPageSetup.SetHorizontalDpi(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetPageOrder(ClosedXML.Excel.XLPageOrderValues)">
            <summary>Задает заглушка IXLPageSetup.SetPageOrder(XLPageOrderValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetPageOrientation(ClosedXML.Excel.XLPageOrientation)">
            <summary>Задает заглушка IXLPageSetup.SetPageOrientation(XLPageOrientation value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetPagesTall(System.Int32)">
            <summary>Задает заглушка IXLPageSetup.SetPagesTall(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetPagesWide(System.Int32)">
            <summary>Задает заглушка IXLPageSetup.SetPagesWide(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetPaperSize(ClosedXML.Excel.XLPaperSize)">
            <summary>Задает заглушка IXLPageSetup.SetPaperSize(XLPaperSize value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetPrintErrorValue(ClosedXML.Excel.XLPrintErrorValues)">
            <summary>Задает заглушка IXLPageSetup.SetPrintErrorValue(XLPrintErrorValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetRowsToRepeatAtTop(System.String)">
            <summary>Задает заглушка IXLPageSetup.SetRowsToRepeatAtTop(String range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetRowsToRepeatAtTop(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLPageSetup.SetRowsToRepeatAtTop(Int32 firstRowToRepeatAtTop, Int32 lastRowToRepeatAtTop)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetScale(System.Int32)">
            <summary>Задает заглушка IXLPageSetup.SetScale(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetScaleHFWithDocument">
            <summary>Задает заглушка IXLPageSetup.SetScaleHFWithDocument()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetScaleHFWithDocument(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetScaleHFWithDocument(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetShowComments(ClosedXML.Excel.XLShowCommentsValues)">
            <summary>Задает заглушка IXLPageSetup.SetShowComments(XLShowCommentsValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetShowGridlines">
            <summary>Задает заглушка IXLPageSetup.SetShowGridlines()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetShowGridlines(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetShowGridlines(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetShowRowAndColumnHeadings">
            <summary>Задает заглушка IXLPageSetup.SetShowRowAndColumnHeadings()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetShowRowAndColumnHeadings(System.Boolean)">
            <summary>Задает заглушка IXLPageSetup.SetShowRowAndColumnHeadings(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#SetVerticalDpi(System.Int32)">
            <summary>Задает заглушка IXLPageSetup.SetVerticalDpi(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ColumnBreaksGet">
            <summary>Задает stub IXLPageSetup.get_ColumnBreaks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.DifferentFirstPageOnHFGet">
            <summary>Задает stub IXLPageSetup.get_DifferentFirstPageOnHF()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.DifferentFirstPageOnHFSetBoolean">
            <summary>Задает stub IXLPageSetup.set_DifferentFirstPageOnHF(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.DifferentOddEvenPagesOnHFGet">
            <summary>Задает stub IXLPageSetup.get_DifferentOddEvenPagesOnHF()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.DifferentOddEvenPagesOnHFSetBoolean">
            <summary>Задает stub IXLPageSetup.set_DifferentOddEvenPagesOnHF(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.DraftQualityGet">
            <summary>Задает stub IXLPageSetup.get_DraftQuality()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.DraftQualitySetBoolean">
            <summary>Задает stub IXLPageSetup.set_DraftQuality(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.FirstColumnToRepeatAtLeftGet">
            <summary>Задает stub IXLPageSetup.get_FirstColumnToRepeatAtLeft()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.FirstPageNumberGet">
            <summary>Задает stub IXLPageSetup.get_FirstPageNumber()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.FirstPageNumberSetInt64">
            <summary>Задает stub IXLPageSetup.set_FirstPageNumber(Int64 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.FirstRowToRepeatAtTopGet">
            <summary>Задает stub IXLPageSetup.get_FirstRowToRepeatAtTop()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.FitToPagesInt32Int32">
            <summary>Задает stub IXLPageSetup.FitToPages(Int32 pagesWide, Int32 pagesTall)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.FooterGet">
            <summary>Задает stub IXLPageSetup.get_Footer()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.HeaderGet">
            <summary>Задает stub IXLPageSetup.get_Header()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.HorizontalDpiGet">
            <summary>Задает stub IXLPageSetup.get_HorizontalDpi()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.HorizontalDpiSetInt32">
            <summary>Задает stub IXLPageSetup.set_HorizontalDpi(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.LastColumnToRepeatAtLeftGet">
            <summary>Задает stub IXLPageSetup.get_LastColumnToRepeatAtLeft()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.LastRowToRepeatAtTopGet">
            <summary>Задает stub IXLPageSetup.get_LastRowToRepeatAtTop()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.MarginsGet">
            <summary>Задает stub IXLPageSetup.get_Margins()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PageOrderGet">
            <summary>Задает stub IXLPageSetup.get_PageOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PageOrderSetXLPageOrderValues">
            <summary>Задает stub IXLPageSetup.set_PageOrder(XLPageOrderValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PageOrientationGet">
            <summary>Задает stub IXLPageSetup.get_PageOrientation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PageOrientationSetXLPageOrientation">
            <summary>Задает stub IXLPageSetup.set_PageOrientation(XLPageOrientation value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PagesTallGet">
            <summary>Задает stub IXLPageSetup.get_PagesTall()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PagesTallSetInt32">
            <summary>Задает stub IXLPageSetup.set_PagesTall(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PagesWideGet">
            <summary>Задает stub IXLPageSetup.get_PagesWide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PagesWideSetInt32">
            <summary>Задает stub IXLPageSetup.set_PagesWide(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PaperSizeGet">
            <summary>Задает stub IXLPageSetup.get_PaperSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PaperSizeSetXLPaperSize">
            <summary>Задает stub IXLPageSetup.set_PaperSize(XLPaperSize value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PrintAreasGet">
            <summary>Задает stub IXLPageSetup.get_PrintAreas()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PrintErrorValueGet">
            <summary>Задает stub IXLPageSetup.get_PrintErrorValue()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.PrintErrorValueSetXLPrintErrorValues">
            <summary>Задает stub IXLPageSetup.set_PrintErrorValue(XLPrintErrorValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.RowBreaksGet">
            <summary>Задает stub IXLPageSetup.get_RowBreaks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ScaleGet">
            <summary>Задает stub IXLPageSetup.get_Scale()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ScaleHFWithDocumentGet">
            <summary>Задает stub IXLPageSetup.get_ScaleHFWithDocument()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ScaleHFWithDocumentSetBoolean">
            <summary>Задает stub IXLPageSetup.set_ScaleHFWithDocument(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ScaleSetInt32">
            <summary>Задает stub IXLPageSetup.set_Scale(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetAlignHFWithMargins">
            <summary>Задает stub IXLPageSetup.SetAlignHFWithMargins()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetAlignHFWithMarginsBoolean">
            <summary>Задает stub IXLPageSetup.SetAlignHFWithMargins(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetBlackAndWhite">
            <summary>Задает stub IXLPageSetup.SetBlackAndWhite()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetBlackAndWhiteBoolean">
            <summary>Задает stub IXLPageSetup.SetBlackAndWhite(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetCenterHorizontally">
            <summary>Задает stub IXLPageSetup.SetCenterHorizontally()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetCenterHorizontallyBoolean">
            <summary>Задает stub IXLPageSetup.SetCenterHorizontally(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetCenterVertically">
            <summary>Задает stub IXLPageSetup.SetCenterVertically()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetCenterVerticallyBoolean">
            <summary>Задает stub IXLPageSetup.SetCenterVertically(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetColumnsToRepeatAtLeftInt32Int32">
            <summary>Задает stub IXLPageSetup.SetColumnsToRepeatAtLeft(Int32 firstColumnToRepeatAtLeft, Int32 lastColumnToRepeatAtLeft)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetColumnsToRepeatAtLeftString">
            <summary>Задает stub IXLPageSetup.SetColumnsToRepeatAtLeft(String range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetDifferentFirstPageOnHF">
            <summary>Задает stub IXLPageSetup.SetDifferentFirstPageOnHF()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetDifferentFirstPageOnHFBoolean">
            <summary>Задает stub IXLPageSetup.SetDifferentFirstPageOnHF(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetDifferentOddEvenPagesOnHF">
            <summary>Задает stub IXLPageSetup.SetDifferentOddEvenPagesOnHF()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetDifferentOddEvenPagesOnHFBoolean">
            <summary>Задает stub IXLPageSetup.SetDifferentOddEvenPagesOnHF(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetDraftQuality">
            <summary>Задает stub IXLPageSetup.SetDraftQuality()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetDraftQualityBoolean">
            <summary>Задает stub IXLPageSetup.SetDraftQuality(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetFirstPageNumberInt64">
            <summary>Задает stub IXLPageSetup.SetFirstPageNumber(Int64 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetHorizontalDpiInt32">
            <summary>Задает stub IXLPageSetup.SetHorizontalDpi(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetPageOrderXLPageOrderValues">
            <summary>Задает stub IXLPageSetup.SetPageOrder(XLPageOrderValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetPageOrientationXLPageOrientation">
            <summary>Задает stub IXLPageSetup.SetPageOrientation(XLPageOrientation value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetPagesTallInt32">
            <summary>Задает stub IXLPageSetup.SetPagesTall(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetPagesWideInt32">
            <summary>Задает stub IXLPageSetup.SetPagesWide(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetPaperSizeXLPaperSize">
            <summary>Задает stub IXLPageSetup.SetPaperSize(XLPaperSize value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetPrintErrorValueXLPrintErrorValues">
            <summary>Задает stub IXLPageSetup.SetPrintErrorValue(XLPrintErrorValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetRowsToRepeatAtTopInt32Int32">
            <summary>Задает stub IXLPageSetup.SetRowsToRepeatAtTop(Int32 firstRowToRepeatAtTop, Int32 lastRowToRepeatAtTop)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetRowsToRepeatAtTopString">
            <summary>Задает stub IXLPageSetup.SetRowsToRepeatAtTop(String range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetScaleHFWithDocument">
            <summary>Задает stub IXLPageSetup.SetScaleHFWithDocument()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetScaleHFWithDocumentBoolean">
            <summary>Задает stub IXLPageSetup.SetScaleHFWithDocument(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetScaleInt32">
            <summary>Задает stub IXLPageSetup.SetScale(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetShowCommentsXLShowCommentsValues">
            <summary>Задает stub IXLPageSetup.SetShowComments(XLShowCommentsValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetShowGridlines">
            <summary>Задает stub IXLPageSetup.SetShowGridlines()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetShowGridlinesBoolean">
            <summary>Задает stub IXLPageSetup.SetShowGridlines(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetShowRowAndColumnHeadings">
            <summary>Задает stub IXLPageSetup.SetShowRowAndColumnHeadings()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetShowRowAndColumnHeadingsBoolean">
            <summary>Задает stub IXLPageSetup.SetShowRowAndColumnHeadings(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.SetVerticalDpiInt32">
            <summary>Задает stub IXLPageSetup.SetVerticalDpi(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ShowCommentsGet">
            <summary>Задает stub IXLPageSetup.get_ShowComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ShowCommentsSetXLShowCommentsValues">
            <summary>Задает stub IXLPageSetup.set_ShowComments(XLShowCommentsValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ShowGridlinesGet">
            <summary>Задает stub IXLPageSetup.get_ShowGridlines()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ShowGridlinesSetBoolean">
            <summary>Задает stub IXLPageSetup.set_ShowGridlines(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ShowRowAndColumnHeadingsGet">
            <summary>Задает stub IXLPageSetup.get_ShowRowAndColumnHeadings()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.ShowRowAndColumnHeadingsSetBoolean">
            <summary>Задает stub IXLPageSetup.set_ShowRowAndColumnHeadings(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.VerticalDpiGet">
            <summary>Задает stub IXLPageSetup.get_VerticalDpi()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPageSetup.VerticalDpiSetInt32">
            <summary>Задает stub IXLPageSetup.set_VerticalDpi(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#AlignHFWithMargins">
            <summary>Задает stub IXLPageSetup.get_AlignHFWithMargins()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#BlackAndWhite">
            <summary>Задает stub IXLPageSetup.get_BlackAndWhite()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#CenterHorizontally">
            <summary>Задает stub IXLPageSetup.get_CenterHorizontally()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#CenterVertically">
            <summary>Задает stub IXLPageSetup.get_CenterVertically()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#ColumnBreaks">
            <summary>Задает stub IXLPageSetup.get_ColumnBreaks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#DifferentFirstPageOnHF">
            <summary>Задает stub IXLPageSetup.get_DifferentFirstPageOnHF()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#DifferentOddEvenPagesOnHF">
            <summary>Задает stub IXLPageSetup.get_DifferentOddEvenPagesOnHF()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#DraftQuality">
            <summary>Задает stub IXLPageSetup.get_DraftQuality()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#FirstColumnToRepeatAtLeft">
            <summary>Задает stub IXLPageSetup.get_FirstColumnToRepeatAtLeft()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#FirstPageNumber">
            <summary>Задает stub IXLPageSetup.get_FirstPageNumber()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#FirstRowToRepeatAtTop">
            <summary>Задает stub IXLPageSetup.get_FirstRowToRepeatAtTop()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#Footer">
            <summary>Задает stub IXLPageSetup.get_Footer()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#Header">
            <summary>Задает stub IXLPageSetup.get_Header()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#HorizontalDpi">
            <summary>Задает stub IXLPageSetup.get_HorizontalDpi()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#LastColumnToRepeatAtLeft">
            <summary>Задает stub IXLPageSetup.get_LastColumnToRepeatAtLeft()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#LastRowToRepeatAtTop">
            <summary>Задает stub IXLPageSetup.get_LastRowToRepeatAtTop()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#Margins">
            <summary>Задает stub IXLPageSetup.get_Margins()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#PageOrder">
            <summary>Задает stub IXLPageSetup.get_PageOrder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#PageOrientation">
            <summary>Задает stub IXLPageSetup.get_PageOrientation()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#PagesTall">
            <summary>Задает stub IXLPageSetup.get_PagesTall()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#PagesWide">
            <summary>Задает stub IXLPageSetup.get_PagesWide()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#PaperSize">
            <summary>Задает stub IXLPageSetup.get_PaperSize()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#PrintAreas">
            <summary>Задает stub IXLPageSetup.get_PrintAreas()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#PrintErrorValue">
            <summary>Задает stub IXLPageSetup.get_PrintErrorValue()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#RowBreaks">
            <summary>Задает stub IXLPageSetup.get_RowBreaks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#Scale">
            <summary>Задает stub IXLPageSetup.get_Scale()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#ScaleHFWithDocument">
            <summary>Задает stub IXLPageSetup.get_ScaleHFWithDocument()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#ShowComments">
            <summary>Задает stub IXLPageSetup.get_ShowComments()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#ShowGridlines">
            <summary>Задает stub IXLPageSetup.get_ShowGridlines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#ShowRowAndColumnHeadings">
            <summary>Задает stub IXLPageSetup.get_ShowRowAndColumnHeadings()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPageSetup.cxml::ClosedXML#Excel#IXLPageSetup#VerticalDpi">
            <summary>Задает stub IXLPageSetup.get_VerticalDpi()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPhonetic">
            <summary>Тип заглушки ClosedXML.Excel.IXLPhonetic</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetic.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPhonetic</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetic.AttachBackingFieldToEnd">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetic.End как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetic.AttachBackingFieldToStart">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetic.Start как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetic.AttachBackingFieldToText">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetic.Text как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetic.EndGet">
            <summary>Задает stub IXLPhonetic.get_End()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetic.EndSetInt32">
            <summary>Задает stub IXLPhonetic.set_End(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetic.EqualsIXLPhonetic">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetic.StartGet">
            <summary>Задает stub IXLPhonetic.get_Start()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetic.StartSetInt32">
            <summary>Задает stub IXLPhonetic.set_Start(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetic.global::System#IEquatable{ClosedXML#Excel#IXLPhonetic}#Equals(ClosedXML.Excel.IXLPhonetic)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetic.TextGet">
            <summary>Задает stub IXLPhonetic.get_Text()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetic.TextSetString">
            <summary>Задает stub IXLPhonetic.set_Text(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetic.cxml::ClosedXML#Excel#IXLPhonetic#End">
            <summary>Задает stub IXLPhonetic.get_End()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetic.cxml::ClosedXML#Excel#IXLPhonetic#Start">
            <summary>Задает stub IXLPhonetic.get_Start()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetic.cxml::ClosedXML#Excel#IXLPhonetic#Text">
            <summary>Задает stub IXLPhonetic.get_Text()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPhonetics">
            <summary>Тип заглушки ClosedXML.Excel.IXLPhonetics</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPhonetics</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.AddStringInt32Int32">
            <summary>Задает stub IXLPhonetics.Add(String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.AlignmentGet">
            <summary>Задает stub IXLPhonetics.get_Alignment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.AlignmentSetXLPhoneticAlignment">
            <summary>Задает stub IXLPhonetics.set_Alignment(XLPhoneticAlignment value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToAlignment">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.Alignment как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToBold">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.Bold как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToFontColor">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.FontColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToFontFamilyNumbering">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.FontFamilyNumbering как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToFontName">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.FontName как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToFontSize">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.FontSize как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToItalic">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.Italic как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToShadow">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.Shadow как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToStrikethrough">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.Strikethrough как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToType">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.Type как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToUnderline">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.Underline как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.AttachBackingFieldToVerticalAlignment">
            <summary>Присоединение делегатов для эмуляции StubIXLPhonetics.VerticalAlignment как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.BoldGet">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.BoldSetBoolean">
            <summary>Задает stub IXLFontBase.set_Bold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.ClearFont">
            <summary>Задает stub IXLPhonetics.ClearFont()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.ClearText">
            <summary>Задает stub IXLPhonetics.ClearText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#Add(System.String,System.Int32,System.Int32)">
            <summary>Задает заглушка IXLPhonetics.Add(String text, Int32 start, Int32 end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#ClearFont">
            <summary>Задает заглушка IXLPhonetics.ClearFont()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#ClearText">
            <summary>Задает заглушка IXLPhonetics.ClearText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetAlignment(ClosedXML.Excel.XLPhoneticAlignment)">
            <summary>Задает заглушка IXLPhonetics.SetAlignment(XLPhoneticAlignment phoneticAlignment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetBold">
            <summary>Задает заглушка IXLPhonetics.SetBold()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetBold(System.Boolean)">
            <summary>Задает заглушка IXLPhonetics.SetBold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetFontColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLPhonetics.SetFontColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetFontFamilyNumbering(ClosedXML.Excel.XLFontFamilyNumberingValues)">
            <summary>Задает заглушка IXLPhonetics.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetFontName(System.String)">
            <summary>Задает заглушка IXLPhonetics.SetFontName(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetFontSize(System.Double)">
            <summary>Задает заглушка IXLPhonetics.SetFontSize(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetItalic">
            <summary>Задает заглушка IXLPhonetics.SetItalic()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetItalic(System.Boolean)">
            <summary>Задает заглушка IXLPhonetics.SetItalic(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetShadow">
            <summary>Задает заглушка IXLPhonetics.SetShadow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetShadow(System.Boolean)">
            <summary>Задает заглушка IXLPhonetics.SetShadow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetStrikethrough">
            <summary>Задает заглушка IXLPhonetics.SetStrikethrough()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetStrikethrough(System.Boolean)">
            <summary>Задает заглушка IXLPhonetics.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetType(ClosedXML.Excel.XLPhoneticType)">
            <summary>Задает заглушка IXLPhonetics.SetType(XLPhoneticType phoneticType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetUnderline">
            <summary>Задает заглушка IXLPhonetics.SetUnderline()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetUnderline(ClosedXML.Excel.XLFontUnderlineValues)">
            <summary>Задает заглушка IXLPhonetics.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#SetVerticalAlignment(ClosedXML.Excel.XLFontVerticalTextAlignmentValues)">
            <summary>Задает заглушка IXLPhonetics.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.CountGet">
            <summary>Задает stub IXLPhonetics.get_Count()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.EqualsIXLPhonetics">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.FontColorGet">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.FontColorSetXLColor">
            <summary>Задает stub IXLFontBase.set_FontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.FontFamilyNumberingGet">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.FontFamilyNumberingSetXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFontBase.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.FontNameGet">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.FontNameSetString">
            <summary>Задает stub IXLFontBase.set_FontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.FontSizeGet">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.FontSizeSetDouble">
            <summary>Задает stub IXLFontBase.set_FontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.ItalicGet">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.ItalicSetBoolean">
            <summary>Задает stub IXLFontBase.set_Italic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetAlignmentXLPhoneticAlignment">
            <summary>Задает stub IXLPhonetics.SetAlignment(XLPhoneticAlignment phoneticAlignment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetBold">
            <summary>Задает stub IXLPhonetics.SetBold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetBoldBoolean">
            <summary>Задает stub IXLPhonetics.SetBold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetFontColorXLColor">
            <summary>Задает stub IXLPhonetics.SetFontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetFontFamilyNumberingXLFontFamilyNumberingValues">
            <summary>Задает stub IXLPhonetics.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetFontNameString">
            <summary>Задает stub IXLPhonetics.SetFontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetFontSizeDouble">
            <summary>Задает stub IXLPhonetics.SetFontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetItalic">
            <summary>Задает stub IXLPhonetics.SetItalic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetItalicBoolean">
            <summary>Задает stub IXLPhonetics.SetItalic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetShadow">
            <summary>Задает stub IXLPhonetics.SetShadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetShadowBoolean">
            <summary>Задает stub IXLPhonetics.SetShadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetStrikethrough">
            <summary>Задает stub IXLPhonetics.SetStrikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetStrikethroughBoolean">
            <summary>Задает stub IXLPhonetics.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetTypeXLPhoneticType">
            <summary>Задает stub IXLPhonetics.SetType(XLPhoneticType phoneticType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetUnderline">
            <summary>Задает stub IXLPhonetics.SetUnderline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetUnderlineXLFontUnderlineValues">
            <summary>Задает stub IXLPhonetics.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.SetVerticalAlignmentXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLPhonetics.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.ShadowGet">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.ShadowSetBoolean">
            <summary>Задает stub IXLFontBase.set_Shadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.StrikethroughGet">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.StrikethroughSetBoolean">
            <summary>Задает stub IXLFontBase.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLPhonetic}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPhonetics.global::System#IEquatable{ClosedXML#Excel#IXLPhonetics}#Equals(ClosedXML.Excel.IXLPhonetics)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.TypeGet">
            <summary>Задает stub IXLPhonetics.get_Type()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.TypeSetXLPhoneticType">
            <summary>Задает stub IXLPhonetics.set_Type(XLPhoneticType value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.UnderlineGet">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.UnderlineSetXLFontUnderlineValues">
            <summary>Задает stub IXLFontBase.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.VerticalAlignmentGet">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPhonetics.VerticalAlignmentSetXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFontBase.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#Alignment">
            <summary>Задает stub IXLPhonetics.get_Alignment()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#Bold">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#Count">
            <summary>Задает stub IXLPhonetics.get_Count()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#FontColor">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#FontFamilyNumbering">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#FontName">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#FontSize">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#Italic">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#Shadow">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#Strikethrough">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLPhonetics#Type">
            <summary>Задает stub IXLPhonetics.get_Type()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#Underline">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPhonetics.cxml::ClosedXML#Excel#IXLFontBase#VerticalAlignment">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPivotField">
            <summary>Тип заглушки ClosedXML.Excel.IXLPivotField</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPivotField</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.AddSubtotalXLSubtotalFunction">
            <summary>Задает stub IXLPivotField.AddSubtotal(XLSubtotalFunction value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.AttachBackingFieldToCustomName">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotField.CustomName как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.AttachBackingFieldToIncludeNewItemsInFilter">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotField.IncludeNewItemsInFilter как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.AttachBackingFieldToInsertBlankLines">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotField.InsertBlankLines как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.AttachBackingFieldToInsertPageBreaks">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotField.InsertPageBreaks как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.AttachBackingFieldToLayout">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotField.Layout как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.AttachBackingFieldToRepeatItemLabels">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotField.RepeatItemLabels как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.AttachBackingFieldToSharedStrings">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotField.SharedStrings как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.AttachBackingFieldToShowBlankItems">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotField.ShowBlankItems как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.AttachBackingFieldToSubtotalsAtTop">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotField.SubtotalsAtTop как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#AddSubtotal(ClosedXML.Excel.XLSubtotalFunction)">
            <summary>Задает заглушка IXLPivotField.AddSubtotal(XLSubtotalFunction value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetCustomName(System.String)">
            <summary>Задает заглушка IXLPivotField.SetCustomName(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetIncludeNewItemsInFilter">
            <summary>Задает заглушка IXLPivotField.SetIncludeNewItemsInFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetIncludeNewItemsInFilter(System.Boolean)">
            <summary>Задает заглушка IXLPivotField.SetIncludeNewItemsInFilter(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetInsertBlankLines">
            <summary>Задает заглушка IXLPivotField.SetInsertBlankLines()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetInsertBlankLines(System.Boolean)">
            <summary>Задает заглушка IXLPivotField.SetInsertBlankLines(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetInsertPageBreaks">
            <summary>Задает заглушка IXLPivotField.SetInsertPageBreaks()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetInsertPageBreaks(System.Boolean)">
            <summary>Задает заглушка IXLPivotField.SetInsertPageBreaks(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetLayout(ClosedXML.Excel.XLPivotLayout)">
            <summary>Задает заглушка IXLPivotField.SetLayout(XLPivotLayout value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetRepeatItemLabels">
            <summary>Задает заглушка IXLPivotField.SetRepeatItemLabels()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetRepeatItemLabels(System.Boolean)">
            <summary>Задает заглушка IXLPivotField.SetRepeatItemLabels(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetShowBlankItems">
            <summary>Задает заглушка IXLPivotField.SetShowBlankItems()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetShowBlankItems(System.Boolean)">
            <summary>Задает заглушка IXLPivotField.SetShowBlankItems(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetSubtotalsAtTop">
            <summary>Задает заглушка IXLPivotField.SetSubtotalsAtTop()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SetSubtotalsAtTop(System.Boolean)">
            <summary>Задает заглушка IXLPivotField.SetSubtotalsAtTop(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.CustomNameGet">
            <summary>Задает stub IXLPivotField.get_CustomName()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.CustomNameSetString">
            <summary>Задает stub IXLPivotField.set_CustomName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.IncludeNewItemsInFilterGet">
            <summary>Задает stub IXLPivotField.get_IncludeNewItemsInFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.IncludeNewItemsInFilterSetBoolean">
            <summary>Задает stub IXLPivotField.set_IncludeNewItemsInFilter(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.InsertBlankLinesGet">
            <summary>Задает stub IXLPivotField.get_InsertBlankLines()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.InsertBlankLinesSetBoolean">
            <summary>Задает stub IXLPivotField.set_InsertBlankLines(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.InsertPageBreaksGet">
            <summary>Задает stub IXLPivotField.get_InsertPageBreaks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.InsertPageBreaksSetBoolean">
            <summary>Задает stub IXLPivotField.set_InsertPageBreaks(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.LayoutGet">
            <summary>Задает stub IXLPivotField.get_Layout()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.LayoutSetXLPivotLayout">
            <summary>Задает stub IXLPivotField.set_Layout(XLPivotLayout value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.RepeatItemLabelsGet">
            <summary>Задает stub IXLPivotField.get_RepeatItemLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.RepeatItemLabelsSetBoolean">
            <summary>Задает stub IXLPivotField.set_RepeatItemLabels(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetCustomNameString">
            <summary>Задает stub IXLPivotField.SetCustomName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetIncludeNewItemsInFilter">
            <summary>Задает stub IXLPivotField.SetIncludeNewItemsInFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetIncludeNewItemsInFilterBoolean">
            <summary>Задает stub IXLPivotField.SetIncludeNewItemsInFilter(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetInsertBlankLines">
            <summary>Задает stub IXLPivotField.SetInsertBlankLines()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetInsertBlankLinesBoolean">
            <summary>Задает stub IXLPivotField.SetInsertBlankLines(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetInsertPageBreaks">
            <summary>Задает stub IXLPivotField.SetInsertPageBreaks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetInsertPageBreaksBoolean">
            <summary>Задает stub IXLPivotField.SetInsertPageBreaks(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetLayoutXLPivotLayout">
            <summary>Задает stub IXLPivotField.SetLayout(XLPivotLayout value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetRepeatItemLabels">
            <summary>Задает stub IXLPivotField.SetRepeatItemLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetRepeatItemLabelsBoolean">
            <summary>Задает stub IXLPivotField.SetRepeatItemLabels(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetShowBlankItems">
            <summary>Задает stub IXLPivotField.SetShowBlankItems()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetShowBlankItemsBoolean">
            <summary>Задает stub IXLPivotField.SetShowBlankItems(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetSubtotalsAtTop">
            <summary>Задает stub IXLPivotField.SetSubtotalsAtTop()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SetSubtotalsAtTopBoolean">
            <summary>Задает stub IXLPivotField.SetSubtotalsAtTop(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SharedStringsGet">
            <summary>Задает stub IXLPivotField.get_SharedStrings()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SharedStringsSetListOfString">
            <summary>Задает stub IXLPivotField.set_SharedStrings(List`1&lt;String&gt; value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.ShowBlankItemsGet">
            <summary>Задает stub IXLPivotField.get_ShowBlankItems()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.ShowBlankItemsSetBoolean">
            <summary>Задает stub IXLPivotField.set_ShowBlankItems(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SourceNameGet">
            <summary>Задает stub IXLPivotField.get_SourceName()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SubtotalsAtTopGet">
            <summary>Задает stub IXLPivotField.get_SubtotalsAtTop()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SubtotalsAtTopSetBoolean">
            <summary>Задает stub IXLPivotField.set_SubtotalsAtTop(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotField.SubtotalsGet">
            <summary>Задает stub IXLPivotField.get_Subtotals()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#CustomName">
            <summary>Задает stub IXLPivotField.get_CustomName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#IncludeNewItemsInFilter">
            <summary>Задает stub IXLPivotField.get_IncludeNewItemsInFilter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#InsertBlankLines">
            <summary>Задает stub IXLPivotField.get_InsertBlankLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#InsertPageBreaks">
            <summary>Задает stub IXLPivotField.get_InsertPageBreaks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#Layout">
            <summary>Задает stub IXLPivotField.get_Layout()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#RepeatItemLabels">
            <summary>Задает stub IXLPivotField.get_RepeatItemLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SharedStrings">
            <summary>Задает stub IXLPivotField.get_SharedStrings()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#ShowBlankItems">
            <summary>Задает stub IXLPivotField.get_ShowBlankItems()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SourceName">
            <summary>Задает stub IXLPivotField.get_SourceName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#Subtotals">
            <summary>Задает stub IXLPivotField.get_Subtotals()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotField.cxml::ClosedXML#Excel#IXLPivotField#SubtotalsAtTop">
            <summary>Задает stub IXLPivotField.get_SubtotalsAtTop()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPivotFields">
            <summary>Тип заглушки ClosedXML.Excel.IXLPivotFields</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotFields.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPivotFields</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotFields.AddString">
            <summary>Задает stub IXLPivotFields.Add(String sourceName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotFields.AddStringString">
            <summary>Задает stub IXLPivotFields.Add(String sourceName, String customName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotFields.Clear">
            <summary>Задает stub IXLPivotFields.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotFields.cxml::ClosedXML#Excel#IXLPivotFields#Add(System.String)">
            <summary>Задает заглушка IXLPivotFields.Add(String sourceName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotFields.cxml::ClosedXML#Excel#IXLPivotFields#Add(System.String,System.String)">
            <summary>Задает заглушка IXLPivotFields.Add(String sourceName, String customName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotFields.cxml::ClosedXML#Excel#IXLPivotFields#Clear">
            <summary>Задает заглушка IXLPivotFields.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotFields.cxml::ClosedXML#Excel#IXLPivotFields#IndexOf(ClosedXML.Excel.IXLPivotField)">
            <summary>Задает заглушка IXLPivotFields.IndexOf(IXLPivotField pf)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotFields.cxml::ClosedXML#Excel#IXLPivotFields#Remove(System.String)">
            <summary>Задает заглушка IXLPivotFields.Remove(String sourceName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotFields.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotFields.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotFields.IndexOfIXLPivotField">
            <summary>Задает stub IXLPivotFields.IndexOf(IXLPivotField pf)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotFields.RemoveString">
            <summary>Задает stub IXLPivotFields.Remove(String sourceName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotFields.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLPivotField}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotFields.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPivotTable">
            <summary>Тип заглушки ClosedXML.Excel.IXLPivotTable</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPivotTable</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.AllowMultipleFiltersGet">
            <summary>Задает stub IXLPivotTable.get_AllowMultipleFilters()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.AllowMultipleFiltersSetBoolean">
            <summary>Задает stub IXLPivotTable.set_AllowMultipleFilters(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToAllowMultipleFilters">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.AllowMultipleFilters как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToAutofitColumns">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.AutofitColumns как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToClassicPivotTableLayout">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ClassicPivotTableLayout как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToDescription">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.Description как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToDisplayCaptionsAndDropdowns">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.DisplayCaptionsAndDropdowns как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToDisplayItemLabels">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.DisplayItemLabels как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToEmptyCellReplacement">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.EmptyCellReplacement как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToEnableCellEditing">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.EnableCellEditing как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToEnableShowDetails">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.EnableShowDetails как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToErrorValueReplacement">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ErrorValueReplacement как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToFilterAreaOrder">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.FilterAreaOrder как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToFilterFieldsPageWrap">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.FilterFieldsPageWrap как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToFilteredItemsInSubtotals">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.FilteredItemsInSubtotals как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToItemsToRetainPerField">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ItemsToRetainPerField как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToMergeAndCenterWithLabels">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.MergeAndCenterWithLabels как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.Name как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToPreserveCellFormatting">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.PreserveCellFormatting как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToPrintExpandCollapsedButtons">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.PrintExpandCollapsedButtons как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToPrintTitles">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.PrintTitles как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToRefreshDataOnOpen">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.RefreshDataOnOpen как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToRepeatRowLabels">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.RepeatRowLabels как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToRowLabelIndent">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.RowLabelIndent как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToSaveSourceData">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.SaveSourceData как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowColumnHeaders">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowColumnHeaders как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowColumnStripes">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowColumnStripes как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowContextualTooltips">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowContextualTooltips как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowEmptyItemsOnColumns">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowEmptyItemsOnColumns как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowEmptyItemsOnRows">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowEmptyItemsOnRows как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowExpandCollapseButtons">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowExpandCollapseButtons как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowGrandTotalsColumns">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowGrandTotalsColumns как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowGrandTotalsRows">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowGrandTotalsRows как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowPropertiesInTooltips">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowPropertiesInTooltips как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowRowHeaders">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowRowHeaders как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowRowStripes">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowRowStripes как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToShowValuesRow">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.ShowValuesRow как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToSortFieldsAtoZ">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.SortFieldsAtoZ как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToSourceRange">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.SourceRange как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToSubtotals">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.Subtotals как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToTargetCell">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.TargetCell как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToTheme">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.Theme как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToTitle">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.Title как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.AttachBackingFieldToUseCustomListsForSorting">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotTable.UseCustomListsForSorting как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.AutofitColumnsGet">
            <summary>Задает stub IXLPivotTable.get_AutofitColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.AutofitColumnsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_AutofitColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ClassicPivotTableLayoutGet">
            <summary>Задает stub IXLPivotTable.get_ClassicPivotTableLayout()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ClassicPivotTableLayoutSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ClassicPivotTableLayout(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetAllowMultipleFilters">
            <summary>Задает заглушка IXLPivotTable.SetAllowMultipleFilters()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetAllowMultipleFilters(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetAllowMultipleFilters(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetAutofitColumns">
            <summary>Задает заглушка IXLPivotTable.SetAutofitColumns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetAutofitColumns(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetAutofitColumns(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetClassicPivotTableLayout">
            <summary>Задает заглушка IXLPivotTable.SetClassicPivotTableLayout()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetClassicPivotTableLayout(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetClassicPivotTableLayout(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetDescription(System.String)">
            <summary>Задает заглушка IXLPivotTable.SetDescription(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetDisplayCaptionsAndDropdowns">
            <summary>Задает заглушка IXLPivotTable.SetDisplayCaptionsAndDropdowns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetDisplayCaptionsAndDropdowns(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetDisplayCaptionsAndDropdowns(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetDisplayItemLabels">
            <summary>Задает заглушка IXLPivotTable.SetDisplayItemLabels()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetDisplayItemLabels(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetDisplayItemLabels(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetEmptyCellReplacement(System.String)">
            <summary>Задает заглушка IXLPivotTable.SetEmptyCellReplacement(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetEnableCellEditing">
            <summary>Задает заглушка IXLPivotTable.SetEnableCellEditing()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetEnableCellEditing(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetEnableCellEditing(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetEnableShowDetails">
            <summary>Задает заглушка IXLPivotTable.SetEnableShowDetails()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetEnableShowDetails(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetEnableShowDetails(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetErrorValueReplacement(System.String)">
            <summary>Задает заглушка IXLPivotTable.SetErrorValueReplacement(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetFilterAreaOrder(ClosedXML.Excel.XLFilterAreaOrder)">
            <summary>Задает заглушка IXLPivotTable.SetFilterAreaOrder(XLFilterAreaOrder value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetFilterFieldsPageWrap(System.Int32)">
            <summary>Задает заглушка IXLPivotTable.SetFilterFieldsPageWrap(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetFilteredItemsInSubtotals">
            <summary>Задает заглушка IXLPivotTable.SetFilteredItemsInSubtotals()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetFilteredItemsInSubtotals(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetFilteredItemsInSubtotals(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetInsertBlankLines">
            <summary>Задает заглушка IXLPivotTable.SetInsertBlankLines()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetInsertBlankLines(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetInsertBlankLines(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetItemsToRetainPerField(ClosedXML.Excel.XLItemsToRetain)">
            <summary>Задает заглушка IXLPivotTable.SetItemsToRetainPerField(XLItemsToRetain value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetLayout(ClosedXML.Excel.XLPivotLayout)">
            <summary>Задает заглушка IXLPivotTable.SetLayout(XLPivotLayout value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetMergeAndCenterWithLabels">
            <summary>Задает заглушка IXLPivotTable.SetMergeAndCenterWithLabels()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetMergeAndCenterWithLabels(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetMergeAndCenterWithLabels(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetName(System.String)">
            <summary>Задает заглушка IXLPivotTable.SetName(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetPreserveCellFormatting">
            <summary>Задает заглушка IXLPivotTable.SetPreserveCellFormatting()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetPreserveCellFormatting(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetPreserveCellFormatting(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetPrintExpandCollapsedButtons">
            <summary>Задает заглушка IXLPivotTable.SetPrintExpandCollapsedButtons()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetPrintExpandCollapsedButtons(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetPrintExpandCollapsedButtons(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetPrintTitles">
            <summary>Задает заглушка IXLPivotTable.SetPrintTitles()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetPrintTitles(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetPrintTitles(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetRefreshDataOnOpen">
            <summary>Задает заглушка IXLPivotTable.SetRefreshDataOnOpen()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetRefreshDataOnOpen(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetRefreshDataOnOpen(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetRepeatRowLabels">
            <summary>Задает заглушка IXLPivotTable.SetRepeatRowLabels()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetRepeatRowLabels(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetRepeatRowLabels(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetRowLabelIndent(System.Int32)">
            <summary>Задает заглушка IXLPivotTable.SetRowLabelIndent(Int32 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetSaveSourceData">
            <summary>Задает заглушка IXLPivotTable.SetSaveSourceData()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetSaveSourceData(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetSaveSourceData(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowColumnHeaders">
            <summary>Задает заглушка IXLPivotTable.SetShowColumnHeaders()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowColumnHeaders(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowColumnHeaders(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowColumnStripes">
            <summary>Задает заглушка IXLPivotTable.SetShowColumnStripes()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowColumnStripes(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowColumnStripes(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowContextualTooltips">
            <summary>Задает заглушка IXLPivotTable.SetShowContextualTooltips()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowContextualTooltips(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowContextualTooltips(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowEmptyItemsOnColumns">
            <summary>Задает заглушка IXLPivotTable.SetShowEmptyItemsOnColumns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowEmptyItemsOnColumns(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowEmptyItemsOnColumns(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowEmptyItemsOnRows">
            <summary>Задает заглушка IXLPivotTable.SetShowEmptyItemsOnRows()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowEmptyItemsOnRows(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowEmptyItemsOnRows(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowExpandCollapseButtons">
            <summary>Задает заглушка IXLPivotTable.SetShowExpandCollapseButtons()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowExpandCollapseButtons(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowExpandCollapseButtons(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowGrandTotalsColumns">
            <summary>Задает заглушка IXLPivotTable.SetShowGrandTotalsColumns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowGrandTotalsColumns(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowGrandTotalsColumns(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowGrandTotalsRows">
            <summary>Задает заглушка IXLPivotTable.SetShowGrandTotalsRows()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowGrandTotalsRows(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowGrandTotalsRows(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowPropertiesInTooltips">
            <summary>Задает заглушка IXLPivotTable.SetShowPropertiesInTooltips()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowPropertiesInTooltips(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowPropertiesInTooltips(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowRowHeaders">
            <summary>Задает заглушка IXLPivotTable.SetShowRowHeaders()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowRowHeaders(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowRowHeaders(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowRowStripes">
            <summary>Задает заглушка IXLPivotTable.SetShowRowStripes()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowRowStripes(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowRowStripes(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowValuesRow">
            <summary>Задает заглушка IXLPivotTable.SetShowValuesRow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetShowValuesRow(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetShowValuesRow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetSortFieldsAtoZ">
            <summary>Задает заглушка IXLPivotTable.SetSortFieldsAtoZ()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetSortFieldsAtoZ(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetSortFieldsAtoZ(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetSubtotals(ClosedXML.Excel.XLPivotSubtotals)">
            <summary>Задает заглушка IXLPivotTable.SetSubtotals(XLPivotSubtotals value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetTitle(System.String)">
            <summary>Задает заглушка IXLPivotTable.SetTitle(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetUseCustomListsForSorting">
            <summary>Задает заглушка IXLPivotTable.SetUseCustomListsForSorting()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SetUseCustomListsForSorting(System.Boolean)">
            <summary>Задает заглушка IXLPivotTable.SetUseCustomListsForSorting(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ColumnLabelsGet">
            <summary>Задает stub IXLPivotTable.get_ColumnLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.DescriptionGet">
            <summary>Задает stub IXLPivotTable.get_Description()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.DescriptionSetString">
            <summary>Задает stub IXLPivotTable.set_Description(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.DisplayCaptionsAndDropdownsGet">
            <summary>Задает stub IXLPivotTable.get_DisplayCaptionsAndDropdowns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.DisplayCaptionsAndDropdownsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_DisplayCaptionsAndDropdowns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.DisplayItemLabelsGet">
            <summary>Задает stub IXLPivotTable.get_DisplayItemLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.DisplayItemLabelsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_DisplayItemLabels(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.EmptyCellReplacementGet">
            <summary>Задает stub IXLPivotTable.get_EmptyCellReplacement()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.EmptyCellReplacementSetString">
            <summary>Задает stub IXLPivotTable.set_EmptyCellReplacement(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.EnableCellEditingGet">
            <summary>Задает stub IXLPivotTable.get_EnableCellEditing()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.EnableCellEditingSetBoolean">
            <summary>Задает stub IXLPivotTable.set_EnableCellEditing(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.EnableShowDetailsGet">
            <summary>Задает stub IXLPivotTable.get_EnableShowDetails()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.EnableShowDetailsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_EnableShowDetails(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ErrorValueReplacementGet">
            <summary>Задает stub IXLPivotTable.get_ErrorValueReplacement()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ErrorValueReplacementSetString">
            <summary>Задает stub IXLPivotTable.set_ErrorValueReplacement(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.FieldsGet">
            <summary>Задает stub IXLPivotTable.get_Fields()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.FilterAreaOrderGet">
            <summary>Задает stub IXLPivotTable.get_FilterAreaOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.FilterAreaOrderSetXLFilterAreaOrder">
            <summary>Задает stub IXLPivotTable.set_FilterAreaOrder(XLFilterAreaOrder value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.FilterFieldsPageWrapGet">
            <summary>Задает stub IXLPivotTable.get_FilterFieldsPageWrap()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.FilterFieldsPageWrapSetInt32">
            <summary>Задает stub IXLPivotTable.set_FilterFieldsPageWrap(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.FilteredItemsInSubtotalsGet">
            <summary>Задает stub IXLPivotTable.get_FilteredItemsInSubtotals()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.FilteredItemsInSubtotalsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_FilteredItemsInSubtotals(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.InsertBlankLinesSetBoolean">
            <summary>Задает stub IXLPivotTable.set_InsertBlankLines(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ItemsToRetainPerFieldGet">
            <summary>Задает stub IXLPivotTable.get_ItemsToRetainPerField()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ItemsToRetainPerFieldSetXLItemsToRetain">
            <summary>Задает stub IXLPivotTable.set_ItemsToRetainPerField(XLItemsToRetain value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.LayoutSetXLPivotLayout">
            <summary>Задает stub IXLPivotTable.set_Layout(XLPivotLayout value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.MergeAndCenterWithLabelsGet">
            <summary>Задает stub IXLPivotTable.get_MergeAndCenterWithLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.MergeAndCenterWithLabelsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_MergeAndCenterWithLabels(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.NameGet">
            <summary>Задает stub IXLPivotTable.get_Name()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.NameSetString">
            <summary>Задает stub IXLPivotTable.set_Name(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.PreserveCellFormattingGet">
            <summary>Задает stub IXLPivotTable.get_PreserveCellFormatting()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.PreserveCellFormattingSetBoolean">
            <summary>Задает stub IXLPivotTable.set_PreserveCellFormatting(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.PrintExpandCollapsedButtonsGet">
            <summary>Задает stub IXLPivotTable.get_PrintExpandCollapsedButtons()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.PrintExpandCollapsedButtonsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_PrintExpandCollapsedButtons(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.PrintTitlesGet">
            <summary>Задает stub IXLPivotTable.get_PrintTitles()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.PrintTitlesSetBoolean">
            <summary>Задает stub IXLPivotTable.set_PrintTitles(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.RefreshDataOnOpenGet">
            <summary>Задает stub IXLPivotTable.get_RefreshDataOnOpen()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.RefreshDataOnOpenSetBoolean">
            <summary>Задает stub IXLPivotTable.set_RefreshDataOnOpen(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.RepeatRowLabelsGet">
            <summary>Задает stub IXLPivotTable.get_RepeatRowLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.RepeatRowLabelsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_RepeatRowLabels(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ReportFiltersGet">
            <summary>Задает stub IXLPivotTable.get_ReportFilters()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.RowLabelIndentGet">
            <summary>Задает stub IXLPivotTable.get_RowLabelIndent()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.RowLabelIndentSetInt32">
            <summary>Задает stub IXLPivotTable.set_RowLabelIndent(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.RowLabelsGet">
            <summary>Задает stub IXLPivotTable.get_RowLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SaveSourceDataGet">
            <summary>Задает stub IXLPivotTable.get_SaveSourceData()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SaveSourceDataSetBoolean">
            <summary>Задает stub IXLPivotTable.set_SaveSourceData(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetAllowMultipleFilters">
            <summary>Задает stub IXLPivotTable.SetAllowMultipleFilters()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetAllowMultipleFiltersBoolean">
            <summary>Задает stub IXLPivotTable.SetAllowMultipleFilters(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetAutofitColumns">
            <summary>Задает stub IXLPivotTable.SetAutofitColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetAutofitColumnsBoolean">
            <summary>Задает stub IXLPivotTable.SetAutofitColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetClassicPivotTableLayout">
            <summary>Задает stub IXLPivotTable.SetClassicPivotTableLayout()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetClassicPivotTableLayoutBoolean">
            <summary>Задает stub IXLPivotTable.SetClassicPivotTableLayout(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetDescriptionString">
            <summary>Задает stub IXLPivotTable.SetDescription(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetDisplayCaptionsAndDropdowns">
            <summary>Задает stub IXLPivotTable.SetDisplayCaptionsAndDropdowns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetDisplayCaptionsAndDropdownsBoolean">
            <summary>Задает stub IXLPivotTable.SetDisplayCaptionsAndDropdowns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetDisplayItemLabels">
            <summary>Задает stub IXLPivotTable.SetDisplayItemLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetDisplayItemLabelsBoolean">
            <summary>Задает stub IXLPivotTable.SetDisplayItemLabels(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetEmptyCellReplacementString">
            <summary>Задает stub IXLPivotTable.SetEmptyCellReplacement(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetEnableCellEditing">
            <summary>Задает stub IXLPivotTable.SetEnableCellEditing()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetEnableCellEditingBoolean">
            <summary>Задает stub IXLPivotTable.SetEnableCellEditing(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetEnableShowDetails">
            <summary>Задает stub IXLPivotTable.SetEnableShowDetails()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetEnableShowDetailsBoolean">
            <summary>Задает stub IXLPivotTable.SetEnableShowDetails(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetErrorValueReplacementString">
            <summary>Задает stub IXLPivotTable.SetErrorValueReplacement(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetFilterAreaOrderXLFilterAreaOrder">
            <summary>Задает stub IXLPivotTable.SetFilterAreaOrder(XLFilterAreaOrder value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetFilterFieldsPageWrapInt32">
            <summary>Задает stub IXLPivotTable.SetFilterFieldsPageWrap(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetFilteredItemsInSubtotals">
            <summary>Задает stub IXLPivotTable.SetFilteredItemsInSubtotals()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetFilteredItemsInSubtotalsBoolean">
            <summary>Задает stub IXLPivotTable.SetFilteredItemsInSubtotals(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetInsertBlankLines">
            <summary>Задает stub IXLPivotTable.SetInsertBlankLines()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetInsertBlankLinesBoolean">
            <summary>Задает stub IXLPivotTable.SetInsertBlankLines(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetItemsToRetainPerFieldXLItemsToRetain">
            <summary>Задает stub IXLPivotTable.SetItemsToRetainPerField(XLItemsToRetain value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetLayoutXLPivotLayout">
            <summary>Задает stub IXLPivotTable.SetLayout(XLPivotLayout value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetMergeAndCenterWithLabels">
            <summary>Задает stub IXLPivotTable.SetMergeAndCenterWithLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetMergeAndCenterWithLabelsBoolean">
            <summary>Задает stub IXLPivotTable.SetMergeAndCenterWithLabels(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetNameString">
            <summary>Задает stub IXLPivotTable.SetName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetPreserveCellFormatting">
            <summary>Задает stub IXLPivotTable.SetPreserveCellFormatting()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetPreserveCellFormattingBoolean">
            <summary>Задает stub IXLPivotTable.SetPreserveCellFormatting(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetPrintExpandCollapsedButtons">
            <summary>Задает stub IXLPivotTable.SetPrintExpandCollapsedButtons()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetPrintExpandCollapsedButtonsBoolean">
            <summary>Задает stub IXLPivotTable.SetPrintExpandCollapsedButtons(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetPrintTitles">
            <summary>Задает stub IXLPivotTable.SetPrintTitles()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetPrintTitlesBoolean">
            <summary>Задает stub IXLPivotTable.SetPrintTitles(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetRefreshDataOnOpen">
            <summary>Задает stub IXLPivotTable.SetRefreshDataOnOpen()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetRefreshDataOnOpenBoolean">
            <summary>Задает stub IXLPivotTable.SetRefreshDataOnOpen(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetRepeatRowLabels">
            <summary>Задает stub IXLPivotTable.SetRepeatRowLabels()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetRepeatRowLabelsBoolean">
            <summary>Задает stub IXLPivotTable.SetRepeatRowLabels(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetRowLabelIndentInt32">
            <summary>Задает stub IXLPivotTable.SetRowLabelIndent(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetSaveSourceData">
            <summary>Задает stub IXLPivotTable.SetSaveSourceData()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetSaveSourceDataBoolean">
            <summary>Задает stub IXLPivotTable.SetSaveSourceData(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowColumnHeaders">
            <summary>Задает stub IXLPivotTable.SetShowColumnHeaders()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowColumnHeadersBoolean">
            <summary>Задает stub IXLPivotTable.SetShowColumnHeaders(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowColumnStripes">
            <summary>Задает stub IXLPivotTable.SetShowColumnStripes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowColumnStripesBoolean">
            <summary>Задает stub IXLPivotTable.SetShowColumnStripes(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowContextualTooltips">
            <summary>Задает stub IXLPivotTable.SetShowContextualTooltips()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowContextualTooltipsBoolean">
            <summary>Задает stub IXLPivotTable.SetShowContextualTooltips(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowEmptyItemsOnColumns">
            <summary>Задает stub IXLPivotTable.SetShowEmptyItemsOnColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowEmptyItemsOnColumnsBoolean">
            <summary>Задает stub IXLPivotTable.SetShowEmptyItemsOnColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowEmptyItemsOnRows">
            <summary>Задает stub IXLPivotTable.SetShowEmptyItemsOnRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowEmptyItemsOnRowsBoolean">
            <summary>Задает stub IXLPivotTable.SetShowEmptyItemsOnRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowExpandCollapseButtons">
            <summary>Задает stub IXLPivotTable.SetShowExpandCollapseButtons()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowExpandCollapseButtonsBoolean">
            <summary>Задает stub IXLPivotTable.SetShowExpandCollapseButtons(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowGrandTotalsColumns">
            <summary>Задает stub IXLPivotTable.SetShowGrandTotalsColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowGrandTotalsColumnsBoolean">
            <summary>Задает stub IXLPivotTable.SetShowGrandTotalsColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowGrandTotalsRows">
            <summary>Задает stub IXLPivotTable.SetShowGrandTotalsRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowGrandTotalsRowsBoolean">
            <summary>Задает stub IXLPivotTable.SetShowGrandTotalsRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowPropertiesInTooltips">
            <summary>Задает stub IXLPivotTable.SetShowPropertiesInTooltips()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowPropertiesInTooltipsBoolean">
            <summary>Задает stub IXLPivotTable.SetShowPropertiesInTooltips(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowRowHeaders">
            <summary>Задает stub IXLPivotTable.SetShowRowHeaders()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowRowHeadersBoolean">
            <summary>Задает stub IXLPivotTable.SetShowRowHeaders(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowRowStripes">
            <summary>Задает stub IXLPivotTable.SetShowRowStripes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowRowStripesBoolean">
            <summary>Задает stub IXLPivotTable.SetShowRowStripes(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowValuesRow">
            <summary>Задает stub IXLPivotTable.SetShowValuesRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetShowValuesRowBoolean">
            <summary>Задает stub IXLPivotTable.SetShowValuesRow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetSortFieldsAtoZ">
            <summary>Задает stub IXLPivotTable.SetSortFieldsAtoZ()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetSortFieldsAtoZBoolean">
            <summary>Задает stub IXLPivotTable.SetSortFieldsAtoZ(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetSubtotalsXLPivotSubtotals">
            <summary>Задает stub IXLPivotTable.SetSubtotals(XLPivotSubtotals value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetTitleString">
            <summary>Задает stub IXLPivotTable.SetTitle(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetUseCustomListsForSorting">
            <summary>Задает stub IXLPivotTable.SetUseCustomListsForSorting()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SetUseCustomListsForSortingBoolean">
            <summary>Задает stub IXLPivotTable.SetUseCustomListsForSorting(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowColumnHeadersGet">
            <summary>Задает stub IXLPivotTable.get_ShowColumnHeaders()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowColumnHeadersSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowColumnHeaders(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowColumnStripesGet">
            <summary>Задает stub IXLPivotTable.get_ShowColumnStripes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowColumnStripesSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowColumnStripes(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowContextualTooltipsGet">
            <summary>Задает stub IXLPivotTable.get_ShowContextualTooltips()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowContextualTooltipsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowContextualTooltips(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowEmptyItemsOnColumnsGet">
            <summary>Задает stub IXLPivotTable.get_ShowEmptyItemsOnColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowEmptyItemsOnColumnsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowEmptyItemsOnColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowEmptyItemsOnRowsGet">
            <summary>Задает stub IXLPivotTable.get_ShowEmptyItemsOnRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowEmptyItemsOnRowsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowEmptyItemsOnRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowExpandCollapseButtonsGet">
            <summary>Задает stub IXLPivotTable.get_ShowExpandCollapseButtons()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowExpandCollapseButtonsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowExpandCollapseButtons(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowGrandTotalsColumnsGet">
            <summary>Задает stub IXLPivotTable.get_ShowGrandTotalsColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowGrandTotalsColumnsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowGrandTotalsColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowGrandTotalsRowsGet">
            <summary>Задает stub IXLPivotTable.get_ShowGrandTotalsRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowGrandTotalsRowsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowGrandTotalsRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowPropertiesInTooltipsGet">
            <summary>Задает stub IXLPivotTable.get_ShowPropertiesInTooltips()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowPropertiesInTooltipsSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowPropertiesInTooltips(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowRowHeadersGet">
            <summary>Задает stub IXLPivotTable.get_ShowRowHeaders()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowRowHeadersSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowRowHeaders(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowRowStripesGet">
            <summary>Задает stub IXLPivotTable.get_ShowRowStripes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowRowStripesSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowRowStripes(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowValuesRowGet">
            <summary>Задает stub IXLPivotTable.get_ShowValuesRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ShowValuesRowSetBoolean">
            <summary>Задает stub IXLPivotTable.set_ShowValuesRow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SortFieldsAtoZGet">
            <summary>Задает stub IXLPivotTable.get_SortFieldsAtoZ()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SortFieldsAtoZSetBoolean">
            <summary>Задает stub IXLPivotTable.set_SortFieldsAtoZ(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SourceRangeGet">
            <summary>Задает stub IXLPivotTable.get_SourceRange()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SourceRangeSetIXLRange">
            <summary>Задает stub IXLPivotTable.set_SourceRange(IXLRange value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SubtotalsGet">
            <summary>Задает stub IXLPivotTable.get_Subtotals()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.SubtotalsSetXLPivotSubtotals">
            <summary>Задает stub IXLPivotTable.set_Subtotals(XLPivotSubtotals value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.TargetCellGet">
            <summary>Задает stub IXLPivotTable.get_TargetCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.TargetCellSetIXLCell">
            <summary>Задает stub IXLPivotTable.set_TargetCell(IXLCell value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ThemeGet">
            <summary>Задает stub IXLPivotTable.get_Theme()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ThemeSetXLPivotTableTheme">
            <summary>Задает stub IXLPivotTable.set_Theme(XLPivotTableTheme value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.TitleGet">
            <summary>Задает stub IXLPivotTable.get_Title()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.TitleSetString">
            <summary>Задает stub IXLPivotTable.set_Title(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.UseCustomListsForSortingGet">
            <summary>Задает stub IXLPivotTable.get_UseCustomListsForSorting()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.UseCustomListsForSortingSetBoolean">
            <summary>Задает stub IXLPivotTable.set_UseCustomListsForSorting(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTable.ValuesGet">
            <summary>Задает stub IXLPivotTable.get_Values()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#AllowMultipleFilters">
            <summary>Задает stub IXLPivotTable.get_AllowMultipleFilters()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#AutofitColumns">
            <summary>Задает stub IXLPivotTable.get_AutofitColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ClassicPivotTableLayout">
            <summary>Задает stub IXLPivotTable.get_ClassicPivotTableLayout()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ColumnLabels">
            <summary>Задает stub IXLPivotTable.get_ColumnLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#Description">
            <summary>Задает stub IXLPivotTable.get_Description()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#DisplayCaptionsAndDropdowns">
            <summary>Задает stub IXLPivotTable.get_DisplayCaptionsAndDropdowns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#DisplayItemLabels">
            <summary>Задает stub IXLPivotTable.get_DisplayItemLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#EmptyCellReplacement">
            <summary>Задает stub IXLPivotTable.get_EmptyCellReplacement()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#EnableCellEditing">
            <summary>Задает stub IXLPivotTable.get_EnableCellEditing()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#EnableShowDetails">
            <summary>Задает stub IXLPivotTable.get_EnableShowDetails()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ErrorValueReplacement">
            <summary>Задает stub IXLPivotTable.get_ErrorValueReplacement()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#Fields">
            <summary>Задает stub IXLPivotTable.get_Fields()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#FilterAreaOrder">
            <summary>Задает stub IXLPivotTable.get_FilterAreaOrder()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#FilterFieldsPageWrap">
            <summary>Задает stub IXLPivotTable.get_FilterFieldsPageWrap()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#FilteredItemsInSubtotals">
            <summary>Задает stub IXLPivotTable.get_FilteredItemsInSubtotals()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#InsertBlankLines">
            <summary>Задает stub IXLPivotTable.set_InsertBlankLines(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ItemsToRetainPerField">
            <summary>Задает stub IXLPivotTable.get_ItemsToRetainPerField()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#Layout">
            <summary>Задает stub IXLPivotTable.set_Layout(XLPivotLayout value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#MergeAndCenterWithLabels">
            <summary>Задает stub IXLPivotTable.get_MergeAndCenterWithLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#Name">
            <summary>Задает stub IXLPivotTable.get_Name()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#PreserveCellFormatting">
            <summary>Задает stub IXLPivotTable.get_PreserveCellFormatting()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#PrintExpandCollapsedButtons">
            <summary>Задает stub IXLPivotTable.get_PrintExpandCollapsedButtons()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#PrintTitles">
            <summary>Задает stub IXLPivotTable.get_PrintTitles()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#RefreshDataOnOpen">
            <summary>Задает stub IXLPivotTable.get_RefreshDataOnOpen()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#RepeatRowLabels">
            <summary>Задает stub IXLPivotTable.get_RepeatRowLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ReportFilters">
            <summary>Задает stub IXLPivotTable.get_ReportFilters()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#RowLabelIndent">
            <summary>Задает stub IXLPivotTable.get_RowLabelIndent()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#RowLabels">
            <summary>Задает stub IXLPivotTable.get_RowLabels()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SaveSourceData">
            <summary>Задает stub IXLPivotTable.get_SaveSourceData()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowColumnHeaders">
            <summary>Задает stub IXLPivotTable.get_ShowColumnHeaders()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowColumnStripes">
            <summary>Задает stub IXLPivotTable.get_ShowColumnStripes()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowContextualTooltips">
            <summary>Задает stub IXLPivotTable.get_ShowContextualTooltips()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowEmptyItemsOnColumns">
            <summary>Задает stub IXLPivotTable.get_ShowEmptyItemsOnColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowEmptyItemsOnRows">
            <summary>Задает stub IXLPivotTable.get_ShowEmptyItemsOnRows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowExpandCollapseButtons">
            <summary>Задает stub IXLPivotTable.get_ShowExpandCollapseButtons()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowGrandTotalsColumns">
            <summary>Задает stub IXLPivotTable.get_ShowGrandTotalsColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowGrandTotalsRows">
            <summary>Задает stub IXLPivotTable.get_ShowGrandTotalsRows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowPropertiesInTooltips">
            <summary>Задает stub IXLPivotTable.get_ShowPropertiesInTooltips()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowRowHeaders">
            <summary>Задает stub IXLPivotTable.get_ShowRowHeaders()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowRowStripes">
            <summary>Задает stub IXLPivotTable.get_ShowRowStripes()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#ShowValuesRow">
            <summary>Задает stub IXLPivotTable.get_ShowValuesRow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SortFieldsAtoZ">
            <summary>Задает stub IXLPivotTable.get_SortFieldsAtoZ()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#SourceRange">
            <summary>Задает stub IXLPivotTable.get_SourceRange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#Subtotals">
            <summary>Задает stub IXLPivotTable.get_Subtotals()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#TargetCell">
            <summary>Задает stub IXLPivotTable.get_TargetCell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#Theme">
            <summary>Задает stub IXLPivotTable.get_Theme()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#Title">
            <summary>Задает stub IXLPivotTable.get_Title()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#UseCustomListsForSorting">
            <summary>Задает stub IXLPivotTable.get_UseCustomListsForSorting()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotTable.cxml::ClosedXML#Excel#IXLPivotTable#Values">
            <summary>Задает stub IXLPivotTable.get_Values()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPivotTables">
            <summary>Тип заглушки ClosedXML.Excel.IXLPivotTables</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTables.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPivotTables</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTables.AddNewStringIXLCellIXLRange">
            <summary>Задает stub IXLPivotTables.AddNew(String name, IXLCell target, IXLRange source)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTables.AddStringIXLPivotTable">
            <summary>Задает stub IXLPivotTables.Add(String name, IXLPivotTable pivotTable)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTables.cxml::ClosedXML#Excel#IXLPivotTables#Add(System.String,ClosedXML.Excel.IXLPivotTable)">
            <summary>Задает заглушка IXLPivotTables.Add(String name, IXLPivotTable pivotTable)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTables.cxml::ClosedXML#Excel#IXLPivotTables#AddNew(System.String,ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLPivotTables.AddNew(String name, IXLCell target, IXLRange source)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTables.cxml::ClosedXML#Excel#IXLPivotTables#Delete(System.String)">
            <summary>Задает заглушка IXLPivotTables.Delete(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTables.cxml::ClosedXML#Excel#IXLPivotTables#DeleteAll">
            <summary>Задает заглушка IXLPivotTables.DeleteAll()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTables.cxml::ClosedXML#Excel#IXLPivotTables#PivotTable(System.String)">
            <summary>Задает заглушка IXLPivotTables.PivotTable(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTables.DeleteAll">
            <summary>Задает stub IXLPivotTables.DeleteAll()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTables.DeleteString">
            <summary>Задает stub IXLPivotTables.Delete(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTables.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTables.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotTables.PivotTableString">
            <summary>Задает stub IXLPivotTables.PivotTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTables.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLPivotTable}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotTables.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPivotValue">
            <summary>Тип заглушки ClosedXML.Excel.IXLPivotValue</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPivotValue</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.AttachBackingFieldToBaseField">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotValue.BaseField как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.AttachBackingFieldToBaseItem">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotValue.BaseItem как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.AttachBackingFieldToCalculation">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotValue.Calculation как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.AttachBackingFieldToCalculationItem">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotValue.CalculationItem как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.AttachBackingFieldToCustomName">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotValue.CustomName как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.AttachBackingFieldToSummaryFormula">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotValue.SummaryFormula как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.BaseFieldGet">
            <summary>Задает stub IXLPivotValue.get_BaseField()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.BaseFieldSetString">
            <summary>Задает stub IXLPivotValue.set_BaseField(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.BaseItemGet">
            <summary>Задает stub IXLPivotValue.get_BaseItem()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.BaseItemSetString">
            <summary>Задает stub IXLPivotValue.set_BaseItem(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.CalculationGet">
            <summary>Задает stub IXLPivotValue.get_Calculation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.CalculationItemGet">
            <summary>Задает stub IXLPivotValue.get_CalculationItem()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.CalculationItemSetXLPivotCalculationItem">
            <summary>Задает stub IXLPivotValue.set_CalculationItem(XLPivotCalculationItem value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.CalculationSetXLPivotCalculation">
            <summary>Задает stub IXLPivotValue.set_Calculation(XLPivotCalculation value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#SetBaseField(System.String)">
            <summary>Задает заглушка IXLPivotValue.SetBaseField(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#SetBaseItem(System.String)">
            <summary>Задает заглушка IXLPivotValue.SetBaseItem(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#SetCalculation(ClosedXML.Excel.XLPivotCalculation)">
            <summary>Задает заглушка IXLPivotValue.SetCalculation(XLPivotCalculation value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#SetCalculationItem(ClosedXML.Excel.XLPivotCalculationItem)">
            <summary>Задает заглушка IXLPivotValue.SetCalculationItem(XLPivotCalculationItem value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#SetSummaryFormula(ClosedXML.Excel.XLPivotSummary)">
            <summary>Задает заглушка IXLPivotValue.SetSummaryFormula(XLPivotSummary value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#ShowAsDifferenceFrom(System.String)">
            <summary>Задает заглушка IXLPivotValue.ShowAsDifferenceFrom(String fieldSourceName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#ShowAsIndex">
            <summary>Задает заглушка IXLPivotValue.ShowAsIndex()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#ShowAsNormal">
            <summary>Задает заглушка IXLPivotValue.ShowAsNormal()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#ShowAsPctDifferenceFrom(System.String)">
            <summary>Задает заглушка IXLPivotValue.ShowAsPctDifferenceFrom(String fieldSourceName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#ShowAsPctFrom(System.String)">
            <summary>Задает заглушка IXLPivotValue.ShowAsPctFrom(String fieldSourceName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#ShowAsPctOfColumn">
            <summary>Задает заглушка IXLPivotValue.ShowAsPctOfColumn()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#ShowAsPctOfRow">
            <summary>Задает заглушка IXLPivotValue.ShowAsPctOfRow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#ShowAsPctOfTotal">
            <summary>Задает заглушка IXLPivotValue.ShowAsPctOfTotal()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#ShowAsRunningTotalIn(System.String)">
            <summary>Задает заглушка IXLPivotValue.ShowAsRunningTotalIn(String fieldSourceName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.CustomNameGet">
            <summary>Задает stub IXLPivotValue.get_CustomName()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.CustomNameSetString">
            <summary>Задает stub IXLPivotValue.set_CustomName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.NumberFormatGet">
            <summary>Задает stub IXLPivotValue.get_NumberFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.SetBaseFieldString">
            <summary>Задает stub IXLPivotValue.SetBaseField(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.SetBaseItemString">
            <summary>Задает stub IXLPivotValue.SetBaseItem(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.SetCalculationItemXLPivotCalculationItem">
            <summary>Задает stub IXLPivotValue.SetCalculationItem(XLPivotCalculationItem value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.SetCalculationXLPivotCalculation">
            <summary>Задает stub IXLPivotValue.SetCalculation(XLPivotCalculation value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.SetSummaryFormulaXLPivotSummary">
            <summary>Задает stub IXLPivotValue.SetSummaryFormula(XLPivotSummary value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.ShowAsDifferenceFromString">
            <summary>Задает stub IXLPivotValue.ShowAsDifferenceFrom(String fieldSourceName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.ShowAsIndex">
            <summary>Задает stub IXLPivotValue.ShowAsIndex()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.ShowAsNormal">
            <summary>Задает stub IXLPivotValue.ShowAsNormal()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.ShowAsPctDifferenceFromString">
            <summary>Задает stub IXLPivotValue.ShowAsPctDifferenceFrom(String fieldSourceName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.ShowAsPctFromString">
            <summary>Задает stub IXLPivotValue.ShowAsPctFrom(String fieldSourceName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.ShowAsPctOfColumn">
            <summary>Задает stub IXLPivotValue.ShowAsPctOfColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.ShowAsPctOfRow">
            <summary>Задает stub IXLPivotValue.ShowAsPctOfRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.ShowAsPctOfTotal">
            <summary>Задает stub IXLPivotValue.ShowAsPctOfTotal()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.ShowAsRunningTotalInString">
            <summary>Задает stub IXLPivotValue.ShowAsRunningTotalIn(String fieldSourceName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.SourceNameGet">
            <summary>Задает stub IXLPivotValue.get_SourceName()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.SummaryFormulaGet">
            <summary>Задает stub IXLPivotValue.get_SummaryFormula()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValue.SummaryFormulaSetXLPivotSummary">
            <summary>Задает stub IXLPivotValue.set_SummaryFormula(XLPivotSummary value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#BaseField">
            <summary>Задает stub IXLPivotValue.get_BaseField()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#BaseItem">
            <summary>Задает stub IXLPivotValue.get_BaseItem()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#Calculation">
            <summary>Задает stub IXLPivotValue.get_Calculation()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#CalculationItem">
            <summary>Задает stub IXLPivotValue.get_CalculationItem()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#CustomName">
            <summary>Задает stub IXLPivotValue.get_CustomName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#NumberFormat">
            <summary>Задает stub IXLPivotValue.get_NumberFormat()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#SourceName">
            <summary>Задает stub IXLPivotValue.get_SourceName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValue.cxml::ClosedXML#Excel#IXLPivotValue#SummaryFormula">
            <summary>Задает stub IXLPivotValue.get_SummaryFormula()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPivotValueCombination">
            <summary>Тип заглушки ClosedXML.Excel.IXLPivotValueCombination</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValueCombination.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPivotValueCombination</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValueCombination.AndNext">
            <summary>Задает stub IXLPivotValueCombination.AndNext()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValueCombination.AndPrevious">
            <summary>Задает stub IXLPivotValueCombination.AndPrevious()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValueCombination.AndString">
            <summary>Задает stub IXLPivotValueCombination.And(String item)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValueCombination.cxml::ClosedXML#Excel#IXLPivotValueCombination#And(System.String)">
            <summary>Задает заглушка IXLPivotValueCombination.And(String item)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValueCombination.cxml::ClosedXML#Excel#IXLPivotValueCombination#AndNext">
            <summary>Задает заглушка IXLPivotValueCombination.AndNext()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValueCombination.cxml::ClosedXML#Excel#IXLPivotValueCombination#AndPrevious">
            <summary>Задает заглушка IXLPivotValueCombination.AndPrevious()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat">
            <summary>Тип заглушки ClosedXML.Excel.IXLPivotValueFormat</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPivotValueFormat</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.AttachBackingFieldToFormat">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotValueFormat.Format как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.AttachBackingFieldToNumberFormatId">
            <summary>Присоединение делегатов для эмуляции StubIXLPivotValueFormat.NumberFormatId как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.cxml::ClosedXML#Excel#IXLPivotValueFormat#SetFormat(System.String)">
            <summary>Задает заглушка IXLPivotValueFormat.SetFormat(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.cxml::ClosedXML#Excel#IXLPivotValueFormat#SetNumberFormatId(System.Int32)">
            <summary>Задает заглушка IXLPivotValueFormat.SetNumberFormatId(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.FormatGet">
            <summary>Задает stub IXLNumberFormatBase.get_Format()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.FormatSetString">
            <summary>Задает stub IXLNumberFormatBase.set_Format(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.NumberFormatIdGet">
            <summary>Задает stub IXLNumberFormatBase.get_NumberFormatId()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.NumberFormatIdSetInt32">
            <summary>Задает stub IXLNumberFormatBase.set_NumberFormatId(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.SetFormatString">
            <summary>Задает stub IXLPivotValueFormat.SetFormat(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.SetNumberFormatIdInt32">
            <summary>Задает stub IXLPivotValueFormat.SetNumberFormatId(Int32 value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.cxml::ClosedXML#Excel#IXLNumberFormatBase#Format">
            <summary>Задает stub IXLNumberFormatBase.get_Format()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLPivotValueFormat.cxml::ClosedXML#Excel#IXLNumberFormatBase#NumberFormatId">
            <summary>Задает stub IXLNumberFormatBase.get_NumberFormatId()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPivotValues">
            <summary>Тип заглушки ClosedXML.Excel.IXLPivotValues</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValues.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPivotValues</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValues.AddString">
            <summary>Задает stub IXLPivotValues.Add(String sourceName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValues.AddStringString">
            <summary>Задает stub IXLPivotValues.Add(String sourceName, String customName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValues.Clear">
            <summary>Задает stub IXLPivotValues.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValues.cxml::ClosedXML#Excel#IXLPivotValues#Add(System.String)">
            <summary>Задает заглушка IXLPivotValues.Add(String sourceName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValues.cxml::ClosedXML#Excel#IXLPivotValues#Add(System.String,System.String)">
            <summary>Задает заглушка IXLPivotValues.Add(String sourceName, String customName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValues.cxml::ClosedXML#Excel#IXLPivotValues#Clear">
            <summary>Задает заглушка IXLPivotValues.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValues.cxml::ClosedXML#Excel#IXLPivotValues#Remove(System.String)">
            <summary>Задает заглушка IXLPivotValues.Remove(String sourceName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValues.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValues.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPivotValues.RemoveString">
            <summary>Задает stub IXLPivotValues.Remove(String sourceName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValues.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLPivotValue}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPivotValues.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLPrintAreas">
            <summary>Тип заглушки ClosedXML.Excel.IXLPrintAreas</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPrintAreas.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLPrintAreas</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPrintAreas.AddIXLAddressIXLAddress">
            <summary>Задает stub IXLPrintAreas.Add(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPrintAreas.AddInt32Int32Int32Int32">
            <summary>Задает stub IXLPrintAreas.Add(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPrintAreas.AddString">
            <summary>Задает stub IXLPrintAreas.Add(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPrintAreas.AddStringString">
            <summary>Задает stub IXLPrintAreas.Add(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPrintAreas.Clear">
            <summary>Задает stub IXLPrintAreas.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPrintAreas.cxml::ClosedXML#Excel#IXLPrintAreas#Add(System.String)">
            <summary>Задает заглушка IXLPrintAreas.Add(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPrintAreas.cxml::ClosedXML#Excel#IXLPrintAreas#Add(ClosedXML.Excel.IXLAddress,ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLPrintAreas.Add(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPrintAreas.cxml::ClosedXML#Excel#IXLPrintAreas#Add(System.String,System.String)">
            <summary>Задает заглушка IXLPrintAreas.Add(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPrintAreas.cxml::ClosedXML#Excel#IXLPrintAreas#Add(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка IXLPrintAreas.Add(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPrintAreas.cxml::ClosedXML#Excel#IXLPrintAreas#Clear">
            <summary>Задает заглушка IXLPrintAreas.Clear()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPrintAreas.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLPrintAreas.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPrintAreas.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLRange}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLPrintAreas.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLProtection">
            <summary>Тип заглушки ClosedXML.Excel.IXLProtection</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLProtection.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLProtection</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLProtection.AttachBackingFieldToHidden">
            <summary>Присоединение делегатов для эмуляции StubIXLProtection.Hidden как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLProtection.AttachBackingFieldToLocked">
            <summary>Присоединение делегатов для эмуляции StubIXLProtection.Locked как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLProtection.cxml::ClosedXML#Excel#IXLProtection#SetHidden">
            <summary>Задает заглушка IXLProtection.SetHidden()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLProtection.cxml::ClosedXML#Excel#IXLProtection#SetHidden(System.Boolean)">
            <summary>Задает заглушка IXLProtection.SetHidden(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLProtection.cxml::ClosedXML#Excel#IXLProtection#SetLocked">
            <summary>Задает заглушка IXLProtection.SetLocked()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLProtection.cxml::ClosedXML#Excel#IXLProtection#SetLocked(System.Boolean)">
            <summary>Задает заглушка IXLProtection.SetLocked(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLProtection.EqualsIXLProtection">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLProtection.HiddenGet">
            <summary>Задает stub IXLProtection.get_Hidden()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLProtection.HiddenSetBoolean">
            <summary>Задает stub IXLProtection.set_Hidden(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLProtection.LockedGet">
            <summary>Задает stub IXLProtection.get_Locked()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLProtection.LockedSetBoolean">
            <summary>Задает stub IXLProtection.set_Locked(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLProtection.SetHidden">
            <summary>Задает stub IXLProtection.SetHidden()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLProtection.SetHiddenBoolean">
            <summary>Задает stub IXLProtection.SetHidden(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLProtection.SetLocked">
            <summary>Задает stub IXLProtection.SetLocked()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLProtection.SetLockedBoolean">
            <summary>Задает stub IXLProtection.SetLocked(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLProtection.global::System#IEquatable{ClosedXML#Excel#IXLProtection}#Equals(ClosedXML.Excel.IXLProtection)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLProtection.cxml::ClosedXML#Excel#IXLProtection#Hidden">
            <summary>Задает stub IXLProtection.get_Hidden()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLProtection.cxml::ClosedXML#Excel#IXLProtection#Locked">
            <summary>Задает stub IXLProtection.get_Locked()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRange">
            <summary>Тип заглушки ClosedXML.Excel.IXLRange</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRange</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.AsTable">
            <summary>Задает stub IXLRange.AsTable()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.AsTableString">
            <summary>Задает stub IXLRange.AsTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLRange.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellIXLAddress">
            <summary>Задает stub IXLRange.Cell(IXLAddress cellAddressInRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellInt32Int32">
            <summary>Задает stub IXLRange.Cell(Int32 row, Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellInt32String">
            <summary>Задает stub IXLRange.Cell(Int32 row, String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellString">
            <summary>Задает stub IXLRange.Cell(String cellAddressInRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellsString">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ClearXLClearOptions">
            <summary>Задает stub IXLRange.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ClearXLClearOptions01">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#AsTable">
            <summary>Задает заглушка IXLRange.AsTable()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#AsTable(System.String)">
            <summary>Задает заглушка IXLRange.AsTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Cell(ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLRange.Cell(IXLAddress cellAddressInRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Cell(System.String)">
            <summary>Задает заглушка IXLRange.Cell(String cellAddressInRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Cell(System.Int32,System.String)">
            <summary>Задает заглушка IXLRange.Cell(Int32 row, String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Cell(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Cell(Int32 row, Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRange.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Column(System.String)">
            <summary>Задает заглушка IXLRange.Column(String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Column(System.Int32)">
            <summary>Задает заглушка IXLRange.Column(Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#ColumnCount">
            <summary>Задает заглушка IXLRange.ColumnCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Columns(System.String)">
            <summary>Задает заглушка IXLRange.Columns(String columns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Columns(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.Columns(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Columns(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Columns(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Columns(System.String,System.String)">
            <summary>Задает заглушка IXLRange.Columns(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#ColumnsUsed(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.ColumnsUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#ColumnsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.ColumnsUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#CopyTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRange.CopyTo(IXLCell target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#CopyTo(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRange.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#CreateTable">
            <summary>Задает заглушка IXLRange.CreateTable()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#CreateTable(System.String)">
            <summary>Задает заглушка IXLRange.CreateTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Delete(ClosedXML.Excel.XLShiftDeletedCells)">
            <summary>Задает заглушка IXLRange.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#FirstColumn(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#FirstColumnUsed(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#FirstColumnUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#FirstRow(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#FirstRowUsed(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#FirstRowUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#InsertColumnsAfter(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#InsertColumnsAfter(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertColumnsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#InsertColumnsBefore(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#InsertColumnsBefore(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertColumnsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#InsertRowsAbove(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#InsertRowsAbove(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#InsertRowsBelow(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#InsertRowsBelow(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#LastColumn(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#LastColumnUsed(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#LastColumnUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#LastRow(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#LastRowUsed(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#LastRowUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Range(ClosedXML.Excel.IXLRangeAddress)">
            <summary>Задает заглушка IXLRange.Range(IXLRangeAddress rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Range(System.String)">
            <summary>Задает заглушка IXLRange.Range(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Range(ClosedXML.Excel.IXLAddress,ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLRange.Range(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Range(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRange.Range(IXLCell firstCell, IXLCell lastCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Range(System.String,System.String)">
            <summary>Задает заглушка IXLRange.Range(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Range(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Range(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#RangeUsed">
            <summary>Задает заглушка IXLRange.RangeUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Ranges(System.String)">
            <summary>Задает заглушка IXLRange.Ranges(String ranges)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Row(System.Int32)">
            <summary>Задает заглушка IXLRange.Row(Int32 row)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#RowCount">
            <summary>Задает заглушка IXLRange.RowCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Rows(System.String)">
            <summary>Задает заглушка IXLRange.Rows(String rows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Rows(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.Rows(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Rows(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#RowsUsed(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.RowsUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#RowsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.RowsUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRange.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Sort">
            <summary>Задает заглушка IXLRange.Sort()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Sort(System.String,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRange.Sort(String columnsToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Sort(System.Int32,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRange.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#SortLeftToRight(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRange.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#Transpose(ClosedXML.Excel.XLTransposeOptions)">
            <summary>Задает заглушка IXLRange.Transpose(XLTransposeOptions transposeOption)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ColumnCount">
            <summary>Задает stub IXLRange.ColumnCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ColumnInt32">
            <summary>Задает stub IXLRange.Column(Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ColumnString">
            <summary>Задает stub IXLRange.Column(String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ColumnsFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.Columns(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ColumnsInt32Int32">
            <summary>Задает stub IXLRange.Columns(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ColumnsString">
            <summary>Задает stub IXLRange.Columns(String columns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ColumnsStringString">
            <summary>Задает stub IXLRange.Columns(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ColumnsUsedBooleanFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.ColumnsUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ColumnsUsedFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.ColumnsUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CopyToIXLCell">
            <summary>Задает stub IXLRange.CopyTo(IXLCell target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CopyToIXLRangeBase">
            <summary>Задает stub IXLRange.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CreateTable">
            <summary>Задает stub IXLRange.CreateTable()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.CreateTableString">
            <summary>Задает stub IXLRange.CreateTable(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.DeleteXLShiftDeletedCells">
            <summary>Задает stub IXLRange.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstColumnFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.FirstColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstColumnUsedBooleanFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.FirstColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstColumnUsedFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.FirstColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstRowFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.FirstRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstRowUsedBooleanFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.FirstRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FirstRowUsedFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.FirstRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.InsertColumnsAfterInt32">
            <summary>Задает stub IXLRange.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.InsertColumnsAfterInt32Boolean">
            <summary>Задает stub IXLRange.InsertColumnsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.InsertColumnsBeforeInt32">
            <summary>Задает stub IXLRange.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.InsertColumnsBeforeInt32Boolean">
            <summary>Задает stub IXLRange.InsertColumnsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.InsertRowsAboveInt32">
            <summary>Задает stub IXLRange.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.InsertRowsAboveInt32Boolean">
            <summary>Задает stub IXLRange.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.InsertRowsBelowInt32">
            <summary>Задает stub IXLRange.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.InsertRowsBelowInt32Boolean">
            <summary>Задает stub IXLRange.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastColumnFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.LastColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastColumnUsedBooleanFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.LastColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastColumnUsedFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.LastColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastRowFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.LastRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastRowUsedBooleanFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.LastRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.LastRowUsedFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.LastRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RangeIXLAddressIXLAddress">
            <summary>Задает stub IXLRange.Range(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RangeIXLCellIXLCell">
            <summary>Задает stub IXLRange.Range(IXLCell firstCell, IXLCell lastCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RangeIXLRangeAddress">
            <summary>Задает stub IXLRange.Range(IXLRangeAddress rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RangeInt32Int32Int32Int32">
            <summary>Задает stub IXLRange.Range(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RangeString">
            <summary>Задает stub IXLRange.Range(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RangeStringString">
            <summary>Задает stub IXLRange.Range(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RangeUsed">
            <summary>Задает stub IXLRange.RangeUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RangesString">
            <summary>Задает stub IXLRange.Ranges(String ranges)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RowCount">
            <summary>Задает stub IXLRange.RowCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RowInt32">
            <summary>Задает stub IXLRange.Row(Int32 row)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RowsFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.Rows(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RowsInt32Int32">
            <summary>Задает stub IXLRange.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RowsString">
            <summary>Задает stub IXLRange.Rows(String rows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RowsUsedBooleanFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.RowsUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.RowsUsedFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.RowsUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.SetAutoFilter">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRange.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.Sort">
            <summary>Задает stub IXLRange.Sort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.SortColumnsGet">
            <summary>Задает stub IXLRange.get_SortColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.SortInt32XLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRange.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.SortLeftToRightXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRange.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.SortRowsGet">
            <summary>Задает stub IXLRange.get_SortRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.SortStringXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRange.Sort(String columnsToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRange.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.TransposeXLTransposeOptions">
            <summary>Задает stub IXLRange.Transpose(XLTransposeOptions transposeOption)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRange.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#SortColumns">
            <summary>Задает stub IXLRange.get_SortColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRange#SortRows">
            <summary>Задает stub IXLRange.get_SortRows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRange.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRangeAddress">
            <summary>Тип заглушки ClosedXML.Excel.IXLRangeAddress</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeAddress.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRangeAddress</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeAddress.AttachBackingFieldToFirstAddress">
            <summary>Присоединение делегатов для эмуляции StubIXLRangeAddress.FirstAddress как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeAddress.AttachBackingFieldToIsInvalid">
            <summary>Присоединение делегатов для эмуляции StubIXLRangeAddress.IsInvalid как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeAddress.AttachBackingFieldToLastAddress">
            <summary>Присоединение делегатов для эмуляции StubIXLRangeAddress.LastAddress как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeAddress.cxml::ClosedXML#Excel#IXLRangeAddress#ToStringFixed">
            <summary>Задает заглушка IXLRangeAddress.ToStringFixed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeAddress.cxml::ClosedXML#Excel#IXLRangeAddress#ToStringFixed(ClosedXML.Excel.XLReferenceStyle)">
            <summary>Задает заглушка IXLRangeAddress.ToStringFixed(XLReferenceStyle referenceStyle)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeAddress.cxml::ClosedXML#Excel#IXLRangeAddress#ToStringFixed(ClosedXML.Excel.XLReferenceStyle,System.Boolean)">
            <summary>Задает заглушка IXLRangeAddress.ToStringFixed(XLReferenceStyle referenceStyle, Boolean includeSheet)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeAddress.cxml::ClosedXML#Excel#IXLRangeAddress#ToStringRelative">
            <summary>Задает заглушка IXLRangeAddress.ToStringRelative()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeAddress.cxml::ClosedXML#Excel#IXLRangeAddress#ToStringRelative(System.Boolean)">
            <summary>Задает заглушка IXLRangeAddress.ToStringRelative(Boolean includeSheet)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.FirstAddressGet">
            <summary>Задает stub IXLRangeAddress.get_FirstAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.FirstAddressSetIXLAddress">
            <summary>Задает stub IXLRangeAddress.set_FirstAddress(IXLAddress value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.IsInvalidGet">
            <summary>Задает stub IXLRangeAddress.get_IsInvalid()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.IsInvalidSetBoolean">
            <summary>Задает stub IXLRangeAddress.set_IsInvalid(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.LastAddressGet">
            <summary>Задает stub IXLRangeAddress.get_LastAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.LastAddressSetIXLAddress">
            <summary>Задает stub IXLRangeAddress.set_LastAddress(IXLAddress value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.ToStringFixed">
            <summary>Задает stub IXLRangeAddress.ToStringFixed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.ToStringFixedXLReferenceStyle">
            <summary>Задает stub IXLRangeAddress.ToStringFixed(XLReferenceStyle referenceStyle)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.ToStringFixedXLReferenceStyleBoolean">
            <summary>Задает stub IXLRangeAddress.ToStringFixed(XLReferenceStyle referenceStyle, Boolean includeSheet)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.ToStringRelative">
            <summary>Задает stub IXLRangeAddress.ToStringRelative()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.ToStringRelativeBoolean">
            <summary>Задает stub IXLRangeAddress.ToStringRelative(Boolean includeSheet)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeAddress.WorksheetGet">
            <summary>Задает stub IXLRangeAddress.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeAddress.cxml::ClosedXML#Excel#IXLRangeAddress#FirstAddress">
            <summary>Задает stub IXLRangeAddress.get_FirstAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeAddress.cxml::ClosedXML#Excel#IXLRangeAddress#IsInvalid">
            <summary>Задает stub IXLRangeAddress.get_IsInvalid()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeAddress.cxml::ClosedXML#Excel#IXLRangeAddress#LastAddress">
            <summary>Задает stub IXLRangeAddress.get_LastAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeAddress.cxml::ClosedXML#Excel#IXLRangeAddress#Worksheet">
            <summary>Задает stub IXLRangeAddress.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRangeBase">
            <summary>Тип заглушки ClosedXML.Excel.IXLRangeBase</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRangeBase</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLRangeBase.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.CellsString">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.ClearXLClearOptions">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.SetAutoFilter">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeBase.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeBase.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeBase.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRangeColumn">
            <summary>Тип заглушки ClosedXML.Excel.IXLRangeColumn</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRangeColumn</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.AsTable">
            <summary>Задает stub IXLRangeColumn.AsTable()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.AsTableString">
            <summary>Задает stub IXLRangeColumn.AsTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLRangeColumn.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellCount">
            <summary>Задает stub IXLRangeColumn.CellCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellInt32">
            <summary>Задает stub IXLRangeColumn.Cell(Int32 rowNumber)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellsInt32Int32">
            <summary>Задает stub IXLRangeColumn.Cells(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellsString">
            <summary>Задает stub IXLRangeColumn.Cells(String cellsInColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellsString01">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ClearXLClearOptions">
            <summary>Задает stub IXLRangeColumn.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ClearXLClearOptions01">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#AsTable">
            <summary>Задает заглушка IXLRangeColumn.AsTable()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#AsTable(System.String)">
            <summary>Задает заглушка IXLRangeColumn.AsTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Cell(System.Int32)">
            <summary>Задает заглушка IXLRangeColumn.Cell(Int32 rowNumber)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#CellCount">
            <summary>Задает заглушка IXLRangeColumn.CellCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Cells(System.String)">
            <summary>Задает заглушка IXLRangeColumn.Cells(String cellsInColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Cells(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRangeColumn.Cells(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeColumn.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Column(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeColumn.Column(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Column(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRangeColumn.Column(Int32 start, Int32 end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#ColumnLeft">
            <summary>Задает заглушка IXLRangeColumn.ColumnLeft()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#ColumnLeft(System.Int32)">
            <summary>Задает заглушка IXLRangeColumn.ColumnLeft(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#ColumnLetter">
            <summary>Задает заглушка IXLRangeColumn.ColumnLetter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#ColumnNumber">
            <summary>Задает заглушка IXLRangeColumn.ColumnNumber()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#ColumnRight">
            <summary>Задает заглушка IXLRangeColumn.ColumnRight()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#ColumnRight(System.Int32)">
            <summary>Задает заглушка IXLRangeColumn.ColumnRight(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#ColumnUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeColumn.ColumnUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Columns(System.String)">
            <summary>Задает заглушка IXLRangeColumn.Columns(String columns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#CopyTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeColumn.CopyTo(IXLCell target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#CopyTo(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeColumn.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#CreateTable">
            <summary>Задает заглушка IXLRangeColumn.CreateTable()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#CreateTable(System.String)">
            <summary>Задает заглушка IXLRangeColumn.CreateTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Delete">
            <summary>Задает заглушка IXLRangeColumn.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Delete(ClosedXML.Excel.XLShiftDeletedCells)">
            <summary>Задает заглушка IXLRangeColumn.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#InsertCellsAbove(System.Int32)">
            <summary>Задает заглушка IXLRangeColumn.InsertCellsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#InsertCellsAbove(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeColumn.InsertCellsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#InsertCellsBelow(System.Int32)">
            <summary>Задает заглушка IXLRangeColumn.InsertCellsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#InsertCellsBelow(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeColumn.InsertCellsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#InsertColumnsAfter(System.Int32)">
            <summary>Задает заглушка IXLRangeColumn.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#InsertColumnsAfter(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeColumn.InsertColumnsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#InsertColumnsBefore(System.Int32)">
            <summary>Задает заглушка IXLRangeColumn.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#InsertColumnsBefore(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeColumn.InsertColumnsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRangeColumn.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#Sort(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRangeColumn.Sort(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeColumn#WorksheetColumn">
            <summary>Задает заглушка IXLRangeColumn.WorksheetColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnIXLCellIXLCell">
            <summary>Задает stub IXLRangeColumn.Column(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnInt32Int32">
            <summary>Задает stub IXLRangeColumn.Column(Int32 start, Int32 end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnLeft">
            <summary>Задает stub IXLRangeColumn.ColumnLeft()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnLeftInt32">
            <summary>Задает stub IXLRangeColumn.ColumnLeft(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnLetter">
            <summary>Задает stub IXLRangeColumn.ColumnLetter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnNumber">
            <summary>Задает stub IXLRangeColumn.ColumnNumber()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnRight">
            <summary>Задает stub IXLRangeColumn.ColumnRight()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnRightInt32">
            <summary>Задает stub IXLRangeColumn.ColumnRight(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnUsedBoolean">
            <summary>Задает stub IXLRangeColumn.ColumnUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ColumnsString">
            <summary>Задает stub IXLRangeColumn.Columns(String columns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CopyToIXLCell">
            <summary>Задает stub IXLRangeColumn.CopyTo(IXLCell target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CopyToIXLRangeBase">
            <summary>Задает stub IXLRangeColumn.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CreateTable">
            <summary>Задает stub IXLRangeColumn.CreateTable()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.CreateTableString">
            <summary>Задает stub IXLRangeColumn.CreateTable(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.Delete">
            <summary>Задает stub IXLRangeColumn.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.DeleteXLShiftDeletedCells">
            <summary>Задает stub IXLRangeColumn.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.InsertCellsAboveInt32">
            <summary>Задает stub IXLRangeColumn.InsertCellsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.InsertCellsAboveInt32Boolean">
            <summary>Задает stub IXLRangeColumn.InsertCellsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.InsertCellsBelowInt32">
            <summary>Задает stub IXLRangeColumn.InsertCellsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.InsertCellsBelowInt32Boolean">
            <summary>Задает stub IXLRangeColumn.InsertCellsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.InsertColumnsAfterInt32">
            <summary>Задает stub IXLRangeColumn.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.InsertColumnsAfterInt32Boolean">
            <summary>Задает stub IXLRangeColumn.InsertColumnsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.InsertColumnsBeforeInt32">
            <summary>Задает stub IXLRangeColumn.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.InsertColumnsBeforeInt32Boolean">
            <summary>Задает stub IXLRangeColumn.InsertColumnsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.SetAutoFilter">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRangeColumn.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.SortXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRangeColumn.Sort(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumn.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.WorksheetColumn">
            <summary>Задает stub IXLRangeColumn.WorksheetColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumn.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumn.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRangeColumns">
            <summary>Тип заглушки ClosedXML.Excel.IXLRangeColumns</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRangeColumns</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.AddIXLRangeColumn">
            <summary>Задает stub IXLRangeColumns.Add(IXLRangeColumn columRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLRangeColumns.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.Cells">
            <summary>Задает stub IXLRangeColumns.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.CellsUsed">
            <summary>Задает stub IXLRangeColumns.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.CellsUsedBoolean">
            <summary>Задает stub IXLRangeColumns.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.ClearXLClearOptions">
            <summary>Задает stub IXLRangeColumns.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.cxml::ClosedXML#Excel#IXLRangeColumns#Add(ClosedXML.Excel.IXLRangeColumn)">
            <summary>Задает заглушка IXLRangeColumns.Add(IXLRangeColumn columRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.cxml::ClosedXML#Excel#IXLRangeColumns#Cells">
            <summary>Задает заглушка IXLRangeColumns.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.cxml::ClosedXML#Excel#IXLRangeColumns#CellsUsed">
            <summary>Задает заглушка IXLRangeColumns.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.cxml::ClosedXML#Excel#IXLRangeColumns#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeColumns.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.cxml::ClosedXML#Excel#IXLRangeColumns#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeColumns.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.cxml::ClosedXML#Excel#IXLRangeColumns#Delete">
            <summary>Задает заглушка IXLRangeColumns.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.cxml::ClosedXML#Excel#IXLRangeColumns#Select">
            <summary>Задает заглушка IXLRangeColumns.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.cxml::ClosedXML#Excel#IXLRangeColumns#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRangeColumns.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.Delete">
            <summary>Задает stub IXLRangeColumns.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.Select">
            <summary>Задает stub IXLRangeColumns.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRangeColumns.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.StyleGet">
            <summary>Задает stub IXLRangeColumns.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeColumns.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeColumns.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLRangeColumn}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeColumns.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeColumns.cxml::ClosedXML#Excel#IXLRangeColumns#Style">
            <summary>Задает stub IXLRangeColumns.get_Style()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRangeRow">
            <summary>Тип заглушки ClosedXML.Excel.IXLRangeRow</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRangeRow</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLRangeRow.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellCount">
            <summary>Задает stub IXLRangeRow.CellCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellInt32">
            <summary>Задает stub IXLRangeRow.Cell(Int32 columnNumber)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellString">
            <summary>Задает stub IXLRangeRow.Cell(String columnLetter)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellsInt32Int32">
            <summary>Задает stub IXLRangeRow.Cells(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellsString">
            <summary>Задает stub IXLRangeRow.Cells(String cellsInRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellsString01">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellsStringString">
            <summary>Задает stub IXLRangeRow.Cells(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.ClearXLClearOptions">
            <summary>Задает stub IXLRangeRow.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.ClearXLClearOptions01">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Cell(System.String)">
            <summary>Задает заглушка IXLRangeRow.Cell(String columnLetter)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Cell(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.Cell(Int32 columnNumber)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#CellCount">
            <summary>Задает заглушка IXLRangeRow.CellCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Cells(System.String)">
            <summary>Задает заглушка IXLRangeRow.Cells(String cellsInRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Cells(System.String,System.String)">
            <summary>Задает заглушка IXLRangeRow.Cells(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Cells(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRangeRow.Cells(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeRow.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#CopyTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeRow.CopyTo(IXLCell target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#CopyTo(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeRow.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Delete">
            <summary>Задает заглушка IXLRangeRow.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Delete(ClosedXML.Excel.XLShiftDeletedCells)">
            <summary>Задает заглушка IXLRangeRow.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertCellsAfter(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.InsertCellsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertCellsAfter(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.InsertCellsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertCellsBefore(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.InsertCellsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertCellsBefore(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.InsertCellsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertRowsAbove(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertRowsAbove(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertRowsBelow(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertRowsBelow(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Row(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeRow.Row(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Row(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRangeRow.Row(Int32 start, Int32 end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#RowAbove">
            <summary>Задает заглушка IXLRangeRow.RowAbove()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#RowAbove(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.RowAbove(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#RowBelow">
            <summary>Задает заглушка IXLRangeRow.RowBelow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#RowBelow(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.RowBelow(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#RowNumber">
            <summary>Задает заглушка IXLRangeRow.RowNumber()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#RowUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.RowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Rows(System.String)">
            <summary>Задает заглушка IXLRangeRow.Rows(String rows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRangeRow.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#Sort">
            <summary>Задает заглушка IXLRangeRow.Sort()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#SortLeftToRight(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeRow#WorksheetRow">
            <summary>Задает заглушка IXLRangeRow.WorksheetRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CopyToIXLCell">
            <summary>Задает stub IXLRangeRow.CopyTo(IXLCell target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CopyToIXLRangeBase">
            <summary>Задает stub IXLRangeRow.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.Delete">
            <summary>Задает stub IXLRangeRow.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.DeleteXLShiftDeletedCells">
            <summary>Задает stub IXLRangeRow.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.InsertCellsAfterInt32">
            <summary>Задает stub IXLRangeRow.InsertCellsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.InsertCellsAfterInt32Boolean">
            <summary>Задает stub IXLRangeRow.InsertCellsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.InsertCellsBeforeInt32">
            <summary>Задает stub IXLRangeRow.InsertCellsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.InsertCellsBeforeInt32Boolean">
            <summary>Задает stub IXLRangeRow.InsertCellsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.InsertRowsAboveInt32">
            <summary>Задает stub IXLRangeRow.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.InsertRowsAboveInt32Boolean">
            <summary>Задает stub IXLRangeRow.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.InsertRowsBelowInt32">
            <summary>Задает stub IXLRangeRow.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.InsertRowsBelowInt32Boolean">
            <summary>Задает stub IXLRangeRow.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RowAbove">
            <summary>Задает stub IXLRangeRow.RowAbove()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RowAboveInt32">
            <summary>Задает stub IXLRangeRow.RowAbove(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RowBelow">
            <summary>Задает stub IXLRangeRow.RowBelow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RowBelowInt32">
            <summary>Задает stub IXLRangeRow.RowBelow(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RowIXLCellIXLCell">
            <summary>Задает stub IXLRangeRow.Row(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RowInt32Int32">
            <summary>Задает stub IXLRangeRow.Row(Int32 start, Int32 end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RowNumber">
            <summary>Задает stub IXLRangeRow.RowNumber()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RowUsedBoolean">
            <summary>Задает stub IXLRangeRow.RowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.RowsString">
            <summary>Задает stub IXLRangeRow.Rows(String rows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.SetAutoFilter">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRangeRow.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.Sort">
            <summary>Задает stub IXLRangeRow.Sort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.SortLeftToRightXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRangeRow.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRow.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRow.WorksheetRow">
            <summary>Задает stub IXLRangeRow.WorksheetRow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRow.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRangeRows">
            <summary>Тип заглушки ClosedXML.Excel.IXLRangeRows</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRangeRows</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.AddIXLRangeRow">
            <summary>Задает stub IXLRangeRows.Add(IXLRangeRow rowRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLRangeRows.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.Cells">
            <summary>Задает stub IXLRangeRows.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.CellsUsed">
            <summary>Задает stub IXLRangeRows.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.CellsUsedBoolean">
            <summary>Задает stub IXLRangeRows.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.ClearXLClearOptions">
            <summary>Задает stub IXLRangeRows.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.cxml::ClosedXML#Excel#IXLRangeRows#Add(ClosedXML.Excel.IXLRangeRow)">
            <summary>Задает заглушка IXLRangeRows.Add(IXLRangeRow rowRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.cxml::ClosedXML#Excel#IXLRangeRows#Cells">
            <summary>Задает заглушка IXLRangeRows.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.cxml::ClosedXML#Excel#IXLRangeRows#CellsUsed">
            <summary>Задает заглушка IXLRangeRows.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.cxml::ClosedXML#Excel#IXLRangeRows#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeRows.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.cxml::ClosedXML#Excel#IXLRangeRows#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeRows.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.cxml::ClosedXML#Excel#IXLRangeRows#Delete">
            <summary>Задает заглушка IXLRangeRows.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.cxml::ClosedXML#Excel#IXLRangeRows#Select">
            <summary>Задает заглушка IXLRangeRows.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.cxml::ClosedXML#Excel#IXLRangeRows#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRangeRows.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.Delete">
            <summary>Задает stub IXLRangeRows.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.Select">
            <summary>Задает stub IXLRangeRows.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRangeRows.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.StyleGet">
            <summary>Задает stub IXLRangeRows.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRangeRows.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeRows.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLRangeRow}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRangeRows.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRangeRows.cxml::ClosedXML#Excel#IXLRangeRows#Style">
            <summary>Задает stub IXLRangeRows.get_Style()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRanges">
            <summary>Тип заглушки ClosedXML.Excel.IXLRanges</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRanges</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.AddIXLCell">
            <summary>Задает stub IXLRanges.Add(IXLCell range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.AddIXLRangeBase">
            <summary>Задает stub IXLRanges.Add(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.AddToNamedString">
            <summary>Задает stub IXLRanges.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.AddToNamedStringXLScope">
            <summary>Задает stub IXLRanges.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRanges.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLRanges.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.Cells">
            <summary>Задает stub IXLRanges.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.CellsUsed">
            <summary>Задает stub IXLRanges.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.CellsUsedBoolean">
            <summary>Задает stub IXLRanges.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.ClearXLClearOptions">
            <summary>Задает stub IXLRanges.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Add(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRanges.Add(IXLCell range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Add(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRanges.Add(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRanges.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRanges.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRanges.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Cells">
            <summary>Задает заглушка IXLRanges.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#CellsUsed">
            <summary>Задает заглушка IXLRanges.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRanges.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRanges.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Contains(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLRanges.Contains(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Remove(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLRanges.Remove(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Select">
            <summary>Задает заглушка IXLRanges.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRanges.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#SetDataValidation">
            <summary>Задает заглушка IXLRanges.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#SetValue``1(``0)">
            <summary>Задает заглушка IXLRanges.SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.ContainsIXLRange">
            <summary>Задает stub IXLRanges.Contains(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.CountGet">
            <summary>Задает stub IXLRanges.get_Count()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.RemoveIXLRange">
            <summary>Задает stub IXLRanges.Remove(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.Select">
            <summary>Задает stub IXLRanges.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRanges.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.SetDataValidation">
            <summary>Задает stub IXLRanges.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRanges})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.StyleGet">
            <summary>Задает stub IXLRanges.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.StyleSetIXLStyle">
            <summary>Задает stub IXLRanges.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLRange}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRanges.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRanges.ValueSetObject">
            <summary>Задает stub IXLRanges.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Count">
            <summary>Задает stub IXLRanges.get_Count()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Style">
            <summary>Задает stub IXLRanges.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRanges.cxml::ClosedXML#Excel#IXLRanges#Value">
            <summary>Задает stub IXLRanges.set_Value(Object value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRichString">
            <summary>Тип заглушки ClosedXML.Excel.IXLRichString</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRichString</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.AddNewLine">
            <summary>Задает stub IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.AddTextString">
            <summary>Задает stub IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToBold">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.Bold как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToFontColor">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.FontColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToFontFamilyNumbering">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.FontFamilyNumbering как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToFontName">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.FontName как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToFontSize">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.FontSize как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToItalic">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.Italic как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToShadow">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.Shadow как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToStrikethrough">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.Strikethrough как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToText">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.Text как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToUnderline">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.Underline как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.AttachBackingFieldToVerticalAlignment">
            <summary>Присоединение делегатов для эмуляции StubIXLRichString.VerticalAlignment как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.BoldGet">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.BoldSetBoolean">
            <summary>Задает stub IXLFontBase.set_Bold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetBold">
            <summary>Задает заглушка IXLRichString.SetBold()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetBold(System.Boolean)">
            <summary>Задает заглушка IXLRichString.SetBold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetFontColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLRichString.SetFontColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetFontFamilyNumbering(ClosedXML.Excel.XLFontFamilyNumberingValues)">
            <summary>Задает заглушка IXLRichString.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetFontName(System.String)">
            <summary>Задает заглушка IXLRichString.SetFontName(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetFontSize(System.Double)">
            <summary>Задает заглушка IXLRichString.SetFontSize(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetItalic">
            <summary>Задает заглушка IXLRichString.SetItalic()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetItalic(System.Boolean)">
            <summary>Задает заглушка IXLRichString.SetItalic(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetShadow">
            <summary>Задает заглушка IXLRichString.SetShadow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetShadow(System.Boolean)">
            <summary>Задает заглушка IXLRichString.SetShadow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetStrikethrough">
            <summary>Задает заглушка IXLRichString.SetStrikethrough()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetStrikethrough(System.Boolean)">
            <summary>Задает заглушка IXLRichString.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetUnderline">
            <summary>Задает заглушка IXLRichString.SetUnderline()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetUnderline(ClosedXML.Excel.XLFontUnderlineValues)">
            <summary>Задает заглушка IXLRichString.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#SetVerticalAlignment(ClosedXML.Excel.XLFontVerticalTextAlignmentValues)">
            <summary>Задает заглушка IXLRichString.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLWithRichString#AddNewLine">
            <summary>Задает заглушка IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLWithRichString#AddText(System.String)">
            <summary>Задает заглушка IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.EqualsIXLRichString">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.FontColorGet">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.FontColorSetXLColor">
            <summary>Задает stub IXLFontBase.set_FontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.FontFamilyNumberingGet">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.FontFamilyNumberingSetXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFontBase.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.FontNameGet">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.FontNameSetString">
            <summary>Задает stub IXLFontBase.set_FontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.FontSizeGet">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.FontSizeSetDouble">
            <summary>Задает stub IXLFontBase.set_FontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.ItalicGet">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.ItalicSetBoolean">
            <summary>Задает stub IXLFontBase.set_Italic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetBold">
            <summary>Задает stub IXLRichString.SetBold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetBoldBoolean">
            <summary>Задает stub IXLRichString.SetBold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetFontColorXLColor">
            <summary>Задает stub IXLRichString.SetFontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetFontFamilyNumberingXLFontFamilyNumberingValues">
            <summary>Задает stub IXLRichString.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetFontNameString">
            <summary>Задает stub IXLRichString.SetFontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetFontSizeDouble">
            <summary>Задает stub IXLRichString.SetFontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetItalic">
            <summary>Задает stub IXLRichString.SetItalic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetItalicBoolean">
            <summary>Задает stub IXLRichString.SetItalic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetShadow">
            <summary>Задает stub IXLRichString.SetShadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetShadowBoolean">
            <summary>Задает stub IXLRichString.SetShadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetStrikethrough">
            <summary>Задает stub IXLRichString.SetStrikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetStrikethroughBoolean">
            <summary>Задает stub IXLRichString.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetUnderline">
            <summary>Задает stub IXLRichString.SetUnderline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetUnderlineXLFontUnderlineValues">
            <summary>Задает stub IXLRichString.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.SetVerticalAlignmentXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLRichString.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.ShadowGet">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.ShadowSetBoolean">
            <summary>Задает stub IXLFontBase.set_Shadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.StrikethroughGet">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.StrikethroughSetBoolean">
            <summary>Задает stub IXLFontBase.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichString.global::System#IEquatable{ClosedXML#Excel#IXLRichString}#Equals(ClosedXML.Excel.IXLRichString)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.TextGet">
            <summary>Задает stub IXLRichString.get_Text()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.TextSetString">
            <summary>Задает stub IXLRichString.set_Text(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.UnderlineGet">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.UnderlineSetXLFontUnderlineValues">
            <summary>Задает stub IXLFontBase.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.VerticalAlignmentGet">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichString.VerticalAlignmentSetXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFontBase.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#Bold">
            <summary>Задает stub IXLFontBase.get_Bold()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#FontColor">
            <summary>Задает stub IXLFontBase.get_FontColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#FontFamilyNumbering">
            <summary>Задает stub IXLFontBase.get_FontFamilyNumbering()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#FontName">
            <summary>Задает stub IXLFontBase.get_FontName()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#FontSize">
            <summary>Задает stub IXLFontBase.get_FontSize()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#Italic">
            <summary>Задает stub IXLFontBase.get_Italic()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#Shadow">
            <summary>Задает stub IXLFontBase.get_Shadow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#Strikethrough">
            <summary>Задает stub IXLFontBase.get_Strikethrough()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLRichString#Text">
            <summary>Задает stub IXLRichString.get_Text()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#Underline">
            <summary>Задает stub IXLFontBase.get_Underline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichString.cxml::ClosedXML#Excel#IXLFontBase#VerticalAlignment">
            <summary>Задает stub IXLFontBase.get_VerticalAlignment()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRichText">
            <summary>Тип заглушки ClosedXML.Excel.IXLRichText</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRichText</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.AddNewLine">
            <summary>Задает stub IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.AddTextString">
            <summary>Задает stub IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.AddTextStringIXLFontBase">
            <summary>Задает stub IXLFormattedText`1.AddText(String text, IXLFontBase font)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.BoldSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Bold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.ClearFont">
            <summary>Задает stub IXLFormattedText`1.ClearFont()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.ClearText">
            <summary>Задает stub IXLFormattedText`1.ClearText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#AddText(System.String,ClosedXML.Excel.IXLFontBase)">
            <summary>Задает заглушка IXLFormattedText`1.AddText(String text, IXLFontBase font)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#ClearFont">
            <summary>Задает заглушка IXLFormattedText`1.ClearFont()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#ClearText">
            <summary>Задает заглушка IXLFormattedText`1.ClearText()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetBold">
            <summary>Задает заглушка IXLFormattedText`1.SetBold()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetBold(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetBold(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetFontColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontColor(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetFontFamilyNumbering(ClosedXML.Excel.XLFontFamilyNumberingValues)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetFontName(System.String)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontName(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetFontSize(System.Double)">
            <summary>Задает заглушка IXLFormattedText`1.SetFontSize(Double value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetItalic">
            <summary>Задает заглушка IXLFormattedText`1.SetItalic()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetItalic(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetItalic(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetShadow">
            <summary>Задает заглушка IXLFormattedText`1.SetShadow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetShadow(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetShadow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetStrikethrough">
            <summary>Задает заглушка IXLFormattedText`1.SetStrikethrough()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetStrikethrough(System.Boolean)">
            <summary>Задает заглушка IXLFormattedText`1.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetUnderline">
            <summary>Задает заглушка IXLFormattedText`1.SetUnderline()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetUnderline(ClosedXML.Excel.XLFontUnderlineValues)">
            <summary>Задает заглушка IXLFormattedText`1.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#SetVerticalAlignment(ClosedXML.Excel.XLFontVerticalTextAlignmentValues)">
            <summary>Задает заглушка IXLFormattedText`1.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Substring(System.Int32)">
            <summary>Задает заглушка IXLFormattedText`1.Substring(Int32 index)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Substring(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLFormattedText`1.Substring(Int32 index, Int32 length)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLWithRichString#AddNewLine">
            <summary>Задает заглушка IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLWithRichString#AddText(System.String)">
            <summary>Задает заглушка IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.CountGet">
            <summary>Задает stub IXLFormattedText`1.get_Count()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.EqualsIXLFormattedTextOfIXLRichText">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.FontColorSetXLColor">
            <summary>Задает stub IXLFormattedText`1.set_FontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.FontFamilyNumberingSetXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFormattedText`1.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.FontNameSetString">
            <summary>Задает stub IXLFormattedText`1.set_FontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.FontSizeSetDouble">
            <summary>Задает stub IXLFormattedText`1.set_FontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.HasPhoneticsGet">
            <summary>Задает stub IXLFormattedText`1.get_HasPhonetics()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.ItalicSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Italic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.LengthGet">
            <summary>Задает stub IXLFormattedText`1.get_Length()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.PhoneticsGet">
            <summary>Задает stub IXLFormattedText`1.get_Phonetics()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetBold">
            <summary>Задает stub IXLFormattedText`1.SetBold()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetBoldBoolean">
            <summary>Задает stub IXLFormattedText`1.SetBold(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetFontColorXLColor">
            <summary>Задает stub IXLFormattedText`1.SetFontColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetFontFamilyNumberingXLFontFamilyNumberingValues">
            <summary>Задает stub IXLFormattedText`1.SetFontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetFontNameString">
            <summary>Задает stub IXLFormattedText`1.SetFontName(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetFontSizeDouble">
            <summary>Задает stub IXLFormattedText`1.SetFontSize(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetItalic">
            <summary>Задает stub IXLFormattedText`1.SetItalic()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetItalicBoolean">
            <summary>Задает stub IXLFormattedText`1.SetItalic(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetShadow">
            <summary>Задает stub IXLFormattedText`1.SetShadow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetShadowBoolean">
            <summary>Задает stub IXLFormattedText`1.SetShadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetStrikethrough">
            <summary>Задает stub IXLFormattedText`1.SetStrikethrough()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetStrikethroughBoolean">
            <summary>Задает stub IXLFormattedText`1.SetStrikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetUnderline">
            <summary>Задает stub IXLFormattedText`1.SetUnderline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetUnderlineXLFontUnderlineValues">
            <summary>Задает stub IXLFormattedText`1.SetUnderline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SetVerticalAlignmentXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFormattedText`1.SetVerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.ShadowSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Shadow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.StrikethroughSetBoolean">
            <summary>Задает stub IXLFormattedText`1.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SubstringInt32">
            <summary>Задает stub IXLFormattedText`1.Substring(Int32 index)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.SubstringInt32Int32">
            <summary>Задает stub IXLFormattedText`1.Substring(Int32 index, Int32 length)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLRichString}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRichText.global::System#IEquatable{ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}}#Equals(ClosedXML.Excel.IXLFormattedText{ClosedXML.Excel.IXLRichText})">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.TextGet">
            <summary>Задает stub IXLFormattedText`1.get_Text()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.UnderlineSetXLFontUnderlineValues">
            <summary>Задает stub IXLFormattedText`1.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRichText.VerticalAlignmentSetXLFontVerticalTextAlignmentValues">
            <summary>Задает stub IXLFormattedText`1.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Bold">
            <summary>Задает stub IXLFormattedText`1.set_Bold(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Count">
            <summary>Задает stub IXLFormattedText`1.get_Count()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#FontColor">
            <summary>Задает stub IXLFormattedText`1.set_FontColor(XLColor value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#FontFamilyNumbering">
            <summary>Задает stub IXLFormattedText`1.set_FontFamilyNumbering(XLFontFamilyNumberingValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#FontName">
            <summary>Задает stub IXLFormattedText`1.set_FontName(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#FontSize">
            <summary>Задает stub IXLFormattedText`1.set_FontSize(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#HasPhonetics">
            <summary>Задает stub IXLFormattedText`1.get_HasPhonetics()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Italic">
            <summary>Задает stub IXLFormattedText`1.set_Italic(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Length">
            <summary>Задает stub IXLFormattedText`1.get_Length()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Phonetics">
            <summary>Задает stub IXLFormattedText`1.get_Phonetics()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Shadow">
            <summary>Задает stub IXLFormattedText`1.set_Shadow(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Strikethrough">
            <summary>Задает stub IXLFormattedText`1.set_Strikethrough(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Text">
            <summary>Задает stub IXLFormattedText`1.get_Text()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#Underline">
            <summary>Задает stub IXLFormattedText`1.set_Underline(XLFontUnderlineValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRichText.cxml::ClosedXML#Excel#IXLFormattedText{ClosedXML#Excel#IXLRichText}#VerticalAlignment">
            <summary>Задает stub IXLFormattedText`1.set_VerticalAlignment(XLFontVerticalTextAlignmentValues value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRow">
            <summary>Тип заглушки ClosedXML.Excel.IXLRow</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRow</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AddHorizontalPageBreak">
            <summary>Задает stub IXLRow.AddHorizontalPageBreak()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AdjustToContents">
            <summary>Задает stub IXLRow.AdjustToContents()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AdjustToContentsDoubleDouble">
            <summary>Задает stub IXLRow.AdjustToContents(Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AdjustToContentsInt32">
            <summary>Задает stub IXLRow.AdjustToContents(Int32 startColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AdjustToContentsInt32DoubleDouble">
            <summary>Задает stub IXLRow.AdjustToContents(Int32 startColumn, Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AdjustToContentsInt32Int32">
            <summary>Задает stub IXLRow.AdjustToContents(Int32 startColumn, Int32 endColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AdjustToContentsInt32Int32DoubleDouble">
            <summary>Задает stub IXLRow.AdjustToContents(Int32 startColumn, Int32 endColumn, Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.AttachBackingFieldToHeight">
            <summary>Присоединение делегатов для эмуляции StubIXLRow.Height как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.AttachBackingFieldToOutlineLevel">
            <summary>Присоединение делегатов для эмуляции StubIXLRow.OutlineLevel как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLRow.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellCount">
            <summary>Задает stub IXLRow.CellCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellInt32">
            <summary>Задает stub IXLRow.Cell(Int32 columnNumber)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellString">
            <summary>Задает stub IXLRow.Cell(String columnLetter)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellsInt32Int32">
            <summary>Задает stub IXLRow.Cells(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellsString">
            <summary>Задает stub IXLRow.Cells(String cellsInRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellsString01">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellsStringString">
            <summary>Задает stub IXLRow.Cells(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.ClearXLClearOptions">
            <summary>Задает stub IXLRow.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.ClearXLClearOptions01">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#AddHorizontalPageBreak">
            <summary>Задает заглушка IXLRow.AddHorizontalPageBreak()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#AdjustToContents">
            <summary>Задает заглушка IXLRow.AdjustToContents()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#AdjustToContents(System.Int32)">
            <summary>Задает заглушка IXLRow.AdjustToContents(Int32 startColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#AdjustToContents(System.Double,System.Double)">
            <summary>Задает заглушка IXLRow.AdjustToContents(Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#AdjustToContents(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRow.AdjustToContents(Int32 startColumn, Int32 endColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#AdjustToContents(System.Int32,System.Double,System.Double)">
            <summary>Задает заглушка IXLRow.AdjustToContents(Int32 startColumn, Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#AdjustToContents(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Задает заглушка IXLRow.AdjustToContents(Int32 startColumn, Int32 endColumn, Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Cell(System.Int32)">
            <summary>Задает заглушка IXLRow.Cell(Int32 columnNumber)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Cell(System.String)">
            <summary>Задает заглушка IXLRow.Cell(String columnLetter)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#CellCount">
            <summary>Задает заглушка IXLRow.CellCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Cells(System.String)">
            <summary>Задает заглушка IXLRow.Cells(String cellsInRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Cells(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRow.Cells(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Cells(System.String,System.String)">
            <summary>Задает заглушка IXLRow.Cells(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRow.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Collapse">
            <summary>Задает заглушка IXLRow.Collapse()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#CopyTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRow.CopyTo(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#CopyTo(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRow.CopyTo(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#CopyTo(ClosedXML.Excel.IXLRow)">
            <summary>Задает заглушка IXLRow.CopyTo(IXLRow row)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Delete">
            <summary>Задает заглушка IXLRow.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Expand">
            <summary>Задает заглушка IXLRow.Expand()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Group">
            <summary>Задает заглушка IXLRow.Group()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Group(System.Boolean)">
            <summary>Задает заглушка IXLRow.Group(Boolean collapse)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Group(System.Int32)">
            <summary>Задает заглушка IXLRow.Group(Int32 outlineLevel)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Group(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRow.Group(Int32 outlineLevel, Boolean collapse)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Hide">
            <summary>Задает заглушка IXLRow.Hide()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#InsertRowsAbove(System.Int32)">
            <summary>Задает заглушка IXLRow.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#InsertRowsBelow(System.Int32)">
            <summary>Задает заглушка IXLRow.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Row(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRow.Row(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Row(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRow.Row(Int32 start, Int32 end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#RowAbove">
            <summary>Задает заглушка IXLRow.RowAbove()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#RowAbove(System.Int32)">
            <summary>Задает заглушка IXLRow.RowAbove(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#RowBelow">
            <summary>Задает заглушка IXLRow.RowBelow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#RowBelow(System.Int32)">
            <summary>Задает заглушка IXLRow.RowBelow(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#RowNumber">
            <summary>Задает заглушка IXLRow.RowNumber()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#RowUsed(System.Boolean)">
            <summary>Задает заглушка IXLRow.RowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Rows(System.String)">
            <summary>Задает заглушка IXLRow.Rows(String columns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRow.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Sort">
            <summary>Задает заглушка IXLRow.Sort()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#SortLeftToRight(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRow.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Ungroup">
            <summary>Задает заглушка IXLRow.Ungroup()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Ungroup(System.Boolean)">
            <summary>Задает заглушка IXLRow.Ungroup(Boolean fromAll)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Unhide">
            <summary>Задает заглушка IXLRow.Unhide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Collapse">
            <summary>Задает stub IXLRow.Collapse()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CopyToIXLCell">
            <summary>Задает stub IXLRow.CopyTo(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CopyToIXLRangeBase">
            <summary>Задает stub IXLRow.CopyTo(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CopyToIXLRow">
            <summary>Задает stub IXLRow.CopyTo(IXLRow row)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Delete">
            <summary>Задает stub IXLRow.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Expand">
            <summary>Задает stub IXLRow.Expand()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Group">
            <summary>Задает stub IXLRow.Group()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.GroupBoolean">
            <summary>Задает stub IXLRow.Group(Boolean collapse)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.GroupInt32">
            <summary>Задает stub IXLRow.Group(Int32 outlineLevel)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.GroupInt32Boolean">
            <summary>Задает stub IXLRow.Group(Int32 outlineLevel, Boolean collapse)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.HeightGet">
            <summary>Задает stub IXLRow.get_Height()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.HeightSetDouble">
            <summary>Задает stub IXLRow.set_Height(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Hide">
            <summary>Задает stub IXLRow.Hide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.InsertRowsAboveInt32">
            <summary>Задает stub IXLRow.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.InsertRowsBelowInt32">
            <summary>Задает stub IXLRow.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.IsHiddenGet">
            <summary>Задает stub IXLRow.get_IsHidden()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.OutlineLevelGet">
            <summary>Задает stub IXLRow.get_OutlineLevel()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.OutlineLevelSetInt32">
            <summary>Задает stub IXLRow.set_OutlineLevel(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RowAbove">
            <summary>Задает stub IXLRow.RowAbove()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RowAboveInt32">
            <summary>Задает stub IXLRow.RowAbove(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RowBelow">
            <summary>Задает stub IXLRow.RowBelow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RowBelowInt32">
            <summary>Задает stub IXLRow.RowBelow(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RowIXLCellIXLCell">
            <summary>Задает stub IXLRow.Row(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RowInt32Int32">
            <summary>Задает stub IXLRow.Row(Int32 start, Int32 end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RowNumber">
            <summary>Задает stub IXLRow.RowNumber()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RowUsedBoolean">
            <summary>Задает stub IXLRow.RowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.RowsString">
            <summary>Задает stub IXLRow.Rows(String columns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.SetAutoFilter">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRow.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Sort">
            <summary>Задает stub IXLRow.Sort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.SortLeftToRightXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRow.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRow.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Ungroup">
            <summary>Задает stub IXLRow.Ungroup()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.UngroupBoolean">
            <summary>Задает stub IXLRow.Ungroup(Boolean fromAll)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Unhide">
            <summary>Задает stub IXLRow.Unhide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRow.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#Height">
            <summary>Задает stub IXLRow.get_Height()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#IsHidden">
            <summary>Задает stub IXLRow.get_IsHidden()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRow#OutlineLevel">
            <summary>Задает stub IXLRow.get_OutlineLevel()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRow.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLRows">
            <summary>Тип заглушки ClosedXML.Excel.IXLRows</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLRows</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.AddHorizontalPageBreaks">
            <summary>Задает stub IXLRows.AddHorizontalPageBreaks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.AdjustToContents">
            <summary>Задает stub IXLRows.AdjustToContents()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.AdjustToContentsDoubleDouble">
            <summary>Задает stub IXLRows.AdjustToContents(Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.AdjustToContentsInt32">
            <summary>Задает stub IXLRows.AdjustToContents(Int32 startColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.AdjustToContentsInt32DoubleDouble">
            <summary>Задает stub IXLRows.AdjustToContents(Int32 startColumn, Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.AdjustToContentsInt32Int32">
            <summary>Задает stub IXLRows.AdjustToContents(Int32 startColumn, Int32 endColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.AdjustToContentsInt32Int32DoubleDouble">
            <summary>Задает stub IXLRows.AdjustToContents(Int32 startColumn, Int32 endColumn, Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLRows.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Cells">
            <summary>Задает stub IXLRows.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.CellsUsed">
            <summary>Задает stub IXLRows.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.CellsUsedBoolean">
            <summary>Задает stub IXLRows.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.ClearXLClearOptions">
            <summary>Задает stub IXLRows.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#AddHorizontalPageBreaks">
            <summary>Задает заглушка IXLRows.AddHorizontalPageBreaks()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#AdjustToContents">
            <summary>Задает заглушка IXLRows.AdjustToContents()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#AdjustToContents(System.Int32)">
            <summary>Задает заглушка IXLRows.AdjustToContents(Int32 startColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#AdjustToContents(System.Double,System.Double)">
            <summary>Задает заглушка IXLRows.AdjustToContents(Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#AdjustToContents(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRows.AdjustToContents(Int32 startColumn, Int32 endColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#AdjustToContents(System.Int32,System.Double,System.Double)">
            <summary>Задает заглушка IXLRows.AdjustToContents(Int32 startColumn, Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#AdjustToContents(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Задает заглушка IXLRows.AdjustToContents(Int32 startColumn, Int32 endColumn, Double minHeight, Double maxHeight)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Cells">
            <summary>Задает заглушка IXLRows.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#CellsUsed">
            <summary>Задает заглушка IXLRows.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRows.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRows.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Collapse">
            <summary>Задает заглушка IXLRows.Collapse()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Delete">
            <summary>Задает заглушка IXLRows.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Expand">
            <summary>Задает заглушка IXLRows.Expand()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Group">
            <summary>Задает заглушка IXLRows.Group()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Group(System.Boolean)">
            <summary>Задает заглушка IXLRows.Group(Boolean collapse)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Group(System.Int32)">
            <summary>Задает заглушка IXLRows.Group(Int32 outlineLevel)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Group(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRows.Group(Int32 outlineLevel, Boolean collapse)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Hide">
            <summary>Задает заглушка IXLRows.Hide()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Select">
            <summary>Задает заглушка IXLRows.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRows.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Ungroup">
            <summary>Задает заглушка IXLRows.Ungroup()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Ungroup(System.Boolean)">
            <summary>Задает заглушка IXLRows.Ungroup(Boolean fromAll)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Unhide">
            <summary>Задает заглушка IXLRows.Unhide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Collapse">
            <summary>Задает stub IXLRows.Collapse()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Delete">
            <summary>Задает stub IXLRows.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Expand">
            <summary>Задает stub IXLRows.Expand()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Group">
            <summary>Задает stub IXLRows.Group()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.GroupBoolean">
            <summary>Задает stub IXLRows.Group(Boolean collapse)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.GroupInt32">
            <summary>Задает stub IXLRows.Group(Int32 outlineLevel)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.GroupInt32Boolean">
            <summary>Задает stub IXLRows.Group(Int32 outlineLevel, Boolean collapse)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.HeightSetDouble">
            <summary>Задает stub IXLRows.set_Height(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Hide">
            <summary>Задает stub IXLRows.Hide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Select">
            <summary>Задает stub IXLRows.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRows.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.StyleGet">
            <summary>Задает stub IXLRows.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.StyleSetIXLStyle">
            <summary>Задает stub IXLRows.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLRow}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLRows.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Ungroup">
            <summary>Задает stub IXLRows.Ungroup()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.UngroupBoolean">
            <summary>Задает stub IXLRows.Ungroup(Boolean fromAll)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLRows.Unhide">
            <summary>Задает stub IXLRows.Unhide()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Height">
            <summary>Задает stub IXLRows.set_Height(Double value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLRows.cxml::ClosedXML#Excel#IXLRows#Style">
            <summary>Задает stub IXLRows.get_Style()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLSheetProtection">
            <summary>Тип заглушки ClosedXML.Excel.IXLSheetProtection</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLSheetProtection</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToAutoFilter">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.AutoFilter как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToDeleteColumns">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.DeleteColumns как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToDeleteRows">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.DeleteRows как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToFormatCells">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.FormatCells как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToFormatColumns">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.FormatColumns как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToFormatRows">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.FormatRows как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToInsertColumns">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.InsertColumns как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToInsertHyperlinks">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.InsertHyperlinks как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToInsertRows">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.InsertRows как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToObjects">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.Objects как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToPivotTables">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.PivotTables как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToProtected">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.Protected как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToScenarios">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.Scenarios как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToSelectLockedCells">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.SelectLockedCells как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToSelectUnlockedCells">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.SelectUnlockedCells как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AttachBackingFieldToSort">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetProtection.Sort как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AutoFilterGet">
            <summary>Задает stub IXLSheetProtection.get_AutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.AutoFilterSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_AutoFilter(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#Protect">
            <summary>Задает заглушка IXLSheetProtection.Protect()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#Protect(System.String)">
            <summary>Задает заглушка IXLSheetProtection.Protect(String password)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetAutoFilter">
            <summary>Задает заглушка IXLSheetProtection.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetAutoFilter(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetAutoFilter(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetDeleteColumns">
            <summary>Задает заглушка IXLSheetProtection.SetDeleteColumns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetDeleteColumns(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetDeleteColumns(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetDeleteRows">
            <summary>Задает заглушка IXLSheetProtection.SetDeleteRows()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetDeleteRows(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetDeleteRows(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetFormatCells">
            <summary>Задает заглушка IXLSheetProtection.SetFormatCells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetFormatCells(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetFormatCells(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetFormatColumns">
            <summary>Задает заглушка IXLSheetProtection.SetFormatColumns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetFormatColumns(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetFormatColumns(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetFormatRows">
            <summary>Задает заглушка IXLSheetProtection.SetFormatRows()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetFormatRows(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetFormatRows(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetInsertColumns">
            <summary>Задает заглушка IXLSheetProtection.SetInsertColumns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetInsertColumns(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetInsertColumns(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetInsertHyperlinks">
            <summary>Задает заглушка IXLSheetProtection.SetInsertHyperlinks()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetInsertHyperlinks(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetInsertHyperlinks(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetInsertRows">
            <summary>Задает заглушка IXLSheetProtection.SetInsertRows()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetInsertRows(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetInsertRows(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetObjects">
            <summary>Задает заглушка IXLSheetProtection.SetObjects()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetObjects(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetObjects(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetPivotTables">
            <summary>Задает заглушка IXLSheetProtection.SetPivotTables()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetPivotTables(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetPivotTables(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetScenarios">
            <summary>Задает заглушка IXLSheetProtection.SetScenarios()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetScenarios(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetScenarios(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetSelectLockedCells">
            <summary>Задает заглушка IXLSheetProtection.SetSelectLockedCells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetSelectLockedCells(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetSelectLockedCells(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetSelectUnlockedCells">
            <summary>Задает заглушка IXLSheetProtection.SetSelectUnlockedCells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetSelectUnlockedCells(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetSelectUnlockedCells(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetSort">
            <summary>Задает заглушка IXLSheetProtection.SetSort()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SetSort(System.Boolean)">
            <summary>Задает заглушка IXLSheetProtection.SetSort(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#Unprotect">
            <summary>Задает заглушка IXLSheetProtection.Unprotect()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#Unprotect(System.String)">
            <summary>Задает заглушка IXLSheetProtection.Unprotect(String password)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.DeleteColumnsGet">
            <summary>Задает stub IXLSheetProtection.get_DeleteColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.DeleteColumnsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_DeleteColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.DeleteRowsGet">
            <summary>Задает stub IXLSheetProtection.get_DeleteRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.DeleteRowsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_DeleteRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.FormatCellsGet">
            <summary>Задает stub IXLSheetProtection.get_FormatCells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.FormatCellsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_FormatCells(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.FormatColumnsGet">
            <summary>Задает stub IXLSheetProtection.get_FormatColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.FormatColumnsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_FormatColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.FormatRowsGet">
            <summary>Задает stub IXLSheetProtection.get_FormatRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.FormatRowsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_FormatRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.InsertColumnsGet">
            <summary>Задает stub IXLSheetProtection.get_InsertColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.InsertColumnsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_InsertColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.InsertHyperlinksGet">
            <summary>Задает stub IXLSheetProtection.get_InsertHyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.InsertHyperlinksSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_InsertHyperlinks(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.InsertRowsGet">
            <summary>Задает stub IXLSheetProtection.get_InsertRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.InsertRowsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_InsertRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.ObjectsGet">
            <summary>Задает stub IXLSheetProtection.get_Objects()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.ObjectsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_Objects(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.PivotTablesGet">
            <summary>Задает stub IXLSheetProtection.get_PivotTables()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.PivotTablesSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_PivotTables(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.Protect">
            <summary>Задает stub IXLSheetProtection.Protect()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.ProtectString">
            <summary>Задает stub IXLSheetProtection.Protect(String password)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.ProtectedGet">
            <summary>Задает stub IXLSheetProtection.get_Protected()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.ProtectedSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_Protected(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.ScenariosGet">
            <summary>Задает stub IXLSheetProtection.get_Scenarios()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.ScenariosSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_Scenarios(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SelectLockedCellsGet">
            <summary>Задает stub IXLSheetProtection.get_SelectLockedCells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SelectLockedCellsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_SelectLockedCells(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SelectUnlockedCellsGet">
            <summary>Задает stub IXLSheetProtection.get_SelectUnlockedCells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SelectUnlockedCellsSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_SelectUnlockedCells(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetAutoFilter">
            <summary>Задает stub IXLSheetProtection.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetAutoFilterBoolean">
            <summary>Задает stub IXLSheetProtection.SetAutoFilter(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetDeleteColumns">
            <summary>Задает stub IXLSheetProtection.SetDeleteColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetDeleteColumnsBoolean">
            <summary>Задает stub IXLSheetProtection.SetDeleteColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetDeleteRows">
            <summary>Задает stub IXLSheetProtection.SetDeleteRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetDeleteRowsBoolean">
            <summary>Задает stub IXLSheetProtection.SetDeleteRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetFormatCells">
            <summary>Задает stub IXLSheetProtection.SetFormatCells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetFormatCellsBoolean">
            <summary>Задает stub IXLSheetProtection.SetFormatCells(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetFormatColumns">
            <summary>Задает stub IXLSheetProtection.SetFormatColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetFormatColumnsBoolean">
            <summary>Задает stub IXLSheetProtection.SetFormatColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetFormatRows">
            <summary>Задает stub IXLSheetProtection.SetFormatRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetFormatRowsBoolean">
            <summary>Задает stub IXLSheetProtection.SetFormatRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetInsertColumns">
            <summary>Задает stub IXLSheetProtection.SetInsertColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetInsertColumnsBoolean">
            <summary>Задает stub IXLSheetProtection.SetInsertColumns(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetInsertHyperlinks">
            <summary>Задает stub IXLSheetProtection.SetInsertHyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetInsertHyperlinksBoolean">
            <summary>Задает stub IXLSheetProtection.SetInsertHyperlinks(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetInsertRows">
            <summary>Задает stub IXLSheetProtection.SetInsertRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetInsertRowsBoolean">
            <summary>Задает stub IXLSheetProtection.SetInsertRows(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetObjects">
            <summary>Задает stub IXLSheetProtection.SetObjects()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetObjectsBoolean">
            <summary>Задает stub IXLSheetProtection.SetObjects(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetPivotTables">
            <summary>Задает stub IXLSheetProtection.SetPivotTables()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetPivotTablesBoolean">
            <summary>Задает stub IXLSheetProtection.SetPivotTables(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetScenarios">
            <summary>Задает stub IXLSheetProtection.SetScenarios()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetScenariosBoolean">
            <summary>Задает stub IXLSheetProtection.SetScenarios(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetSelectLockedCells">
            <summary>Задает stub IXLSheetProtection.SetSelectLockedCells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetSelectLockedCellsBoolean">
            <summary>Задает stub IXLSheetProtection.SetSelectLockedCells(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetSelectUnlockedCells">
            <summary>Задает stub IXLSheetProtection.SetSelectUnlockedCells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetSelectUnlockedCellsBoolean">
            <summary>Задает stub IXLSheetProtection.SetSelectUnlockedCells(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetSort">
            <summary>Задает stub IXLSheetProtection.SetSort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SetSortBoolean">
            <summary>Задает stub IXLSheetProtection.SetSort(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SortGet">
            <summary>Задает stub IXLSheetProtection.get_Sort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.SortSetBoolean">
            <summary>Задает stub IXLSheetProtection.set_Sort(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.Unprotect">
            <summary>Задает stub IXLSheetProtection.Unprotect()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetProtection.UnprotectString">
            <summary>Задает stub IXLSheetProtection.Unprotect(String password)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#AutoFilter">
            <summary>Задает stub IXLSheetProtection.get_AutoFilter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#DeleteColumns">
            <summary>Задает stub IXLSheetProtection.get_DeleteColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#DeleteRows">
            <summary>Задает stub IXLSheetProtection.get_DeleteRows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#FormatCells">
            <summary>Задает stub IXLSheetProtection.get_FormatCells()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#FormatColumns">
            <summary>Задает stub IXLSheetProtection.get_FormatColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#FormatRows">
            <summary>Задает stub IXLSheetProtection.get_FormatRows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#InsertColumns">
            <summary>Задает stub IXLSheetProtection.get_InsertColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#InsertHyperlinks">
            <summary>Задает stub IXLSheetProtection.get_InsertHyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#InsertRows">
            <summary>Задает stub IXLSheetProtection.get_InsertRows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#Objects">
            <summary>Задает stub IXLSheetProtection.get_Objects()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#PivotTables">
            <summary>Задает stub IXLSheetProtection.get_PivotTables()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#Protected">
            <summary>Задает stub IXLSheetProtection.get_Protected()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#Scenarios">
            <summary>Задает stub IXLSheetProtection.get_Scenarios()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SelectLockedCells">
            <summary>Задает stub IXLSheetProtection.get_SelectLockedCells()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#SelectUnlockedCells">
            <summary>Задает stub IXLSheetProtection.get_SelectUnlockedCells()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetProtection.cxml::ClosedXML#Excel#IXLSheetProtection#Sort">
            <summary>Задает stub IXLSheetProtection.get_Sort()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLSheetView">
            <summary>Тип заглушки ClosedXML.Excel.IXLSheetView</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetView.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLSheetView</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetView.AttachBackingFieldToSplitColumn">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetView.SplitColumn как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetView.AttachBackingFieldToSplitRow">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetView.SplitRow как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetView.AttachBackingFieldToView">
            <summary>Присоединение делегатов для эмуляции StubIXLSheetView.View как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetView.cxml::ClosedXML#Excel#IXLSheetView#Freeze(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLSheetView.Freeze(Int32 rows, Int32 columns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetView.cxml::ClosedXML#Excel#IXLSheetView#FreezeColumns(System.Int32)">
            <summary>Задает заглушка IXLSheetView.FreezeColumns(Int32 columns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetView.cxml::ClosedXML#Excel#IXLSheetView#FreezeRows(System.Int32)">
            <summary>Задает заглушка IXLSheetView.FreezeRows(Int32 rows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSheetView.cxml::ClosedXML#Excel#IXLSheetView#SetView(ClosedXML.Excel.XLSheetViewOptions)">
            <summary>Задает заглушка IXLSheetView.SetView(XLSheetViewOptions value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.FreezeColumnsInt32">
            <summary>Задает stub IXLSheetView.FreezeColumns(Int32 columns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.FreezeInt32Int32">
            <summary>Задает stub IXLSheetView.Freeze(Int32 rows, Int32 columns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.FreezeRowsInt32">
            <summary>Задает stub IXLSheetView.FreezeRows(Int32 rows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.SetViewXLSheetViewOptions">
            <summary>Задает stub IXLSheetView.SetView(XLSheetViewOptions value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.SplitColumnGet">
            <summary>Задает stub IXLSheetView.get_SplitColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.SplitColumnSetInt32">
            <summary>Задает stub IXLSheetView.set_SplitColumn(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.SplitRowGet">
            <summary>Задает stub IXLSheetView.get_SplitRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.SplitRowSetInt32">
            <summary>Задает stub IXLSheetView.set_SplitRow(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.ViewGet">
            <summary>Задает stub IXLSheetView.get_View()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSheetView.ViewSetXLSheetViewOptions">
            <summary>Задает stub IXLSheetView.set_View(XLSheetViewOptions value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetView.cxml::ClosedXML#Excel#IXLSheetView#SplitColumn">
            <summary>Задает stub IXLSheetView.get_SplitColumn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetView.cxml::ClosedXML#Excel#IXLSheetView#SplitRow">
            <summary>Задает stub IXLSheetView.get_SplitRow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSheetView.cxml::ClosedXML#Excel#IXLSheetView#View">
            <summary>Задает stub IXLSheetView.get_View()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLSortElement">
            <summary>Тип заглушки ClosedXML.Excel.IXLSortElement</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElement.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLSortElement</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElement.AttachBackingFieldToElementNumber">
            <summary>Присоединение делегатов для эмуляции StubIXLSortElement.ElementNumber как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElement.AttachBackingFieldToIgnoreBlanks">
            <summary>Присоединение делегатов для эмуляции StubIXLSortElement.IgnoreBlanks как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElement.AttachBackingFieldToMatchCase">
            <summary>Присоединение делегатов для эмуляции StubIXLSortElement.MatchCase как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElement.AttachBackingFieldToSortOrder">
            <summary>Присоединение делегатов для эмуляции StubIXLSortElement.SortOrder как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElement.ElementNumberGet">
            <summary>Задает stub IXLSortElement.get_ElementNumber()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElement.ElementNumberSetInt32">
            <summary>Задает stub IXLSortElement.set_ElementNumber(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElement.IgnoreBlanksGet">
            <summary>Задает stub IXLSortElement.get_IgnoreBlanks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElement.IgnoreBlanksSetBoolean">
            <summary>Задает stub IXLSortElement.set_IgnoreBlanks(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElement.MatchCaseGet">
            <summary>Задает stub IXLSortElement.get_MatchCase()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElement.MatchCaseSetBoolean">
            <summary>Задает stub IXLSortElement.set_MatchCase(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElement.SortOrderGet">
            <summary>Задает stub IXLSortElement.get_SortOrder()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElement.SortOrderSetXLSortOrder">
            <summary>Задает stub IXLSortElement.set_SortOrder(XLSortOrder value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSortElement.cxml::ClosedXML#Excel#IXLSortElement#ElementNumber">
            <summary>Задает stub IXLSortElement.get_ElementNumber()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSortElement.cxml::ClosedXML#Excel#IXLSortElement#IgnoreBlanks">
            <summary>Задает stub IXLSortElement.get_IgnoreBlanks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSortElement.cxml::ClosedXML#Excel#IXLSortElement#MatchCase">
            <summary>Задает stub IXLSortElement.get_MatchCase()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLSortElement.cxml::ClosedXML#Excel#IXLSortElement#SortOrder">
            <summary>Задает stub IXLSortElement.get_SortOrder()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLSortElements">
            <summary>Тип заглушки ClosedXML.Excel.IXLSortElements</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLSortElements</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.AddInt32">
            <summary>Задает stub IXLSortElements.Add(Int32 elementNumber)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.AddInt32XLSortOrder">
            <summary>Задает stub IXLSortElements.Add(Int32 elementNumber, XLSortOrder sortOrder)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.AddInt32XLSortOrderBoolean">
            <summary>Задает stub IXLSortElements.Add(Int32 elementNumber, XLSortOrder sortOrder, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.AddInt32XLSortOrderBooleanBoolean">
            <summary>Задает stub IXLSortElements.Add(Int32 elementNumber, XLSortOrder sortOrder, Boolean ignoreBlanks, Boolean matchCase)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.AddString">
            <summary>Задает stub IXLSortElements.Add(String elementNumber)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.AddStringXLSortOrder">
            <summary>Задает stub IXLSortElements.Add(String elementNumber, XLSortOrder sortOrder)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.AddStringXLSortOrderBoolean">
            <summary>Задает stub IXLSortElements.Add(String elementNumber, XLSortOrder sortOrder, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.AddStringXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLSortElements.Add(String elementNumber, XLSortOrder sortOrder, Boolean ignoreBlanks, Boolean matchCase)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.Clear">
            <summary>Задает stub IXLSortElements.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Add(System.Int32)">
            <summary>Задает заглушка IXLSortElements.Add(Int32 elementNumber)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Add(System.String)">
            <summary>Задает заглушка IXLSortElements.Add(String elementNumber)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Add(System.Int32,ClosedXML.Excel.XLSortOrder)">
            <summary>Задает заглушка IXLSortElements.Add(Int32 elementNumber, XLSortOrder sortOrder)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Add(System.String,ClosedXML.Excel.XLSortOrder)">
            <summary>Задает заглушка IXLSortElements.Add(String elementNumber, XLSortOrder sortOrder)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Add(System.String,ClosedXML.Excel.XLSortOrder,System.Boolean)">
            <summary>Задает заглушка IXLSortElements.Add(String elementNumber, XLSortOrder sortOrder, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Add(System.Int32,ClosedXML.Excel.XLSortOrder,System.Boolean)">
            <summary>Задает заглушка IXLSortElements.Add(Int32 elementNumber, XLSortOrder sortOrder, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Add(System.String,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLSortElements.Add(String elementNumber, XLSortOrder sortOrder, Boolean ignoreBlanks, Boolean matchCase)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Add(System.Int32,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLSortElements.Add(Int32 elementNumber, XLSortOrder sortOrder, Boolean ignoreBlanks, Boolean matchCase)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Clear">
            <summary>Задает заглушка IXLSortElements.Clear()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.cxml::ClosedXML#Excel#IXLSortElements#Remove(System.Int32)">
            <summary>Задает заглушка IXLSortElements.Remove(Int32 elementNumber)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLSortElements.RemoveInt32">
            <summary>Задает stub IXLSortElements.Remove(Int32 elementNumber)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLSortElement}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLSortElements.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLStyle">
            <summary>Тип заглушки ClosedXML.Excel.IXLStyle</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLStyle.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLStyle</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.AlignmentGet">
            <summary>Задает stub IXLStyle.get_Alignment()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.AlignmentSetIXLAlignment">
            <summary>Задает stub IXLStyle.set_Alignment(IXLAlignment value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLStyle.AttachBackingFieldToAlignment">
            <summary>Присоединение делегатов для эмуляции StubIXLStyle.Alignment как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLStyle.AttachBackingFieldToBorder">
            <summary>Присоединение делегатов для эмуляции StubIXLStyle.Border как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLStyle.AttachBackingFieldToFill">
            <summary>Присоединение делегатов для эмуляции StubIXLStyle.Fill как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLStyle.AttachBackingFieldToFont">
            <summary>Присоединение делегатов для эмуляции StubIXLStyle.Font как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLStyle.AttachBackingFieldToNumberFormat">
            <summary>Присоединение делегатов для эмуляции StubIXLStyle.NumberFormat как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLStyle.AttachBackingFieldToProtection">
            <summary>Присоединение делегатов для эмуляции StubIXLStyle.Protection как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.BorderGet">
            <summary>Задает stub IXLStyle.get_Border()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.BorderSetIXLBorder">
            <summary>Задает stub IXLStyle.set_Border(IXLBorder value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.DateFormatGet">
            <summary>Задает stub IXLStyle.get_DateFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.EqualsIXLStyle">
            <summary>Задает stub IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.FillGet">
            <summary>Задает stub IXLStyle.get_Fill()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.FillSetIXLFill">
            <summary>Задает stub IXLStyle.set_Fill(IXLFill value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.FontGet">
            <summary>Задает stub IXLStyle.get_Font()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.FontSetIXLFont">
            <summary>Задает stub IXLStyle.set_Font(IXLFont value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.NumberFormatGet">
            <summary>Задает stub IXLStyle.get_NumberFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.NumberFormatSetIXLNumberFormat">
            <summary>Задает stub IXLStyle.set_NumberFormat(IXLNumberFormat value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.ProtectionGet">
            <summary>Задает stub IXLStyle.get_Protection()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLStyle.ProtectionSetIXLProtection">
            <summary>Задает stub IXLStyle.set_Protection(IXLProtection value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLStyle.global::System#IEquatable{ClosedXML#Excel#IXLStyle}#Equals(ClosedXML.Excel.IXLStyle)">
            <summary>Задает заглушка IEquatable`1.Equals(!0 other)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLStyle.cxml::ClosedXML#Excel#IXLStyle#Alignment">
            <summary>Задает stub IXLStyle.get_Alignment()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLStyle.cxml::ClosedXML#Excel#IXLStyle#Border">
            <summary>Задает stub IXLStyle.get_Border()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLStyle.cxml::ClosedXML#Excel#IXLStyle#DateFormat">
            <summary>Задает stub IXLStyle.get_DateFormat()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLStyle.cxml::ClosedXML#Excel#IXLStyle#Fill">
            <summary>Задает stub IXLStyle.get_Fill()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLStyle.cxml::ClosedXML#Excel#IXLStyle#Font">
            <summary>Задает stub IXLStyle.get_Font()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLStyle.cxml::ClosedXML#Excel#IXLStyle#NumberFormat">
            <summary>Задает stub IXLStyle.get_NumberFormat()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLStyle.cxml::ClosedXML#Excel#IXLStyle#Protection">
            <summary>Задает stub IXLStyle.get_Protection()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLTable">
            <summary>Тип заглушки ClosedXML.Excel.IXLTable</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLTable</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.AsTable">
            <summary>Задает stub IXLRange.AsTable()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.AsTableString">
            <summary>Задает stub IXLRange.AsTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToEmphasizeFirstColumn">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.EmphasizeFirstColumn как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToEmphasizeLastColumn">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.EmphasizeLastColumn как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.Name как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToShowAutoFilter">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.ShowAutoFilter как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToShowColumnStripes">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.ShowColumnStripes как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToShowHeaderRow">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.ShowHeaderRow как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToShowRowStripes">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.ShowRowStripes как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToShowTotalsRow">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.ShowTotalsRow как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.Style как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.AttachBackingFieldToTheme">
            <summary>Присоединение делегатов для эмуляции StubIXLTable.Theme как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.AutoFilterGet">
            <summary>Задает stub IXLTable.get_AutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellIXLAddress">
            <summary>Задает stub IXLRange.Cell(IXLAddress cellAddressInRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellInt32Int32">
            <summary>Задает stub IXLRange.Cell(Int32 row, Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellInt32String">
            <summary>Задает stub IXLRange.Cell(Int32 row, String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellString">
            <summary>Задает stub IXLRange.Cell(String cellAddressInRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellsString">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ClearXLClearOptions">
            <summary>Задает stub IXLTable.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ClearXLClearOptions01">
            <summary>Задает stub IXLRange.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ClearXLClearOptions02">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#AsTable">
            <summary>Задает заглушка IXLRange.AsTable()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#AsTable(System.String)">
            <summary>Задает заглушка IXLRange.AsTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Cell(ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLRange.Cell(IXLAddress cellAddressInRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Cell(System.String)">
            <summary>Задает заглушка IXLRange.Cell(String cellAddressInRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Cell(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Cell(Int32 row, Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Cell(System.Int32,System.String)">
            <summary>Задает заглушка IXLRange.Cell(Int32 row, String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRange.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Column(System.Int32)">
            <summary>Задает заглушка IXLRange.Column(Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Column(System.String)">
            <summary>Задает заглушка IXLRange.Column(String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#ColumnCount">
            <summary>Задает заглушка IXLRange.ColumnCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Columns(System.String)">
            <summary>Задает заглушка IXLRange.Columns(String columns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Columns(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.Columns(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Columns(System.String,System.String)">
            <summary>Задает заглушка IXLRange.Columns(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Columns(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Columns(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#ColumnsUsed(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.ColumnsUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#ColumnsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.ColumnsUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#CopyTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRange.CopyTo(IXLCell target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#CopyTo(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRange.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#CreateTable">
            <summary>Задает заглушка IXLRange.CreateTable()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#CreateTable(System.String)">
            <summary>Задает заглушка IXLRange.CreateTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Delete(ClosedXML.Excel.XLShiftDeletedCells)">
            <summary>Задает заглушка IXLRange.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#FirstColumn(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#FirstColumnUsed(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#FirstColumnUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#FirstRow(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#FirstRowUsed(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#FirstRowUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#InsertColumnsAfter(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#InsertColumnsAfter(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertColumnsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#InsertColumnsBefore(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#InsertColumnsBefore(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertColumnsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#InsertRowsAbove(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#InsertRowsAbove(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#InsertRowsBelow(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#InsertRowsBelow(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#LastColumn(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#LastColumnUsed(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#LastColumnUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#LastRow(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#LastRowUsed(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#LastRowUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Range(ClosedXML.Excel.IXLRangeAddress)">
            <summary>Задает заглушка IXLRange.Range(IXLRangeAddress rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Range(System.String)">
            <summary>Задает заглушка IXLRange.Range(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Range(ClosedXML.Excel.IXLAddress,ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLRange.Range(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Range(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRange.Range(IXLCell firstCell, IXLCell lastCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Range(System.String,System.String)">
            <summary>Задает заглушка IXLRange.Range(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Range(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Range(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#RangeUsed">
            <summary>Задает заглушка IXLRange.RangeUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Ranges(System.String)">
            <summary>Задает заглушка IXLRange.Ranges(String ranges)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Row(System.Int32)">
            <summary>Задает заглушка IXLRange.Row(Int32 row)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#RowCount">
            <summary>Задает заглушка IXLRange.RowCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Rows(System.String)">
            <summary>Задает заглушка IXLRange.Rows(String rows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Rows(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.Rows(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Rows(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#RowsUsed(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.RowsUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#RowsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.RowsUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRange.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Sort">
            <summary>Задает заглушка IXLRange.Sort()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Sort(System.String,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRange.Sort(String columnsToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Sort(System.Int32,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRange.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#SortLeftToRight(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRange.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#Transpose(ClosedXML.Excel.XLTransposeOptions)">
            <summary>Задает заглушка IXLRange.Transpose(XLTransposeOptions transposeOption)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLTable.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#Field(System.String)">
            <summary>Задает заглушка IXLTable.Field(String fieldName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#Field(System.Int32)">
            <summary>Задает заглушка IXLTable.Field(Int32 fieldIndex)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#HeadersRow">
            <summary>Задает заглушка IXLTable.HeadersRow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetAutoFilter">
            <summary>Задает заглушка IXLTable.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetEmphasizeFirstColumn">
            <summary>Задает заглушка IXLTable.SetEmphasizeFirstColumn()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetEmphasizeFirstColumn(System.Boolean)">
            <summary>Задает заглушка IXLTable.SetEmphasizeFirstColumn(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetEmphasizeLastColumn">
            <summary>Задает заглушка IXLTable.SetEmphasizeLastColumn()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetEmphasizeLastColumn(System.Boolean)">
            <summary>Задает заглушка IXLTable.SetEmphasizeLastColumn(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowAutoFilter">
            <summary>Задает заглушка IXLTable.SetShowAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowAutoFilter(System.Boolean)">
            <summary>Задает заглушка IXLTable.SetShowAutoFilter(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowColumnStripes">
            <summary>Задает заглушка IXLTable.SetShowColumnStripes()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowColumnStripes(System.Boolean)">
            <summary>Задает заглушка IXLTable.SetShowColumnStripes(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowHeaderRow">
            <summary>Задает заглушка IXLTable.SetShowHeaderRow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowHeaderRow(System.Boolean)">
            <summary>Задает заглушка IXLTable.SetShowHeaderRow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowRowStripes">
            <summary>Задает заглушка IXLTable.SetShowRowStripes()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowRowStripes(System.Boolean)">
            <summary>Задает заглушка IXLTable.SetShowRowStripes(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowTotalsRow">
            <summary>Задает заглушка IXLTable.SetShowTotalsRow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#SetShowTotalsRow(System.Boolean)">
            <summary>Задает заглушка IXLTable.SetShowTotalsRow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#TotalsRow">
            <summary>Задает заглушка IXLTable.TotalsRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ColumnCount">
            <summary>Задает stub IXLRange.ColumnCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ColumnInt32">
            <summary>Задает stub IXLRange.Column(Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ColumnString">
            <summary>Задает stub IXLRange.Column(String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ColumnsFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.Columns(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ColumnsInt32Int32">
            <summary>Задает stub IXLRange.Columns(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ColumnsString">
            <summary>Задает stub IXLRange.Columns(String columns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ColumnsStringString">
            <summary>Задает stub IXLRange.Columns(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ColumnsUsedBooleanFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.ColumnsUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ColumnsUsedFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.ColumnsUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CopyToIXLCell">
            <summary>Задает stub IXLRange.CopyTo(IXLCell target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CopyToIXLRangeBase">
            <summary>Задает stub IXLRange.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CreateTable">
            <summary>Задает stub IXLRange.CreateTable()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.CreateTableString">
            <summary>Задает stub IXLRange.CreateTable(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.DataRangeGet">
            <summary>Задает stub IXLTable.get_DataRange()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.DeleteXLShiftDeletedCells">
            <summary>Задает stub IXLRange.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.EmphasizeFirstColumnGet">
            <summary>Задает stub IXLTable.get_EmphasizeFirstColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.EmphasizeFirstColumnSetBoolean">
            <summary>Задает stub IXLTable.set_EmphasizeFirstColumn(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.EmphasizeLastColumnGet">
            <summary>Задает stub IXLTable.get_EmphasizeLastColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.EmphasizeLastColumnSetBoolean">
            <summary>Задает stub IXLTable.set_EmphasizeLastColumn(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FieldInt32">
            <summary>Задает stub IXLTable.Field(Int32 fieldIndex)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FieldString">
            <summary>Задает stub IXLTable.Field(String fieldName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FieldsGet">
            <summary>Задает stub IXLTable.get_Fields()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstColumnFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.FirstColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstColumnUsedBooleanFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.FirstColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstColumnUsedFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.FirstColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstRowFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.FirstRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstRowUsedBooleanFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.FirstRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FirstRowUsedFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.FirstRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.HeadersRow">
            <summary>Задает stub IXLTable.HeadersRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.InsertColumnsAfterInt32">
            <summary>Задает stub IXLRange.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.InsertColumnsAfterInt32Boolean">
            <summary>Задает stub IXLRange.InsertColumnsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.InsertColumnsBeforeInt32">
            <summary>Задает stub IXLRange.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.InsertColumnsBeforeInt32Boolean">
            <summary>Задает stub IXLRange.InsertColumnsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.InsertRowsAboveInt32">
            <summary>Задает stub IXLRange.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.InsertRowsAboveInt32Boolean">
            <summary>Задает stub IXLRange.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.InsertRowsBelowInt32">
            <summary>Задает stub IXLRange.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.InsertRowsBelowInt32Boolean">
            <summary>Задает stub IXLRange.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastColumnFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.LastColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastColumnUsedBooleanFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.LastColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastColumnUsedFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.LastColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastRowFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.LastRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastRowUsedBooleanFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.LastRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.LastRowUsedFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.LastRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.NameGet">
            <summary>Задает stub IXLTable.get_Name()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.NameSetString">
            <summary>Задает stub IXLTable.set_Name(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RangeIXLAddressIXLAddress">
            <summary>Задает stub IXLRange.Range(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RangeIXLCellIXLCell">
            <summary>Задает stub IXLRange.Range(IXLCell firstCell, IXLCell lastCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RangeIXLRangeAddress">
            <summary>Задает stub IXLRange.Range(IXLRangeAddress rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RangeInt32Int32Int32Int32">
            <summary>Задает stub IXLRange.Range(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RangeString">
            <summary>Задает stub IXLRange.Range(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RangeStringString">
            <summary>Задает stub IXLRange.Range(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RangeUsed">
            <summary>Задает stub IXLRange.RangeUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RangesString">
            <summary>Задает stub IXLRange.Ranges(String ranges)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RowCount">
            <summary>Задает stub IXLRange.RowCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RowInt32">
            <summary>Задает stub IXLRange.Row(Int32 row)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RowsFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.Rows(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RowsInt32Int32">
            <summary>Задает stub IXLRange.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RowsString">
            <summary>Задает stub IXLRange.Rows(String rows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RowsUsedBooleanFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.RowsUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.RowsUsedFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.RowsUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetAutoFilter">
            <summary>Задает stub IXLTable.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetAutoFilter01">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRange.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetEmphasizeFirstColumn">
            <summary>Задает stub IXLTable.SetEmphasizeFirstColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetEmphasizeFirstColumnBoolean">
            <summary>Задает stub IXLTable.SetEmphasizeFirstColumn(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetEmphasizeLastColumn">
            <summary>Задает stub IXLTable.SetEmphasizeLastColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetEmphasizeLastColumnBoolean">
            <summary>Задает stub IXLTable.SetEmphasizeLastColumn(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowAutoFilter">
            <summary>Задает stub IXLTable.SetShowAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowAutoFilterBoolean">
            <summary>Задает stub IXLTable.SetShowAutoFilter(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowColumnStripes">
            <summary>Задает stub IXLTable.SetShowColumnStripes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowColumnStripesBoolean">
            <summary>Задает stub IXLTable.SetShowColumnStripes(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowHeaderRow">
            <summary>Задает stub IXLTable.SetShowHeaderRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowHeaderRowBoolean">
            <summary>Задает stub IXLTable.SetShowHeaderRow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowRowStripes">
            <summary>Задает stub IXLTable.SetShowRowStripes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowRowStripesBoolean">
            <summary>Задает stub IXLTable.SetShowRowStripes(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowTotalsRow">
            <summary>Задает stub IXLTable.SetShowTotalsRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SetShowTotalsRowBoolean">
            <summary>Задает stub IXLTable.SetShowTotalsRow(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowAutoFilterGet">
            <summary>Задает stub IXLTable.get_ShowAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowAutoFilterSetBoolean">
            <summary>Задает stub IXLTable.set_ShowAutoFilter(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowColumnStripesGet">
            <summary>Задает stub IXLTable.get_ShowColumnStripes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowColumnStripesSetBoolean">
            <summary>Задает stub IXLTable.set_ShowColumnStripes(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowHeaderRowGet">
            <summary>Задает stub IXLTable.get_ShowHeaderRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowHeaderRowSetBoolean">
            <summary>Задает stub IXLTable.set_ShowHeaderRow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowRowStripesGet">
            <summary>Задает stub IXLTable.get_ShowRowStripes()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowRowStripesSetBoolean">
            <summary>Задает stub IXLTable.set_ShowRowStripes(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowTotalsRowGet">
            <summary>Задает stub IXLTable.get_ShowTotalsRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ShowTotalsRowSetBoolean">
            <summary>Задает stub IXLTable.set_ShowTotalsRow(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.Sort">
            <summary>Задает stub IXLRange.Sort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SortColumnsGet">
            <summary>Задает stub IXLRange.get_SortColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SortInt32XLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRange.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SortLeftToRightXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRange.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SortRowsGet">
            <summary>Задает stub IXLRange.get_SortRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.SortStringXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRange.Sort(String columnsToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTable.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ThemeGet">
            <summary>Задает stub IXLTable.get_Theme()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ThemeSetXLTableTheme">
            <summary>Задает stub IXLTable.set_Theme(XLTableTheme value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.TotalsRow">
            <summary>Задает stub IXLTable.TotalsRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.TransposeXLTransposeOptions">
            <summary>Задает stub IXLRange.Transpose(XLTransposeOptions transposeOption)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTable.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#AutoFilter">
            <summary>Задает stub IXLTable.get_AutoFilter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#DataRange">
            <summary>Задает stub IXLTable.get_DataRange()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#EmphasizeFirstColumn">
            <summary>Задает stub IXLTable.get_EmphasizeFirstColumn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#EmphasizeLastColumn">
            <summary>Задает stub IXLTable.get_EmphasizeLastColumn()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#Fields">
            <summary>Задает stub IXLTable.get_Fields()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#Name">
            <summary>Задает stub IXLTable.get_Name()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#ShowAutoFilter">
            <summary>Задает stub IXLTable.get_ShowAutoFilter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#ShowColumnStripes">
            <summary>Задает stub IXLTable.get_ShowColumnStripes()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#ShowHeaderRow">
            <summary>Задает stub IXLTable.get_ShowHeaderRow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#ShowRowStripes">
            <summary>Задает stub IXLTable.get_ShowRowStripes()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#ShowTotalsRow">
            <summary>Задает stub IXLTable.get_ShowTotalsRow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#SortColumns">
            <summary>Задает stub IXLRange.get_SortColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRange#SortRows">
            <summary>Задает stub IXLRange.get_SortRows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLTable#Theme">
            <summary>Задает stub IXLTable.get_Theme()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTable.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLTableField">
            <summary>Тип заглушки ClosedXML.Excel.IXLTableField</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableField.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLTableField</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableField.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubIXLTableField.Name как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableField.AttachBackingFieldToTotalsRowFormulaA1">
            <summary>Присоединение делегатов для эмуляции StubIXLTableField.TotalsRowFormulaA1 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableField.AttachBackingFieldToTotalsRowFormulaR1C1">
            <summary>Присоединение делегатов для эмуляции StubIXLTableField.TotalsRowFormulaR1C1 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableField.AttachBackingFieldToTotalsRowFunction">
            <summary>Присоединение делегатов для эмуляции StubIXLTableField.TotalsRowFunction как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableField.AttachBackingFieldToTotalsRowLabel">
            <summary>Присоединение делегатов для эмуляции StubIXLTableField.TotalsRowLabel как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.IndexGet">
            <summary>Задает stub IXLTableField.get_Index()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.NameGet">
            <summary>Задает stub IXLTableField.get_Name()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.NameSetString">
            <summary>Задает stub IXLTableField.set_Name(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.TotalsRowFormulaA1Get">
            <summary>Задает stub IXLTableField.get_TotalsRowFormulaA1()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.TotalsRowFormulaA1SetString">
            <summary>Задает stub IXLTableField.set_TotalsRowFormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.TotalsRowFormulaR1C1Get">
            <summary>Задает stub IXLTableField.get_TotalsRowFormulaR1C1()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.TotalsRowFormulaR1C1SetString">
            <summary>Задает stub IXLTableField.set_TotalsRowFormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.TotalsRowFunctionGet">
            <summary>Задает stub IXLTableField.get_TotalsRowFunction()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.TotalsRowFunctionSetXLTotalsRowFunction">
            <summary>Задает stub IXLTableField.set_TotalsRowFunction(XLTotalsRowFunction value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.TotalsRowLabelGet">
            <summary>Задает stub IXLTableField.get_TotalsRowLabel()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableField.TotalsRowLabelSetString">
            <summary>Задает stub IXLTableField.set_TotalsRowLabel(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableField.cxml::ClosedXML#Excel#IXLTableField#Index">
            <summary>Задает stub IXLTableField.get_Index()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableField.cxml::ClosedXML#Excel#IXLTableField#Name">
            <summary>Задает stub IXLTableField.get_Name()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableField.cxml::ClosedXML#Excel#IXLTableField#TotalsRowFormulaA1">
            <summary>Задает stub IXLTableField.get_TotalsRowFormulaA1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableField.cxml::ClosedXML#Excel#IXLTableField#TotalsRowFormulaR1C1">
            <summary>Задает stub IXLTableField.get_TotalsRowFormulaR1C1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableField.cxml::ClosedXML#Excel#IXLTableField#TotalsRowFunction">
            <summary>Задает stub IXLTableField.get_TotalsRowFunction()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableField.cxml::ClosedXML#Excel#IXLTableField#TotalsRowLabel">
            <summary>Задает stub IXLTableField.get_TotalsRowLabel()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLTableRange">
            <summary>Тип заглушки ClosedXML.Excel.IXLTableRange</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLTableRange</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.AsTable">
            <summary>Задает stub IXLRange.AsTable()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.AsTableString">
            <summary>Задает stub IXLRange.AsTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLTableRange.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellIXLAddress">
            <summary>Задает stub IXLRange.Cell(IXLAddress cellAddressInRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellInt32Int32">
            <summary>Задает stub IXLRange.Cell(Int32 row, Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellInt32String">
            <summary>Задает stub IXLRange.Cell(Int32 row, String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellString">
            <summary>Задает stub IXLRange.Cell(String cellAddressInRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellsString">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ClearXLClearOptions">
            <summary>Задает stub IXLRange.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ClearXLClearOptions01">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#AsTable">
            <summary>Задает заглушка IXLRange.AsTable()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#AsTable(System.String)">
            <summary>Задает заглушка IXLRange.AsTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Cell(ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLRange.Cell(IXLAddress cellAddressInRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Cell(System.String)">
            <summary>Задает заглушка IXLRange.Cell(String cellAddressInRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Cell(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Cell(Int32 row, Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Cell(System.Int32,System.String)">
            <summary>Задает заглушка IXLRange.Cell(Int32 row, String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRange.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Column(System.String)">
            <summary>Задает заглушка IXLRange.Column(String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Column(System.Int32)">
            <summary>Задает заглушка IXLRange.Column(Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#ColumnCount">
            <summary>Задает заглушка IXLRange.ColumnCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Columns(System.String)">
            <summary>Задает заглушка IXLRange.Columns(String columns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Columns(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.Columns(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Columns(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Columns(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Columns(System.String,System.String)">
            <summary>Задает заглушка IXLRange.Columns(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#ColumnsUsed(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.ColumnsUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#ColumnsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.ColumnsUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#CopyTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRange.CopyTo(IXLCell target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#CopyTo(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRange.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#CreateTable">
            <summary>Задает заглушка IXLRange.CreateTable()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#CreateTable(System.String)">
            <summary>Задает заглушка IXLRange.CreateTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Delete(ClosedXML.Excel.XLShiftDeletedCells)">
            <summary>Задает заглушка IXLRange.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#FirstColumn(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#FirstColumnUsed(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#FirstColumnUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#FirstRow(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#FirstRowUsed(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#FirstRowUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.FirstRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#InsertColumnsAfter(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#InsertColumnsAfter(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertColumnsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#InsertColumnsBefore(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#InsertColumnsBefore(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertColumnsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#InsertRowsAbove(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#InsertRowsAbove(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#InsertRowsBelow(System.Int32)">
            <summary>Задает заглушка IXLRange.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#InsertRowsBelow(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRange.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#LastColumn(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#LastColumnUsed(System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#LastColumnUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeColumn,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#LastRow(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#LastRowUsed(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#LastRowUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.LastRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Range(ClosedXML.Excel.IXLRangeAddress)">
            <summary>Задает заглушка IXLRange.Range(IXLRangeAddress rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Range(System.String)">
            <summary>Задает заглушка IXLRange.Range(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Range(ClosedXML.Excel.IXLAddress,ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLRange.Range(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Range(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRange.Range(IXLCell firstCell, IXLCell lastCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Range(System.String,System.String)">
            <summary>Задает заглушка IXLRange.Range(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Range(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Range(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#RangeUsed">
            <summary>Задает заглушка IXLRange.RangeUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Ranges(System.String)">
            <summary>Задает заглушка IXLRange.Ranges(String ranges)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Row(System.Int32)">
            <summary>Задает заглушка IXLRange.Row(Int32 row)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#RowCount">
            <summary>Задает заглушка IXLRange.RowCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Rows(System.String)">
            <summary>Задает заглушка IXLRange.Rows(String rows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Rows(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.Rows(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Rows(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRange.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#RowsUsed(System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.RowsUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#RowsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRangeRow,System.Boolean})">
            <summary>Задает заглушка IXLRange.RowsUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRange.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Sort">
            <summary>Задает заглушка IXLRange.Sort()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Sort(System.Int32,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRange.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Sort(System.String,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRange.Sort(String columnsToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#SortLeftToRight(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRange.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#Transpose(ClosedXML.Excel.XLTransposeOptions)">
            <summary>Задает заглушка IXLRange.Transpose(XLTransposeOptions transposeOption)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#FirstRow(System.Func{ClosedXML.Excel.IXLTableRow,System.Boolean})">
            <summary>Задает заглушка IXLTableRange.FirstRow(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#FirstRowUsed(System.Func{ClosedXML.Excel.IXLTableRow,System.Boolean})">
            <summary>Задает заглушка IXLTableRange.FirstRowUsed(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#FirstRowUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLTableRow,System.Boolean})">
            <summary>Задает заглушка IXLTableRange.FirstRowUsed(Boolean includeFormats, Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#InsertRowsAbove(System.Int32)">
            <summary>Задает заглушка IXLTableRange.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#InsertRowsBelow(System.Int32)">
            <summary>Задает заглушка IXLTableRange.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#LastRow(System.Func{ClosedXML.Excel.IXLTableRow,System.Boolean})">
            <summary>Задает заглушка IXLTableRange.LastRow(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#LastRowUsed(System.Func{ClosedXML.Excel.IXLTableRow,System.Boolean})">
            <summary>Задает заглушка IXLTableRange.LastRowUsed(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#LastRowUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLTableRow,System.Boolean})">
            <summary>Задает заглушка IXLTableRange.LastRowUsed(Boolean includeFormats, Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#Row(System.Int32)">
            <summary>Задает заглушка IXLTableRange.Row(Int32 row)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#Rows(System.String)">
            <summary>Задает заглушка IXLTableRange.Rows(String rows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#Rows(System.Func{ClosedXML.Excel.IXLTableRow,System.Boolean})">
            <summary>Задает заглушка IXLTableRange.Rows(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#Rows(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLTableRange.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#RowsUsed(System.Func{ClosedXML.Excel.IXLTableRow,System.Boolean})">
            <summary>Задает заглушка IXLTableRange.RowsUsed(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#RowsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLTableRow,System.Boolean})">
            <summary>Задает заглушка IXLTableRange.RowsUsed(Boolean includeFormats, Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ColumnCount">
            <summary>Задает stub IXLRange.ColumnCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ColumnInt32">
            <summary>Задает stub IXLRange.Column(Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ColumnString">
            <summary>Задает stub IXLRange.Column(String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ColumnsFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.Columns(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ColumnsInt32Int32">
            <summary>Задает stub IXLRange.Columns(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ColumnsString">
            <summary>Задает stub IXLRange.Columns(String columns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ColumnsStringString">
            <summary>Задает stub IXLRange.Columns(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ColumnsUsedBooleanFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.ColumnsUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ColumnsUsedFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.ColumnsUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CopyToIXLCell">
            <summary>Задает stub IXLRange.CopyTo(IXLCell target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CopyToIXLRangeBase">
            <summary>Задает stub IXLRange.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CreateTable">
            <summary>Задает stub IXLRange.CreateTable()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.CreateTableString">
            <summary>Задает stub IXLRange.CreateTable(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.DeleteXLShiftDeletedCells">
            <summary>Задает stub IXLRange.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstColumnFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.FirstColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstColumnUsedBooleanFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.FirstColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstColumnUsedFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.FirstColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstRowFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.FirstRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstRowFuncOfIXLTableRowBoolean">
            <summary>Задает stub IXLTableRange.FirstRow(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstRowUsedBooleanFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.FirstRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstRowUsedBooleanFuncOfIXLTableRowBoolean">
            <summary>Задает stub IXLTableRange.FirstRowUsed(Boolean includeFormats, Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstRowUsedFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.FirstRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FirstRowUsedFuncOfIXLTableRowBoolean">
            <summary>Задает stub IXLTableRange.FirstRowUsed(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertColumnsAfterInt32">
            <summary>Задает stub IXLRange.InsertColumnsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertColumnsAfterInt32Boolean">
            <summary>Задает stub IXLRange.InsertColumnsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertColumnsBeforeInt32">
            <summary>Задает stub IXLRange.InsertColumnsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertColumnsBeforeInt32Boolean">
            <summary>Задает stub IXLRange.InsertColumnsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertRowsAboveInt32">
            <summary>Задает stub IXLTableRange.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertRowsAboveInt3201">
            <summary>Задает stub IXLRange.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertRowsAboveInt32Boolean">
            <summary>Задает stub IXLRange.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertRowsBelowInt32">
            <summary>Задает stub IXLTableRange.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertRowsBelowInt3201">
            <summary>Задает stub IXLRange.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.InsertRowsBelowInt32Boolean">
            <summary>Задает stub IXLRange.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastColumnFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.LastColumn(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastColumnUsedBooleanFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.LastColumnUsed(Boolean includeFormats, Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastColumnUsedFuncOfIXLRangeColumnBoolean">
            <summary>Задает stub IXLRange.LastColumnUsed(Func`2&lt;IXLRangeColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastRowFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.LastRow(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastRowFuncOfIXLTableRowBoolean">
            <summary>Задает stub IXLTableRange.LastRow(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastRowUsedBooleanFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.LastRowUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastRowUsedBooleanFuncOfIXLTableRowBoolean">
            <summary>Задает stub IXLTableRange.LastRowUsed(Boolean includeFormats, Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastRowUsedFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.LastRowUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.LastRowUsedFuncOfIXLTableRowBoolean">
            <summary>Задает stub IXLTableRange.LastRowUsed(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RangeIXLAddressIXLAddress">
            <summary>Задает stub IXLRange.Range(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RangeIXLCellIXLCell">
            <summary>Задает stub IXLRange.Range(IXLCell firstCell, IXLCell lastCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RangeIXLRangeAddress">
            <summary>Задает stub IXLRange.Range(IXLRangeAddress rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RangeInt32Int32Int32Int32">
            <summary>Задает stub IXLRange.Range(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RangeString">
            <summary>Задает stub IXLRange.Range(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RangeStringString">
            <summary>Задает stub IXLRange.Range(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RangeUsed">
            <summary>Задает stub IXLRange.RangeUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RangesString">
            <summary>Задает stub IXLRange.Ranges(String ranges)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowCount">
            <summary>Задает stub IXLRange.RowCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowInt32">
            <summary>Задает stub IXLTableRange.Row(Int32 row)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowInt3201">
            <summary>Задает stub IXLRange.Row(Int32 row)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.Rows(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsFuncOfIXLTableRowBoolean">
            <summary>Задает stub IXLTableRange.Rows(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsInt32Int32">
            <summary>Задает stub IXLTableRange.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsInt32Int3201">
            <summary>Задает stub IXLRange.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsString">
            <summary>Задает stub IXLTableRange.Rows(String rows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsString01">
            <summary>Задает stub IXLRange.Rows(String rows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsUsedBooleanFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.RowsUsed(Boolean includeFormats, Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsUsedBooleanFuncOfIXLTableRowBoolean">
            <summary>Задает stub IXLTableRange.RowsUsed(Boolean includeFormats, Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsUsedFuncOfIXLRangeRowBoolean">
            <summary>Задает stub IXLRange.RowsUsed(Func`2&lt;IXLRangeRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.RowsUsedFuncOfIXLTableRowBoolean">
            <summary>Задает stub IXLTableRange.RowsUsed(Func`2&lt;IXLTableRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.SetAutoFilter">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRange.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.Sort">
            <summary>Задает stub IXLRange.Sort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.SortColumnsGet">
            <summary>Задает stub IXLRange.get_SortColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.SortInt32XLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRange.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.SortLeftToRightXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRange.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.SortRowsGet">
            <summary>Задает stub IXLRange.get_SortRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.SortStringXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLRange.Sort(String columnsToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRange.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.TableGet">
            <summary>Задает stub IXLTableRange.get_Table()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.TransposeXLTransposeOptions">
            <summary>Задает stub IXLRange.Transpose(XLTransposeOptions transposeOption)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRange.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#SortColumns">
            <summary>Задает stub IXLRange.get_SortColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRange#SortRows">
            <summary>Задает stub IXLRange.get_SortRows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLTableRange#Table">
            <summary>Задает stub IXLTableRange.get_Table()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRange.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLTableRow">
            <summary>Тип заглушки ClosedXML.Excel.IXLTableRow</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLTableRow</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLTableRow.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellCount">
            <summary>Задает stub IXLRangeRow.CellCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellInt32">
            <summary>Задает stub IXLRangeRow.Cell(Int32 columnNumber)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellString">
            <summary>Задает stub IXLRangeRow.Cell(String columnLetter)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellsInt32Int32">
            <summary>Задает stub IXLRangeRow.Cells(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellsString">
            <summary>Задает stub IXLRangeRow.Cells(String cellsInRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellsString01">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellsStringString">
            <summary>Задает stub IXLRangeRow.Cells(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.ClearXLClearOptions">
            <summary>Задает stub IXLTableRow.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.ClearXLClearOptions01">
            <summary>Задает stub IXLRangeRow.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.ClearXLClearOptions02">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Cell(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.Cell(Int32 columnNumber)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Cell(System.String)">
            <summary>Задает заглушка IXLRangeRow.Cell(String columnLetter)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#CellCount">
            <summary>Задает заглушка IXLRangeRow.CellCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Cells(System.String)">
            <summary>Задает заглушка IXLRangeRow.Cells(String cellsInRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Cells(System.String,System.String)">
            <summary>Задает заглушка IXLRangeRow.Cells(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Cells(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRangeRow.Cells(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeRow.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#CopyTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeRow.CopyTo(IXLCell target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#CopyTo(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeRow.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Delete">
            <summary>Задает заглушка IXLRangeRow.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Delete(ClosedXML.Excel.XLShiftDeletedCells)">
            <summary>Задает заглушка IXLRangeRow.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertCellsAfter(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.InsertCellsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertCellsAfter(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.InsertCellsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertCellsBefore(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.InsertCellsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertCellsBefore(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.InsertCellsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertRowsAbove(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertRowsAbove(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertRowsBelow(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#InsertRowsBelow(System.Int32,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Row(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeRow.Row(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Row(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLRangeRow.Row(Int32 start, Int32 end)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#RowAbove">
            <summary>Задает заглушка IXLRangeRow.RowAbove()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#RowAbove(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.RowAbove(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#RowBelow">
            <summary>Задает заглушка IXLRangeRow.RowBelow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#RowBelow(System.Int32)">
            <summary>Задает заглушка IXLRangeRow.RowBelow(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#RowNumber">
            <summary>Задает заглушка IXLRangeRow.RowNumber()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#RowUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.RowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Rows(System.String)">
            <summary>Задает заглушка IXLRangeRow.Rows(String rows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#SetDataType(ClosedXML.Excel.XLCellValues)">
            <summary>Задает заглушка IXLRangeRow.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#Sort">
            <summary>Задает заглушка IXLRangeRow.Sort()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#SortLeftToRight(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLRangeRow.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeRow#WorksheetRow">
            <summary>Задает заглушка IXLRangeRow.WorksheetRow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLTableRow.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#Field(System.Int32)">
            <summary>Задает заглушка IXLTableRow.Field(Int32 index)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#Field(System.String)">
            <summary>Задает заглушка IXLTableRow.Field(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#InsertRowsAbove(System.Int32)">
            <summary>Задает заглушка IXLTableRow.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#InsertRowsBelow(System.Int32)">
            <summary>Задает заглушка IXLTableRow.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#RowAbove">
            <summary>Задает заглушка IXLTableRow.RowAbove()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#RowAbove(System.Int32)">
            <summary>Задает заглушка IXLTableRow.RowAbove(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#RowBelow">
            <summary>Задает заглушка IXLTableRow.RowBelow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#RowBelow(System.Int32)">
            <summary>Задает заглушка IXLTableRow.RowBelow(Int32 step)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#Sort">
            <summary>Задает заглушка IXLTableRow.Sort()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLTableRow#SortLeftToRight(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLTableRow.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CopyToIXLCell">
            <summary>Задает stub IXLRangeRow.CopyTo(IXLCell target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CopyToIXLRangeBase">
            <summary>Задает stub IXLRangeRow.CopyTo(IXLRangeBase target)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.Delete">
            <summary>Задает stub IXLRangeRow.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.DeleteXLShiftDeletedCells">
            <summary>Задает stub IXLRangeRow.Delete(XLShiftDeletedCells shiftDeleteCells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.FieldInt32">
            <summary>Задает stub IXLTableRow.Field(Int32 index)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.FieldString">
            <summary>Задает stub IXLTableRow.Field(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertCellsAfterInt32">
            <summary>Задает stub IXLRangeRow.InsertCellsAfter(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertCellsAfterInt32Boolean">
            <summary>Задает stub IXLRangeRow.InsertCellsAfter(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertCellsBeforeInt32">
            <summary>Задает stub IXLRangeRow.InsertCellsBefore(Int32 numberOfColumns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertCellsBeforeInt32Boolean">
            <summary>Задает stub IXLRangeRow.InsertCellsBefore(Int32 numberOfColumns, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertRowsAboveInt32">
            <summary>Задает stub IXLTableRow.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertRowsAboveInt3201">
            <summary>Задает stub IXLRangeRow.InsertRowsAbove(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertRowsAboveInt32Boolean">
            <summary>Задает stub IXLRangeRow.InsertRowsAbove(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertRowsBelowInt32">
            <summary>Задает stub IXLTableRow.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertRowsBelowInt3201">
            <summary>Задает stub IXLRangeRow.InsertRowsBelow(Int32 numberOfRows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.InsertRowsBelowInt32Boolean">
            <summary>Задает stub IXLRangeRow.InsertRowsBelow(Int32 numberOfRows, Boolean expandRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowAbove">
            <summary>Задает stub IXLTableRow.RowAbove()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowAbove01">
            <summary>Задает stub IXLRangeRow.RowAbove()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowAboveInt32">
            <summary>Задает stub IXLTableRow.RowAbove(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowAboveInt3201">
            <summary>Задает stub IXLRangeRow.RowAbove(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowBelow">
            <summary>Задает stub IXLTableRow.RowBelow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowBelow01">
            <summary>Задает stub IXLRangeRow.RowBelow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowBelowInt32">
            <summary>Задает stub IXLTableRow.RowBelow(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowBelowInt3201">
            <summary>Задает stub IXLRangeRow.RowBelow(Int32 step)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowIXLCellIXLCell">
            <summary>Задает stub IXLRangeRow.Row(IXLCell start, IXLCell end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowInt32Int32">
            <summary>Задает stub IXLRangeRow.Row(Int32 start, Int32 end)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowNumber">
            <summary>Задает stub IXLRangeRow.RowNumber()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowUsedBoolean">
            <summary>Задает stub IXLRangeRow.RowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.RowsString">
            <summary>Задает stub IXLRangeRow.Rows(String rows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.SetAutoFilter">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.SetDataTypeXLCellValues">
            <summary>Задает stub IXLRangeRow.SetDataType(XLCellValues dataType)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.Sort">
            <summary>Задает stub IXLTableRow.Sort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.Sort01">
            <summary>Задает stub IXLRangeRow.Sort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.SortLeftToRightXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLTableRow.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.SortLeftToRightXLSortOrderBooleanBoolean01">
            <summary>Задает stub IXLRangeRow.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRow.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRow.WorksheetRow">
            <summary>Задает stub IXLRangeRow.WorksheetRow()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRow.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLTableRows">
            <summary>Тип заглушки ClosedXML.Excel.IXLTableRows</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLTableRows</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.AddIXLTableRow">
            <summary>Задает stub IXLTableRows.Add(IXLTableRow tableRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLTableRows.Style как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.Cells">
            <summary>Задает stub IXLTableRows.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.CellsUsed">
            <summary>Задает stub IXLTableRows.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.CellsUsedBoolean">
            <summary>Задает stub IXLTableRows.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.ClearXLClearOptions">
            <summary>Задает stub IXLTableRows.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.cxml::ClosedXML#Excel#IXLTableRows#Add(ClosedXML.Excel.IXLTableRow)">
            <summary>Задает заглушка IXLTableRows.Add(IXLTableRow tableRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.cxml::ClosedXML#Excel#IXLTableRows#Cells">
            <summary>Задает заглушка IXLTableRows.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.cxml::ClosedXML#Excel#IXLTableRows#CellsUsed">
            <summary>Задает заглушка IXLTableRows.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.cxml::ClosedXML#Excel#IXLTableRows#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLTableRows.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.cxml::ClosedXML#Excel#IXLTableRows#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLTableRows.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.cxml::ClosedXML#Excel#IXLTableRows#Select">
            <summary>Задает заглушка IXLTableRows.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.Select">
            <summary>Задает stub IXLTableRows.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.StyleGet">
            <summary>Задает stub IXLTableRows.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTableRows.StyleSetIXLStyle">
            <summary>Задает stub IXLTableRows.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLTableRow}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTableRows.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTableRows.cxml::ClosedXML#Excel#IXLTableRows#Style">
            <summary>Задает stub IXLTableRows.get_Style()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLTables">
            <summary>Тип заглушки ClosedXML.Excel.IXLTables</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTables.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLTables</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTables.AddIXLTable">
            <summary>Задает stub IXLTables.Add(IXLTable table)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTables.ClearXLClearOptions">
            <summary>Задает stub IXLTables.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTables.cxml::ClosedXML#Excel#IXLTables#Add(ClosedXML.Excel.IXLTable)">
            <summary>Задает заглушка IXLTables.Add(IXLTable table)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTables.cxml::ClosedXML#Excel#IXLTables#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLTables.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTables.cxml::ClosedXML#Excel#IXLTables#Remove(System.Int32)">
            <summary>Задает заглушка IXLTables.Remove(Int32 index)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTables.cxml::ClosedXML#Excel#IXLTables#Remove(System.String)">
            <summary>Задает заглушка IXLTables.Remove(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTables.cxml::ClosedXML#Excel#IXLTables#Table(System.Int32)">
            <summary>Задает заглушка IXLTables.Table(Int32 index)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTables.cxml::ClosedXML#Excel#IXLTables#Table(System.String)">
            <summary>Задает заглушка IXLTables.Table(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTables.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTables.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTables.RemoveInt32">
            <summary>Задает stub IXLTables.Remove(Int32 index)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTables.RemoveString">
            <summary>Задает stub IXLTables.Remove(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTables.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLTable}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTables.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTables.TableInt32">
            <summary>Задает stub IXLTables.Table(Int32 index)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTables.TableString">
            <summary>Задает stub IXLTables.Table(String name)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLTheme">
            <summary>Тип заглушки ClosedXML.Excel.IXLTheme</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLTheme</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent1Get">
            <summary>Задает stub IXLTheme.get_Accent1()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent1SetXLColor">
            <summary>Задает stub IXLTheme.set_Accent1(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent2Get">
            <summary>Задает stub IXLTheme.get_Accent2()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent2SetXLColor">
            <summary>Задает stub IXLTheme.set_Accent2(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent3Get">
            <summary>Задает stub IXLTheme.get_Accent3()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent3SetXLColor">
            <summary>Задает stub IXLTheme.set_Accent3(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent4Get">
            <summary>Задает stub IXLTheme.get_Accent4()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent4SetXLColor">
            <summary>Задает stub IXLTheme.set_Accent4(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent5Get">
            <summary>Задает stub IXLTheme.get_Accent5()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent5SetXLColor">
            <summary>Задает stub IXLTheme.set_Accent5(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent6Get">
            <summary>Задает stub IXLTheme.get_Accent6()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Accent6SetXLColor">
            <summary>Задает stub IXLTheme.set_Accent6(XLColor value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToAccent1">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Accent1 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToAccent2">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Accent2 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToAccent3">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Accent3 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToAccent4">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Accent4 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToAccent5">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Accent5 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToAccent6">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Accent6 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToBackground1">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Background1 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToBackground2">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Background2 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToFollowedHyperlink">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.FollowedHyperlink как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToHyperlink">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Hyperlink как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToText1">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Text1 как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLTheme.AttachBackingFieldToText2">
            <summary>Присоединение делегатов для эмуляции StubIXLTheme.Text2 как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Background1Get">
            <summary>Задает stub IXLTheme.get_Background1()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Background1SetXLColor">
            <summary>Задает stub IXLTheme.set_Background1(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Background2Get">
            <summary>Задает stub IXLTheme.get_Background2()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Background2SetXLColor">
            <summary>Задает stub IXLTheme.set_Background2(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.FollowedHyperlinkGet">
            <summary>Задает stub IXLTheme.get_FollowedHyperlink()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.FollowedHyperlinkSetXLColor">
            <summary>Задает stub IXLTheme.set_FollowedHyperlink(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.HyperlinkGet">
            <summary>Задает stub IXLTheme.get_Hyperlink()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.HyperlinkSetXLColor">
            <summary>Задает stub IXLTheme.set_Hyperlink(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Text1Get">
            <summary>Задает stub IXLTheme.get_Text1()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Text1SetXLColor">
            <summary>Задает stub IXLTheme.set_Text1(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Text2Get">
            <summary>Задает stub IXLTheme.get_Text2()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLTheme.Text2SetXLColor">
            <summary>Задает stub IXLTheme.set_Text2(XLColor value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Accent1">
            <summary>Задает stub IXLTheme.get_Accent1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Accent2">
            <summary>Задает stub IXLTheme.get_Accent2()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Accent3">
            <summary>Задает stub IXLTheme.get_Accent3()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Accent4">
            <summary>Задает stub IXLTheme.get_Accent4()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Accent5">
            <summary>Задает stub IXLTheme.get_Accent5()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Accent6">
            <summary>Задает stub IXLTheme.get_Accent6()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Background1">
            <summary>Задает stub IXLTheme.get_Background1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Background2">
            <summary>Задает stub IXLTheme.get_Background2()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#FollowedHyperlink">
            <summary>Задает stub IXLTheme.get_FollowedHyperlink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Hyperlink">
            <summary>Задает stub IXLTheme.get_Hyperlink()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Text1">
            <summary>Задает stub IXLTheme.get_Text1()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLTheme.cxml::ClosedXML#Excel#IXLTheme#Text2">
            <summary>Задает stub IXLTheme.get_Text2()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLValidationCriteria">
            <summary>Тип заглушки ClosedXML.Excel.IXLValidationCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLValidationCriteria</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.BetweenIXLCellIXLCell">
            <summary>Задает stub IXLValidationCriteria.Between(IXLCell minValue, IXLCell maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.BetweenIXLRangeIXLRange">
            <summary>Задает stub IXLValidationCriteria.Between(IXLRange minValue, IXLRange maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.BetweenStringString">
            <summary>Задает stub IXLValidationCriteria.Between(String minValue, String maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#Between(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLValidationCriteria.Between(IXLCell minValue, IXLCell maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#Between(ClosedXML.Excel.IXLRange,ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLValidationCriteria.Between(IXLRange minValue, IXLRange maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#Between(System.String,System.String)">
            <summary>Задает заглушка IXLValidationCriteria.Between(String minValue, String maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#EqualOrGreaterThan(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLValidationCriteria.EqualOrGreaterThan(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#EqualOrGreaterThan(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLValidationCriteria.EqualOrGreaterThan(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#EqualOrGreaterThan(System.String)">
            <summary>Задает заглушка IXLValidationCriteria.EqualOrGreaterThan(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#EqualOrLessThan(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLValidationCriteria.EqualOrLessThan(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#EqualOrLessThan(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLValidationCriteria.EqualOrLessThan(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#EqualOrLessThan(System.String)">
            <summary>Задает заглушка IXLValidationCriteria.EqualOrLessThan(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#EqualTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLValidationCriteria.EqualTo(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#EqualTo(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLValidationCriteria.EqualTo(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#EqualTo(System.String)">
            <summary>Задает заглушка IXLValidationCriteria.EqualTo(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#GreaterThan(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLValidationCriteria.GreaterThan(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#GreaterThan(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLValidationCriteria.GreaterThan(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#GreaterThan(System.String)">
            <summary>Задает заглушка IXLValidationCriteria.GreaterThan(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#LessThan(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLValidationCriteria.LessThan(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#LessThan(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLValidationCriteria.LessThan(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#LessThan(System.String)">
            <summary>Задает заглушка IXLValidationCriteria.LessThan(String value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#NotBetween(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLValidationCriteria.NotBetween(IXLCell minValue, IXLCell maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#NotBetween(ClosedXML.Excel.IXLRange,ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLValidationCriteria.NotBetween(IXLRange minValue, IXLRange maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#NotBetween(System.String,System.String)">
            <summary>Задает заглушка IXLValidationCriteria.NotBetween(String minValue, String maxValue)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#NotEqualTo(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLValidationCriteria.NotEqualTo(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#NotEqualTo(ClosedXML.Excel.IXLRange)">
            <summary>Задает заглушка IXLValidationCriteria.NotEqualTo(IXLRange range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.cxml::ClosedXML#Excel#IXLValidationCriteria#NotEqualTo(System.String)">
            <summary>Задает заглушка IXLValidationCriteria.NotEqualTo(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.EqualOrGreaterThanIXLCell">
            <summary>Задает stub IXLValidationCriteria.EqualOrGreaterThan(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.EqualOrGreaterThanIXLRange">
            <summary>Задает stub IXLValidationCriteria.EqualOrGreaterThan(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.EqualOrGreaterThanString">
            <summary>Задает stub IXLValidationCriteria.EqualOrGreaterThan(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.EqualOrLessThanIXLCell">
            <summary>Задает stub IXLValidationCriteria.EqualOrLessThan(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.EqualOrLessThanIXLRange">
            <summary>Задает stub IXLValidationCriteria.EqualOrLessThan(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.EqualOrLessThanString">
            <summary>Задает stub IXLValidationCriteria.EqualOrLessThan(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.EqualToIXLCell">
            <summary>Задает stub IXLValidationCriteria.EqualTo(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.EqualToIXLRange">
            <summary>Задает stub IXLValidationCriteria.EqualTo(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.EqualToString">
            <summary>Задает stub IXLValidationCriteria.EqualTo(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.GreaterThanIXLCell">
            <summary>Задает stub IXLValidationCriteria.GreaterThan(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.GreaterThanIXLRange">
            <summary>Задает stub IXLValidationCriteria.GreaterThan(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.GreaterThanString">
            <summary>Задает stub IXLValidationCriteria.GreaterThan(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.LessThanIXLCell">
            <summary>Задает stub IXLValidationCriteria.LessThan(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.LessThanIXLRange">
            <summary>Задает stub IXLValidationCriteria.LessThan(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.LessThanString">
            <summary>Задает stub IXLValidationCriteria.LessThan(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.NotBetweenIXLCellIXLCell">
            <summary>Задает stub IXLValidationCriteria.NotBetween(IXLCell minValue, IXLCell maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.NotBetweenIXLRangeIXLRange">
            <summary>Задает stub IXLValidationCriteria.NotBetween(IXLRange minValue, IXLRange maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.NotBetweenStringString">
            <summary>Задает stub IXLValidationCriteria.NotBetween(String minValue, String maxValue)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.NotEqualToIXLCell">
            <summary>Задает stub IXLValidationCriteria.NotEqualTo(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.NotEqualToIXLRange">
            <summary>Задает stub IXLValidationCriteria.NotEqualTo(IXLRange range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLValidationCriteria.NotEqualToString">
            <summary>Задает stub IXLValidationCriteria.NotEqualTo(String value)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLWithRichString">
            <summary>Тип заглушки ClosedXML.Excel.IXLWithRichString</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWithRichString.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLWithRichString</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWithRichString.AddNewLine">
            <summary>Задает stub IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWithRichString.AddTextString">
            <summary>Задает stub IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWithRichString.cxml::ClosedXML#Excel#IXLWithRichString#AddNewLine">
            <summary>Задает заглушка IXLWithRichString.AddNewLine()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWithRichString.cxml::ClosedXML#Excel#IXLWithRichString#AddText(System.String)">
            <summary>Задает заглушка IXLWithRichString.AddText(String text)</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLWorksheet">
            <summary>Тип заглушки ClosedXML.Excel.IXLWorksheet</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLWorksheet</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ActiveCellGet">
            <summary>Задает stub IXLWorksheet.get_ActiveCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ActiveCellSetIXLCell">
            <summary>Задает stub IXLWorksheet.set_ActiveCell(IXLCell value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.AddConditionalFormat">
            <summary>Задает stub IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.AddToNamedString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.AddToNamedStringXLScope">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.AddToNamedStringXLScopeString">
            <summary>Задает stub IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.AsRange">
            <summary>Задает stub IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToActiveCell">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.ActiveCell как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToAuthor">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.Author как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToColumnWidth">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.ColumnWidth как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToName">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.Name как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToPosition">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.Position как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToRightToLeft">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.RightToLeft как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToRowHeight">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.RowHeight как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToShowFormulas">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.ShowFormulas как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToShowGridLines">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.ShowGridLines как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToShowOutlineSymbols">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.ShowOutlineSymbols как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToShowRowColHeaders">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.ShowRowColHeaders как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToShowRuler">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.ShowRuler как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToShowWhiteSpace">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.ShowWhiteSpace как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToShowZeros">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.ShowZeros как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToStyle">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.Style как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToTabActive">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.TabActive как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToTabColor">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.TabColor как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToTabSelected">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.TabSelected как свойства с резервным полем.</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.AttachBackingFieldToVisibility">
            <summary>Присоединение делегатов для эмуляции StubIXLWorksheet.Visibility как свойства с резервным полем.</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.AuthorGet">
            <summary>Задает stub IXLWorksheet.get_Author()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.AuthorSetString">
            <summary>Задает stub IXLWorksheet.set_Author(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.AutoFilterGet">
            <summary>Задает stub IXLWorksheet.get_AutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellIXLAddress">
            <summary>Задает stub IXLWorksheet.Cell(IXLAddress cellAddressInRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellInt32Int32">
            <summary>Задает stub IXLWorksheet.Cell(Int32 row, Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellInt32String">
            <summary>Задает stub IXLWorksheet.Cell(Int32 row, String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellString">
            <summary>Задает stub IXLWorksheet.Cell(String cellAddressInRange)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Cells">
            <summary>Задает stub IXLRangeBase.Cells()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellsFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellsString">
            <summary>Задает stub IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellsUsed">
            <summary>Задает stub IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellsUsedBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellsUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CellsUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ClearXLClearOptions">
            <summary>Задает stub IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#AddConditionalFormat">
            <summary>Задает заглушка IXLRangeBase.AddConditionalFormat()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#AddToNamed(System.String,ClosedXML.Excel.XLScope,System.String)">
            <summary>Задает заглушка IXLRangeBase.AddToNamed(String rangeName, XLScope scope, String comment)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#AsRange">
            <summary>Задает заглушка IXLRangeBase.AsRange()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Cells">
            <summary>Задает заглушка IXLRangeBase.Cells()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.String)">
            <summary>Задает заглушка IXLRangeBase.Cells(String cells)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Cells(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.Cells(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed">
            <summary>Задает заглушка IXLRangeBase.CellsUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#CellsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.CellsUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Clear(ClosedXML.Excel.XLClearOptions)">
            <summary>Задает заглушка IXLRangeBase.Clear(XLClearOptions clearOptions)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Contains(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Contains(System.String)">
            <summary>Задает заглушка IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#CreatePivotTable(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Задает заглушка IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#DeleteComments">
            <summary>Задает заглушка IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#FirstCell">
            <summary>Задает заглушка IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#FirstCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(ClosedXML.Excel.IXLRangeBase)">
            <summary>Задает заглушка IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Intersects(System.String)">
            <summary>Задает заглушка IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty">
            <summary>Задает заглушка IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#IsEmpty(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#IsMerged">
            <summary>Задает заглушка IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#LastCell">
            <summary>Задает заглушка IXLRangeBase.LastCell()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#LastCellUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLCell,System.Boolean})">
            <summary>Задает заглушка IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Merge">
            <summary>Задает заглушка IXLRangeBase.Merge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Merge(System.Boolean)">
            <summary>Задает заглушка IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Select">
            <summary>Задает заглушка IXLRangeBase.Select()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#SetAutoFilter">
            <summary>Задает заглушка IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#SetDataValidation">
            <summary>Задает заглушка IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#SetValue``1(``0)">
            <summary>Задает заглушка IXLRangeBase.SetValue(!!0 value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Unmerge">
            <summary>Задает заглушка IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Cell(ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLWorksheet.Cell(IXLAddress cellAddressInRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Cell(System.String)">
            <summary>Задает заглушка IXLWorksheet.Cell(String cellAddressInRange)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Cell(System.Int32,System.String)">
            <summary>Задает заглушка IXLWorksheet.Cell(Int32 row, String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Cell(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLWorksheet.Cell(Int32 row, Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#CollapseColumns">
            <summary>Задает заглушка IXLWorksheet.CollapseColumns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#CollapseColumns(System.Int32)">
            <summary>Задает заглушка IXLWorksheet.CollapseColumns(Int32 outlineLevel)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#CollapseRows">
            <summary>Задает заглушка IXLWorksheet.CollapseRows()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#CollapseRows(System.Int32)">
            <summary>Задает заглушка IXLWorksheet.CollapseRows(Int32 outlineLevel)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Column(System.String)">
            <summary>Задает заглушка IXLWorksheet.Column(String column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Column(System.Int32)">
            <summary>Задает заглушка IXLWorksheet.Column(Int32 column)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ColumnCount">
            <summary>Задает заглушка IXLWorksheet.ColumnCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Columns">
            <summary>Задает заглушка IXLWorksheet.Columns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Columns(System.String)">
            <summary>Задает заглушка IXLWorksheet.Columns(String columns)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Columns(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLWorksheet.Columns(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Columns(System.String,System.String)">
            <summary>Задает заглушка IXLWorksheet.Columns(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ColumnsUsed(System.Func{ClosedXML.Excel.IXLColumn,System.Boolean})">
            <summary>Задает заглушка IXLWorksheet.ColumnsUsed(Func`2&lt;IXLColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ColumnsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLColumn,System.Boolean})">
            <summary>Задает заглушка IXLWorksheet.ColumnsUsed(Boolean includeFormats, Func`2&lt;IXLColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#CopyTo(System.String)">
            <summary>Задает заглушка IXLWorksheet.CopyTo(String newSheetName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#CopyTo(ClosedXML.Excel.XLWorkbook,System.String)">
            <summary>Задает заглушка IXLWorksheet.CopyTo(XLWorkbook workbook, String newSheetName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#CopyTo(System.String,System.Int32)">
            <summary>Задает заглушка IXLWorksheet.CopyTo(String newSheetName, Int32 position)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#CopyTo(ClosedXML.Excel.XLWorkbook,System.String,System.Int32)">
            <summary>Задает заглушка IXLWorksheet.CopyTo(XLWorkbook workbook, String newSheetName, Int32 position)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Delete">
            <summary>Задает заглушка IXLWorksheet.Delete()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Evaluate(System.String)">
            <summary>Задает заглушка IXLWorksheet.Evaluate(String expression)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ExpandColumns">
            <summary>Задает заглушка IXLWorksheet.ExpandColumns()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ExpandColumns(System.Int32)">
            <summary>Задает заглушка IXLWorksheet.ExpandColumns(Int32 outlineLevel)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ExpandRows">
            <summary>Задает заглушка IXLWorksheet.ExpandRows()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ExpandRows(System.Int32)">
            <summary>Задает заглушка IXLWorksheet.ExpandRows(Int32 outlineLevel)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#FirstColumn">
            <summary>Задает заглушка IXLWorksheet.FirstColumn()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#FirstColumnUsed">
            <summary>Задает заглушка IXLWorksheet.FirstColumnUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#FirstColumnUsed(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.FirstColumnUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#FirstRow">
            <summary>Задает заглушка IXLWorksheet.FirstRow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#FirstRowUsed">
            <summary>Задает заглушка IXLWorksheet.FirstRowUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#FirstRowUsed(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.FirstRowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Hide">
            <summary>Задает заглушка IXLWorksheet.Hide()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#LastColumn">
            <summary>Задает заглушка IXLWorksheet.LastColumn()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#LastColumnUsed">
            <summary>Задает заглушка IXLWorksheet.LastColumnUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#LastColumnUsed(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.LastColumnUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#LastRow">
            <summary>Задает заглушка IXLWorksheet.LastRow()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#LastRowUsed">
            <summary>Задает заглушка IXLWorksheet.LastRowUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#LastRowUsed(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.LastRowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#NamedRange(System.String)">
            <summary>Задает заглушка IXLWorksheet.NamedRange(String rangeName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#PivotTable(System.String)">
            <summary>Задает заглушка IXLWorksheet.PivotTable(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Protect">
            <summary>Задает заглушка IXLWorksheet.Protect()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Protect(System.String)">
            <summary>Задает заглушка IXLWorksheet.Protect(String password)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Range(ClosedXML.Excel.IXLRangeAddress)">
            <summary>Задает заглушка IXLWorksheet.Range(IXLRangeAddress rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Range(System.String)">
            <summary>Задает заглушка IXLWorksheet.Range(String rangeAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Range(ClosedXML.Excel.IXLAddress,ClosedXML.Excel.IXLAddress)">
            <summary>Задает заглушка IXLWorksheet.Range(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Range(ClosedXML.Excel.IXLCell,ClosedXML.Excel.IXLCell)">
            <summary>Задает заглушка IXLWorksheet.Range(IXLCell firstCell, IXLCell lastCell)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Range(System.String,System.String)">
            <summary>Задает заглушка IXLWorksheet.Range(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Range(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Задает заглушка IXLWorksheet.Range(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#RangeUsed">
            <summary>Задает заглушка IXLWorksheet.RangeUsed()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#RangeUsed(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.RangeUsed(Boolean includeFormats)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Ranges(System.String)">
            <summary>Задает заглушка IXLWorksheet.Ranges(String ranges)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Row(System.Int32)">
            <summary>Задает заглушка IXLWorksheet.Row(Int32 row)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#RowCount">
            <summary>Задает заглушка IXLWorksheet.RowCount()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Rows">
            <summary>Задает заглушка IXLWorksheet.Rows()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Rows(System.String)">
            <summary>Задает заглушка IXLWorksheet.Rows(String rows)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Rows(System.Int32,System.Int32)">
            <summary>Задает заглушка IXLWorksheet.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#RowsUsed(System.Func{ClosedXML.Excel.IXLRow,System.Boolean})">
            <summary>Задает заглушка IXLWorksheet.RowsUsed(Func`2&lt;IXLRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#RowsUsed(System.Boolean,System.Func{ClosedXML.Excel.IXLRow,System.Boolean})">
            <summary>Задает заглушка IXLWorksheet.RowsUsed(Boolean includeFormats, Func`2&lt;IXLRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetRightToLeft">
            <summary>Задает заглушка IXLWorksheet.SetRightToLeft()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetRightToLeft(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetRightToLeft(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowFormulas">
            <summary>Задает заглушка IXLWorksheet.SetShowFormulas()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowFormulas(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetShowFormulas(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowGridLines">
            <summary>Задает заглушка IXLWorksheet.SetShowGridLines()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowGridLines(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetShowGridLines(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowOutlineSymbols">
            <summary>Задает заглушка IXLWorksheet.SetShowOutlineSymbols()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowOutlineSymbols(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetShowOutlineSymbols(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowRowColHeaders">
            <summary>Задает заглушка IXLWorksheet.SetShowRowColHeaders()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowRowColHeaders(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetShowRowColHeaders(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowRuler">
            <summary>Задает заглушка IXLWorksheet.SetShowRuler()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowRuler(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetShowRuler(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowWhiteSpace">
            <summary>Задает заглушка IXLWorksheet.SetShowWhiteSpace()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowWhiteSpace(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetShowWhiteSpace(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowZeros">
            <summary>Задает заглушка IXLWorksheet.SetShowZeros()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetShowZeros(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetShowZeros(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetTabActive">
            <summary>Задает заглушка IXLWorksheet.SetTabActive()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetTabActive(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetTabActive(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetTabColor(ClosedXML.Excel.XLColor)">
            <summary>Задает заглушка IXLWorksheet.SetTabColor(XLColor color)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetTabSelected">
            <summary>Задает заглушка IXLWorksheet.SetTabSelected()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SetTabSelected(System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SetTabSelected(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Sort">
            <summary>Задает заглушка IXLWorksheet.Sort()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Sort(System.String,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.Sort(String columnsToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Sort(System.Int32,ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SortLeftToRight(ClosedXML.Excel.XLSortOrder,System.Boolean,System.Boolean)">
            <summary>Задает заглушка IXLWorksheet.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Table(System.Int32)">
            <summary>Задает заглушка IXLWorksheet.Table(Int32 index)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Table(System.String)">
            <summary>Задает заглушка IXLWorksheet.Table(String name)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Unhide">
            <summary>Задает заглушка IXLWorksheet.Unhide()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Unprotect">
            <summary>Задает заглушка IXLWorksheet.Unprotect()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Unprotect(System.String)">
            <summary>Задает заглушка IXLWorksheet.Unprotect(String password)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CollapseColumns">
            <summary>Задает stub IXLWorksheet.CollapseColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CollapseColumnsInt32">
            <summary>Задает stub IXLWorksheet.CollapseColumns(Int32 outlineLevel)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CollapseRows">
            <summary>Задает stub IXLWorksheet.CollapseRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CollapseRowsInt32">
            <summary>Задает stub IXLWorksheet.CollapseRows(Int32 outlineLevel)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnCount">
            <summary>Задает stub IXLWorksheet.ColumnCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnInt32">
            <summary>Задает stub IXLWorksheet.Column(Int32 column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnString">
            <summary>Задает stub IXLWorksheet.Column(String column)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnWidthGet">
            <summary>Задает stub IXLWorksheet.get_ColumnWidth()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnWidthSetDouble">
            <summary>Задает stub IXLWorksheet.set_ColumnWidth(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Columns">
            <summary>Задает stub IXLWorksheet.Columns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnsInt32Int32">
            <summary>Задает stub IXLWorksheet.Columns(Int32 firstColumn, Int32 lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnsString">
            <summary>Задает stub IXLWorksheet.Columns(String columns)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnsStringString">
            <summary>Задает stub IXLWorksheet.Columns(String firstColumn, String lastColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnsUsedBooleanFuncOfIXLColumnBoolean">
            <summary>Задает stub IXLWorksheet.ColumnsUsed(Boolean includeFormats, Func`2&lt;IXLColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ColumnsUsedFuncOfIXLColumnBoolean">
            <summary>Задает stub IXLWorksheet.ColumnsUsed(Func`2&lt;IXLColumn,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ConditionalFormatsGet">
            <summary>Задает stub IXLWorksheet.get_ConditionalFormats()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ContainsIXLCell">
            <summary>Задает stub IXLRangeBase.Contains(IXLCell cell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ContainsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Contains(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ContainsString">
            <summary>Задает stub IXLRangeBase.Contains(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CopyToString">
            <summary>Задает stub IXLWorksheet.CopyTo(String newSheetName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CopyToStringInt32">
            <summary>Задает stub IXLWorksheet.CopyTo(String newSheetName, Int32 position)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CopyToXLWorkbookString">
            <summary>Задает stub IXLWorksheet.CopyTo(XLWorkbook workbook, String newSheetName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CopyToXLWorkbookStringInt32">
            <summary>Задает stub IXLWorksheet.CopyTo(XLWorkbook workbook, String newSheetName, Int32 position)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CreatePivotTableIXLCell">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.CreatePivotTableIXLCellString">
            <summary>Задает stub IXLRangeBase.CreatePivotTable(IXLCell targetCell, String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.DataTypeSetXLCellValues">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.DataValidationsGet">
            <summary>Задает stub IXLWorksheet.get_DataValidations()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Delete">
            <summary>Задает stub IXLWorksheet.Delete()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.DeleteComments">
            <summary>Задает stub IXLRangeBase.DeleteComments()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Dispose">
            <summary>Задает stub IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.EvaluateString">
            <summary>Задает stub IXLWorksheet.Evaluate(String expression)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ExpandColumns">
            <summary>Задает stub IXLWorksheet.ExpandColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ExpandColumnsInt32">
            <summary>Задает stub IXLWorksheet.ExpandColumns(Int32 outlineLevel)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ExpandRows">
            <summary>Задает stub IXLWorksheet.ExpandRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ExpandRowsInt32">
            <summary>Задает stub IXLWorksheet.ExpandRows(Int32 outlineLevel)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstCell">
            <summary>Задает stub IXLRangeBase.FirstCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstCellUsed">
            <summary>Задает stub IXLRangeBase.FirstCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.FirstCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstColumn">
            <summary>Задает stub IXLWorksheet.FirstColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstColumnUsed">
            <summary>Задает stub IXLWorksheet.FirstColumnUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstColumnUsedBoolean">
            <summary>Задает stub IXLWorksheet.FirstColumnUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstRow">
            <summary>Задает stub IXLWorksheet.FirstRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstRowUsed">
            <summary>Задает stub IXLWorksheet.FirstRowUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FirstRowUsedBoolean">
            <summary>Задает stub IXLWorksheet.FirstRowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FormulaA1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.FormulaR1C1SetString">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Hide">
            <summary>Задает stub IXLWorksheet.Hide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.HyperlinksGet">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.IntersectsIXLRangeBase">
            <summary>Задает stub IXLRangeBase.Intersects(IXLRangeBase range)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.IntersectsString">
            <summary>Задает stub IXLRangeBase.Intersects(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.IsEmpty">
            <summary>Задает stub IXLRangeBase.IsEmpty()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.IsEmptyBoolean">
            <summary>Задает stub IXLRangeBase.IsEmpty(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.IsMerged">
            <summary>Задает stub IXLRangeBase.IsMerged()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastCell">
            <summary>Задает stub IXLRangeBase.LastCell()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastCellUsed">
            <summary>Задает stub IXLRangeBase.LastCellUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastCellUsedBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastCellUsedBooleanFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Boolean includeFormats, Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastCellUsedFuncOfIXLCellBoolean">
            <summary>Задает stub IXLRangeBase.LastCellUsed(Func`2&lt;IXLCell,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastColumn">
            <summary>Задает stub IXLWorksheet.LastColumn()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastColumnUsed">
            <summary>Задает stub IXLWorksheet.LastColumnUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastColumnUsedBoolean">
            <summary>Задает stub IXLWorksheet.LastColumnUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastRow">
            <summary>Задает stub IXLWorksheet.LastRow()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastRowUsed">
            <summary>Задает stub IXLWorksheet.LastRowUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.LastRowUsedBoolean">
            <summary>Задает stub IXLWorksheet.LastRowUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Merge">
            <summary>Задает stub IXLRangeBase.Merge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.MergeBoolean">
            <summary>Задает stub IXLRangeBase.Merge(Boolean checkIntersect)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.MergedRangesGet">
            <summary>Задает stub IXLWorksheet.get_MergedRanges()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.NameGet">
            <summary>Задает stub IXLWorksheet.get_Name()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.NameSetString">
            <summary>Задает stub IXLWorksheet.set_Name(String value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.NamedRangeString">
            <summary>Задает stub IXLWorksheet.NamedRange(String rangeName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.NamedRangesGet">
            <summary>Задает stub IXLWorksheet.get_NamedRanges()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.OutlineGet">
            <summary>Задает stub IXLWorksheet.get_Outline()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.PageSetupGet">
            <summary>Задает stub IXLWorksheet.get_PageSetup()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.PivotTableString">
            <summary>Задает stub IXLWorksheet.PivotTable(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.PivotTablesGet">
            <summary>Задает stub IXLWorksheet.get_PivotTables()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.PositionGet">
            <summary>Задает stub IXLWorksheet.get_Position()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.PositionSetInt32">
            <summary>Задает stub IXLWorksheet.set_Position(Int32 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Protect">
            <summary>Задает stub IXLWorksheet.Protect()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ProtectString">
            <summary>Задает stub IXLWorksheet.Protect(String password)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ProtectionGet">
            <summary>Задает stub IXLWorksheet.get_Protection()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangeAddressGet">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangeIXLAddressIXLAddress">
            <summary>Задает stub IXLWorksheet.Range(IXLAddress firstCellAddress, IXLAddress lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangeIXLCellIXLCell">
            <summary>Задает stub IXLWorksheet.Range(IXLCell firstCell, IXLCell lastCell)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangeIXLRangeAddress">
            <summary>Задает stub IXLWorksheet.Range(IXLRangeAddress rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangeInt32Int32Int32Int32">
            <summary>Задает stub IXLWorksheet.Range(Int32 firstCellRow, Int32 firstCellColumn, Int32 lastCellRow, Int32 lastCellColumn)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangeString">
            <summary>Задает stub IXLWorksheet.Range(String rangeAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangeStringString">
            <summary>Задает stub IXLWorksheet.Range(String firstCellAddress, String lastCellAddress)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangeUsed">
            <summary>Задает stub IXLWorksheet.RangeUsed()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangeUsedBoolean">
            <summary>Задает stub IXLWorksheet.RangeUsed(Boolean includeFormats)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RangesString">
            <summary>Задает stub IXLWorksheet.Ranges(String ranges)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RightToLeftGet">
            <summary>Задает stub IXLWorksheet.get_RightToLeft()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RightToLeftSetBoolean">
            <summary>Задает stub IXLWorksheet.set_RightToLeft(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RowCount">
            <summary>Задает stub IXLWorksheet.RowCount()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RowHeightGet">
            <summary>Задает stub IXLWorksheet.get_RowHeight()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RowHeightSetDouble">
            <summary>Задает stub IXLWorksheet.set_RowHeight(Double value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RowInt32">
            <summary>Задает stub IXLWorksheet.Row(Int32 row)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Rows">
            <summary>Задает stub IXLWorksheet.Rows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RowsInt32Int32">
            <summary>Задает stub IXLWorksheet.Rows(Int32 firstRow, Int32 lastRow)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RowsString">
            <summary>Задает stub IXLWorksheet.Rows(String rows)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RowsUsedBooleanFuncOfIXLRowBoolean">
            <summary>Задает stub IXLWorksheet.RowsUsed(Boolean includeFormats, Func`2&lt;IXLRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.RowsUsedFuncOfIXLRowBoolean">
            <summary>Задает stub IXLWorksheet.RowsUsed(Func`2&lt;IXLRow,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Select">
            <summary>Задает stub IXLRangeBase.Select()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SelectedRangesGet">
            <summary>Задает stub IXLWorksheet.get_SelectedRanges()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetAutoFilter">
            <summary>Задает stub IXLRangeBase.SetAutoFilter()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetDataValidation">
            <summary>Задает stub IXLRangeBase.SetDataValidation()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetRightToLeft">
            <summary>Задает stub IXLWorksheet.SetRightToLeft()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetRightToLeftBoolean">
            <summary>Задает stub IXLWorksheet.SetRightToLeft(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowFormulas">
            <summary>Задает stub IXLWorksheet.SetShowFormulas()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowFormulasBoolean">
            <summary>Задает stub IXLWorksheet.SetShowFormulas(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowGridLines">
            <summary>Задает stub IXLWorksheet.SetShowGridLines()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowGridLinesBoolean">
            <summary>Задает stub IXLWorksheet.SetShowGridLines(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowOutlineSymbols">
            <summary>Задает stub IXLWorksheet.SetShowOutlineSymbols()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowOutlineSymbolsBoolean">
            <summary>Задает stub IXLWorksheet.SetShowOutlineSymbols(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowRowColHeaders">
            <summary>Задает stub IXLWorksheet.SetShowRowColHeaders()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowRowColHeadersBoolean">
            <summary>Задает stub IXLWorksheet.SetShowRowColHeaders(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowRuler">
            <summary>Задает stub IXLWorksheet.SetShowRuler()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowRulerBoolean">
            <summary>Задает stub IXLWorksheet.SetShowRuler(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowWhiteSpace">
            <summary>Задает stub IXLWorksheet.SetShowWhiteSpace()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowWhiteSpaceBoolean">
            <summary>Задает stub IXLWorksheet.SetShowWhiteSpace(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowZeros">
            <summary>Задает stub IXLWorksheet.SetShowZeros()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetShowZerosBoolean">
            <summary>Задает stub IXLWorksheet.SetShowZeros(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetTabActive">
            <summary>Задает stub IXLWorksheet.SetTabActive()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetTabActiveBoolean">
            <summary>Задает stub IXLWorksheet.SetTabActive(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetTabColorXLColor">
            <summary>Задает stub IXLWorksheet.SetTabColor(XLColor color)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetTabSelected">
            <summary>Задает stub IXLWorksheet.SetTabSelected()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetTabSelectedBoolean">
            <summary>Задает stub IXLWorksheet.SetTabSelected(Boolean value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.SetValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,ClosedXML.Excel.IXLRangeBase})">
            <summary>Задает заглушки SetValue(!!0 value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShareStringSetBoolean">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SheetViewGet">
            <summary>Задает stub IXLWorksheet.get_SheetView()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowFormulasGet">
            <summary>Задает stub IXLWorksheet.get_ShowFormulas()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowFormulasSetBoolean">
            <summary>Задает stub IXLWorksheet.set_ShowFormulas(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowGridLinesGet">
            <summary>Задает stub IXLWorksheet.get_ShowGridLines()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowGridLinesSetBoolean">
            <summary>Задает stub IXLWorksheet.set_ShowGridLines(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowOutlineSymbolsGet">
            <summary>Задает stub IXLWorksheet.get_ShowOutlineSymbols()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowOutlineSymbolsSetBoolean">
            <summary>Задает stub IXLWorksheet.set_ShowOutlineSymbols(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowRowColHeadersGet">
            <summary>Задает stub IXLWorksheet.get_ShowRowColHeaders()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowRowColHeadersSetBoolean">
            <summary>Задает stub IXLWorksheet.set_ShowRowColHeaders(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowRulerGet">
            <summary>Задает stub IXLWorksheet.get_ShowRuler()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowRulerSetBoolean">
            <summary>Задает stub IXLWorksheet.set_ShowRuler(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowWhiteSpaceGet">
            <summary>Задает stub IXLWorksheet.get_ShowWhiteSpace()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowWhiteSpaceSetBoolean">
            <summary>Задает stub IXLWorksheet.set_ShowWhiteSpace(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowZerosGet">
            <summary>Задает stub IXLWorksheet.get_ShowZeros()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ShowZerosSetBoolean">
            <summary>Задает stub IXLWorksheet.set_ShowZeros(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Sort">
            <summary>Задает stub IXLWorksheet.Sort()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SortColumnsGet">
            <summary>Задает stub IXLWorksheet.get_SortColumns()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SortInt32XLSortOrderBooleanBoolean">
            <summary>Задает stub IXLWorksheet.Sort(Int32 columnToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SortLeftToRightXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLWorksheet.SortLeftToRight(XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SortRowsGet">
            <summary>Задает stub IXLWorksheet.get_SortRows()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.SortStringXLSortOrderBooleanBoolean">
            <summary>Задает stub IXLWorksheet.Sort(String columnsToSortBy, XLSortOrder sortOrder, Boolean matchCase, Boolean ignoreBlanks)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.StyleGet">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.StyleSetIXLStyle">
            <summary>Задает stub IXLRangeBase.set_Style(IXLStyle value)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheet.global::System#IDisposable#Dispose">
            <summary>Задает заглушка IDisposable.Dispose()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.TabActiveGet">
            <summary>Задает stub IXLWorksheet.get_TabActive()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.TabActiveSetBoolean">
            <summary>Задает stub IXLWorksheet.set_TabActive(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.TabColorGet">
            <summary>Задает stub IXLWorksheet.get_TabColor()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.TabColorSetXLColor">
            <summary>Задает stub IXLWorksheet.set_TabColor(XLColor value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.TabSelectedGet">
            <summary>Задает stub IXLWorksheet.get_TabSelected()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.TabSelectedSetBoolean">
            <summary>Задает stub IXLWorksheet.set_TabSelected(Boolean value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.TableInt32">
            <summary>Задает stub IXLWorksheet.Table(Int32 index)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.TableString">
            <summary>Задает stub IXLWorksheet.Table(String name)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.TablesGet">
            <summary>Задает stub IXLWorksheet.get_Tables()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Unhide">
            <summary>Задает stub IXLWorksheet.Unhide()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Unmerge">
            <summary>Задает stub IXLRangeBase.Unmerge()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.Unprotect">
            <summary>Задает stub IXLWorksheet.Unprotect()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.UnprotectString">
            <summary>Задает stub IXLWorksheet.Unprotect(String password)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.ValueSetObject">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.VisibilityGet">
            <summary>Задает stub IXLWorksheet.get_Visibility()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.VisibilitySetXLWorksheetVisibility">
            <summary>Задает stub IXLWorksheet.set_Visibility(XLWorksheetVisibility value)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.WorkbookGet">
            <summary>Задает stub IXLWorksheet.get_Workbook()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheet.WorksheetGet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ActiveCell">
            <summary>Задает stub IXLWorksheet.get_ActiveCell()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Author">
            <summary>Задает stub IXLWorksheet.get_Author()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#AutoFilter">
            <summary>Задает stub IXLWorksheet.get_AutoFilter()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ColumnWidth">
            <summary>Задает stub IXLWorksheet.get_ColumnWidth()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ConditionalFormats">
            <summary>Задает stub IXLWorksheet.get_ConditionalFormats()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#DataType">
            <summary>Задает stub IXLRangeBase.set_DataType(XLCellValues value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#DataValidations">
            <summary>Задает stub IXLWorksheet.get_DataValidations()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#FormulaA1">
            <summary>Задает stub IXLRangeBase.set_FormulaA1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#FormulaR1C1">
            <summary>Задает stub IXLRangeBase.set_FormulaR1C1(String value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Hyperlinks">
            <summary>Задает stub IXLRangeBase.get_Hyperlinks()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#MergedRanges">
            <summary>Задает stub IXLWorksheet.get_MergedRanges()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Name">
            <summary>Задает stub IXLWorksheet.get_Name()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#NamedRanges">
            <summary>Задает stub IXLWorksheet.get_NamedRanges()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Outline">
            <summary>Задает stub IXLWorksheet.get_Outline()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#PageSetup">
            <summary>Задает stub IXLWorksheet.get_PageSetup()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#PivotTables">
            <summary>Задает stub IXLWorksheet.get_PivotTables()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Position">
            <summary>Задает stub IXLWorksheet.get_Position()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Protection">
            <summary>Задает stub IXLWorksheet.get_Protection()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#RangeAddress">
            <summary>Задает stub IXLRangeBase.get_RangeAddress()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#RightToLeft">
            <summary>Задает stub IXLWorksheet.get_RightToLeft()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#RowHeight">
            <summary>Задает stub IXLWorksheet.get_RowHeight()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SelectedRanges">
            <summary>Задает stub IXLWorksheet.get_SelectedRanges()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#ShareString">
            <summary>Задает stub IXLRangeBase.set_ShareString(Boolean value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SheetView">
            <summary>Задает stub IXLWorksheet.get_SheetView()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ShowFormulas">
            <summary>Задает stub IXLWorksheet.get_ShowFormulas()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ShowGridLines">
            <summary>Задает stub IXLWorksheet.get_ShowGridLines()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ShowOutlineSymbols">
            <summary>Задает stub IXLWorksheet.get_ShowOutlineSymbols()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ShowRowColHeaders">
            <summary>Задает stub IXLWorksheet.get_ShowRowColHeaders()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ShowRuler">
            <summary>Задает stub IXLWorksheet.get_ShowRuler()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ShowWhiteSpace">
            <summary>Задает stub IXLWorksheet.get_ShowWhiteSpace()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#ShowZeros">
            <summary>Задает stub IXLWorksheet.get_ShowZeros()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SortColumns">
            <summary>Задает stub IXLWorksheet.get_SortColumns()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#SortRows">
            <summary>Задает stub IXLWorksheet.get_SortRows()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Style">
            <summary>Задает stub IXLRangeBase.get_Style()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#TabActive">
            <summary>Задает stub IXLWorksheet.get_TabActive()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#TabColor">
            <summary>Задает stub IXLWorksheet.get_TabColor()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#TabSelected">
            <summary>Задает stub IXLWorksheet.get_TabSelected()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Tables">
            <summary>Задает stub IXLWorksheet.get_Tables()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Value">
            <summary>Задает stub IXLRangeBase.set_Value(Object value)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Visibility">
            <summary>Задает stub IXLWorksheet.get_Visibility()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLWorksheet#Workbook">
            <summary>Задает stub IXLWorksheet.get_Workbook()</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheet.cxml::ClosedXML#Excel#IXLRangeBase#Worksheet">
            <summary>Задает stub IXLRangeBase.get_Worksheet()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubIXLWorksheets">
            <summary>Тип заглушки ClosedXML.Excel.IXLWorksheets</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.#ctor">
            <summary>Инициализирует новый экземпляр type StubIXLWorksheets</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.AddDataSet">
            <summary>Задает stub IXLWorksheets.Add(DataSet dataSet)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.AddDataTable">
            <summary>Задает stub IXLWorksheets.Add(DataTable dataTable)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.AddDataTableString">
            <summary>Задает stub IXLWorksheets.Add(DataTable dataTable, String sheetName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.AddString">
            <summary>Задает stub IXLWorksheets.Add(String sheetName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.AddStringInt32">
            <summary>Задает stub IXLWorksheets.Add(String sheetName, Int32 position)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Add(System.Data.DataTable)">
            <summary>Задает заглушка IXLWorksheets.Add(DataTable dataTable)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Add(System.String)">
            <summary>Задает заглушка IXLWorksheets.Add(String sheetName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Add(System.Data.DataTable,System.String)">
            <summary>Задает заглушка IXLWorksheets.Add(DataTable dataTable, String sheetName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Add(System.String,System.Int32)">
            <summary>Задает заглушка IXLWorksheets.Add(String sheetName, Int32 position)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Add(System.Data.DataSet)">
            <summary>Задает заглушка IXLWorksheets.Add(DataSet dataSet)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Delete(System.Int32)">
            <summary>Задает заглушка IXLWorksheets.Delete(Int32 position)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Delete(System.String)">
            <summary>Задает заглушка IXLWorksheets.Delete(String sheetName)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#TryGetWorksheet(System.String,ClosedXML.Excel.IXLWorksheet@)">
            <summary>Задает заглушка IXLWorksheets.TryGetWorksheet(String sheetName, IXLWorksheet&amp; worksheet)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Worksheet(System.Int32)">
            <summary>Задает заглушка IXLWorksheets.Worksheet(Int32 position)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Worksheet(System.String)">
            <summary>Задает заглушка IXLWorksheets.Worksheet(String sheetName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.CountGet">
            <summary>Задает stub IXLWorksheets.get_Count()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.DeleteInt32">
            <summary>Задает stub IXLWorksheets.Delete(Int32 position)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.DeleteString">
            <summary>Задает stub IXLWorksheets.Delete(String sheetName)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.GetEnumerator">
            <summary>Задает stub IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.GetEnumerator01">
            <summary>Задает stub IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.global::System#Collections#Generic#IEnumerable{ClosedXML#Excel#IXLWorksheet}#GetEnumerator">
            <summary>Задает заглушка IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubIXLWorksheets.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Задает заглушка IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.TryGetWorksheetStringIXLWorksheetOut">
            <summary>Задает stub IXLWorksheets.TryGetWorksheet(String sheetName, IXLWorksheet&amp; worksheet)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.WorksheetInt32">
            <summary>Задает stub IXLWorksheets.Worksheet(Int32 position)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubIXLWorksheets.WorksheetString">
            <summary>Задает stub IXLWorksheets.Worksheet(String sheetName)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubIXLWorksheets.cxml::ClosedXML#Excel#IXLWorksheets#Count">
            <summary>Задает stub IXLWorksheets.get_Count()</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLDateCriteria">
            <summary>Тип заглушки ClosedXML.Excel.XLDateCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLDateCriteria.#ctor(ClosedXML.Excel.IXLDataValidation)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLDateCriteria.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLDateCriteria</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLDateCriteria.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLDateCriteria.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLDateCriteria.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLDecimalCriteria">
            <summary>Тип заглушки ClosedXML.Excel.XLDecimalCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLDecimalCriteria.#ctor(ClosedXML.Excel.IXLDataValidation)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLDecimalCriteria.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLDecimalCriteria</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLDecimalCriteria.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLDecimalCriteria.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLDecimalCriteria.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLDictionary`1">
            <summary>Тип заглушки ClosedXML.Excel.XLDictionary`1</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLDictionary`1.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLDictionary`1.#ctor(ClosedXML.Excel.XLDictionary{`0})">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLDictionary`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Задает заглушка Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubXLDictionary`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>Задает stub Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLDictionary`1.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLDictionary</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLDictionary`1.OnDeserialization(System.Object)">
            <summary>Задает заглушка Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:ClosedXML.Excel.Fakes.StubXLDictionary`1.OnDeserializationObject">
            <summary>Задает stub Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLDictionary`1.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLDictionary`1.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLDictionary`1.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLFormula">
            <summary>Тип заглушки ClosedXML.Excel.XLFormula</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLFormula.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLFormula.#ctor(ClosedXML.Excel.XLFormula)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLFormula.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLFormula.#ctor(System.Double)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLFormula.#ctor(System.Int32)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLFormula.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLFormula</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLFormula.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLFormula.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLFormula.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLHyperlink">
            <summary>Тип заглушки ClosedXML.Excel.XLHyperlink</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLHyperlink.#ctor(ClosedXML.Excel.IXLCell)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLHyperlink.#ctor(ClosedXML.Excel.IXLRangeBase)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLHyperlink.#ctor(System.Uri)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLHyperlink.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLHyperlink.#ctor(ClosedXML.Excel.IXLCell,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLHyperlink.#ctor(ClosedXML.Excel.IXLRangeBase,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLHyperlink.#ctor(System.Uri,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLHyperlink.#ctor(System.String,System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLHyperlink.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLHyperlink</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLHyperlink.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLHyperlink.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLHyperlink.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLPivotField">
            <summary>Тип заглушки ClosedXML.Excel.XLPivotField</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLPivotField.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLPivotField.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLPivotField</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLPivotField.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLPivotField.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLPivotField.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLPivotFields">
            <summary>Тип заглушки ClosedXML.Excel.XLPivotFields</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLPivotFields.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLPivotFields.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLPivotFields</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLPivotFields.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLPivotFields.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLPivotFields.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLTables">
            <summary>Тип заглушки ClosedXML.Excel.XLTables</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLTables.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLTables.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLTables</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLTables.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLTables.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLTables.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLTextLengthCriteria">
            <summary>Тип заглушки ClosedXML.Excel.XLTextLengthCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLTextLengthCriteria.#ctor(ClosedXML.Excel.IXLDataValidation)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLTextLengthCriteria.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLTextLengthCriteria</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLTextLengthCriteria.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLTextLengthCriteria.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLTextLengthCriteria.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLTimeCriteria">
            <summary>Тип заглушки ClosedXML.Excel.XLTimeCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLTimeCriteria.#ctor(ClosedXML.Excel.IXLDataValidation)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLTimeCriteria.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLTimeCriteria</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLTimeCriteria.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLTimeCriteria.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLTimeCriteria.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLWholeNumberCriteria">
            <summary>Тип заглушки ClosedXML.Excel.XLWholeNumberCriteria</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWholeNumberCriteria.#ctor(ClosedXML.Excel.IXLDataValidation)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWholeNumberCriteria.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLWholeNumberCriteria</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLWholeNumberCriteria.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLWholeNumberCriteria.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLWholeNumberCriteria.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLWorkbook">
            <summary>Тип заглушки ClosedXML.Excel.XLWorkbook</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWorkbook.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWorkbook.#ctor(System.IO.Stream)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWorkbook.#ctor(ClosedXML.Excel.XLEventTracking)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWorkbook.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWorkbook.#ctor(System.String,ClosedXML.Excel.XLEventTracking)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWorkbook.#ctor(System.IO.Stream,ClosedXML.Excel.XLEventTracking)">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWorkbook.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLWorkbook</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLWorkbook.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLWorkbook.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLWorkbook.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
        <member name="T:ClosedXML.Excel.Fakes.StubXLWorkbookProperties">
            <summary>Тип заглушки ClosedXML.Excel.XLWorkbookProperties</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWorkbookProperties.#ctor">
            <summary>Инициализирует новый экземпляр</summary>
        </member>
        <member name="M:ClosedXML.Excel.Fakes.StubXLWorkbookProperties.InitializeStub">
            <summary>Инициализирует новый экземпляр type StubXLWorkbookProperties</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLWorkbookProperties.CallBase">
            <summary>Получает или задает значение, указывающее, следует ли вызывать базовый метод вместо резервного поведения</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLWorkbookProperties.InstanceBehavior">
            <summary>Получает или задает поведение экземпляра.</summary>
        </member>
        <member name="P:ClosedXML.Excel.Fakes.StubXLWorkbookProperties.InstanceObserver">
            <summary>Получает или задает наблюдатель экземпляра.</summary>
        </member>
    </members>
</doc>
