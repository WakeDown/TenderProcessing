@using System.Web.Script.Serialization
@using DocumentFormat.OpenXml.Wordprocessing
@using TenderProcessingDataAccessLayer.Models

@{
    ViewBag.Title = "Расчет заявки";
    Layout = "~/Views/Shared/_MasterPage.cshtml";
    var serializer = new JavaScriptSerializer();
    var claim = (TenderClaim)ViewBag.Claim;
    var protectFacts = (List<ProtectFact>) ViewBag.ProtectFacts;
}
<style type="text/css">
    .claimInfoLabel {
        font-weight: bold;
        color: blue;
    }

    .claimInfoValueLabel {
        font-weight: bold;
    }

    .cell {
        border: 1px solid gray;
    }
</style>
<script type="text/javascript">
    var claim = @Html.Raw(serializer.Serialize(claim));
    var status = "@ViewBag.Status";
    var dealType = "@ViewBag.DealType";
    var protectFacts = @Html.Raw(serializer.Serialize(protectFacts));

    $(init);

    function init() {
        messageUi.initProgressImage();
        window.addEventListener("message", messageHandler, true);
        $("#butGetExcelFile").click(getExcelFileFromServer);
        $("#butUploadExcelFile").click(openFile);
        initProtectFactList();
        if (claim == null) {
            alert("Заявка не найдена\rили у Вас нет доступа к ней");
        } else {
            showClaimInfo(claim);
            initPositions(claim.Positions);
            setInfoForPositionRows();
            $("#butSendOnConfirm").click(sendOnConfirm);
            var noAction = true;
            var positionsLength = claim.Positions.length;
            for (var i = 0; i < positionsLength; i++) {
                var position = claim.Positions[i];
                if (position.State == 1 || position.state == 3) {
                    noAction = false;
                    break;
                }
            }
            if (noAction) {
                setPositionsToNoAction();
                $("#butSendOnConfirm").hide();
                $("#butGetExcelFile").hide();
                $("#butUploadExcelFile").hide();
            }
        }
    }

    function setInfoForPositionRows() {
        var positionsRows = $("[type='positionRow']", $("#positionsTable"));
        var positionsCount = 0;
        var calculateCount = 0;
        $.each(positionsRows, function(index, element) {
            element = $(element);
            positionsCount++;
            var idPosition = element.attr("positionId");
            var calcRowsCount = $("[type='positionCalculate'][calcPositionId='" + idPosition + "']", $("#positionsTable")).size();
            if (calcRowsCount == 0) {
                element.css("backgroundColor", "#e4b9b9");
            } else {
                element.css("backgroundColor", "#c1e2b3");
                calculateCount++;
            }
        });
        $("#positionCountLabel").text(positionsCount);
        $("#positionCalculateCountLabel").text(calculateCount);
    }

    function initProtectFactList() {
        var list = $("[modetype='calculateProtectFact']", $("#calculatePositionTable"));
        list.append("<option value='null'>--Факт получения защиты--</option>");
        var protectLength = protectFacts.length;
        for (var i = 0; i < protectLength; i++) {
            var model = protectFacts[i];
            var option = $("<option value='" + model.Id + "'>" + model.Value + "</option>");
            list.append(option);
        }
    }

    function getProtectFactById(id) {
        var model = null;
        var protectLength = protectFacts.length;
        for (var i = 0; i < protectLength; i++) {
            var protect = protectFacts[i];
            if (protect.id == id) {
                model = protect;
                break;
            }
        }
        return model;
    }

    function openFile() {
        var obj = {
            type: "mainWindow",
            error: false,
            message: "openFile"
        }
        var message = JSON.stringify(obj);
        sendMessage(message);
    }

    function sendMessage(message) {
        var target = getTargetOrigin();
        document.getElementById("uploadFile").contentWindow.postMessage(message, target);
    }

    function getTargetOrigin() {
        var url = document.location.href;
        url = url.replace("http://", "");
        var index = url.indexOf("/");
        url = url.substr(0, index);
        url = "http://" + url;
        return url;
    }

    function messageHandler(e) {
        var data = e.data;
        var obj = $.parseJSON(data);
        if (obj.type.trim() == "UploadFrameLoaded") {
            $("#butUploadExcelFile").show();
        }
        if (obj.type.trim() == "DownloadExcel") {
            if (obj.error == true) {
                alert("Ошибка при скачивании файла!");
            }
        }
        if (obj.type.trim() == "UploadExcel") {
            if (obj.error == true) {
                alert(obj.message);
            }
        }
        if (obj.type.trim() == "UploadExcelResult") {
            alert(obj.message);
            if (!obj.error) {
                $("#positionsTable").empty();
                var positions = obj.positions;
                var positionLength = claim.Positions.length;
                for (var i = 0; i < positionLength; i++) {
                    var position = claim.Positions[i];
                    position.Calculations = [];
                    var serverPosition = getPosition(positions, position.Id);
                    if (serverPosition != null) {
                        position.Calculations = serverPosition.Calculations;
                    }
                }
                initPositions(claim.Positions);
            } 
        }
    }

    function getPosition(arr, id) {
        var position = null;
        var arrLength = arr.length;
        for (var i = 0; i < arrLength; i++) {
            var model = arr[i];
            if (model.Id == id) {
                position = model;
                break;
            }
        }
        return position;
    }

    function getExcelFileFromServer() {
        $("body").append("<iframe src='/Calc/GetSpecificationFile?claimId=" + claim.Id + "' width='0' height='0' style='display: none;' align='left'></iframe>");
    }

    function sendOnConfirm() {
        $.ajax({
            url: "/Calc/SetPositionToConfirm?idClaim=" + claim.Id,
            type: 'GET',
            contentType: 'application/json; charset = utf-8 ',
            success: function(data) {
                if (data.IsComplete) {
                    $("#butSendOnConfirm").hide();
                    $("#butGetExcelFile").hide();
                    $("#butUploadExcelFile").hide();
                    setPositionsToNoAction();
                } else {
                    alert(data.Message);
                }
            }
        });
    }

    function setPositionsToNoAction() {
        var table = $("#positionsTable");
        var addCalcButtons = $("[modetype='addCalcButton']", table);
        addCalcButtons.hide();
        var calcRows = $("[type='positionCalculate']", table);
        $.each(calcRows, function(index, elem) {
            if (elem.hasAttribute("calcId")) {
                setCalculatePositionReadOnly($(elem));
                $("[type='actionPanel']", $(elem)).remove();
            } else {
                $(elem).remove();
            }
        });
    }

    function initPositions(positions) {
        if (positions == null) return;
        var container = $("#positionsTable");
        var positionsLength = positions.length;
        for (var i = 0; i < positionsLength; i++) {
            var position = positions[i];
            var element = getPositionElement(position);
            $("[modetype='rowNumber']", element).text(i + 1);
            container.append(element);
            var lastElement = element;
            if (position.Calculations != null) {
                var calculationsLength = position.Calculations.length;
                for (var j = 0; j < calculationsLength; j++) {
                    var calculation = position.Calculations[j];
                    var calcRow = getCalculatePositionElement();
                    calcRow.attr("calcPositionId", position.Id);
                    calcRow.attr("calcId", calculation.Id);
                    var saveCalculationButton = $("[modetype='saveCalcButton']", calcRow);
                    saveCalculationButton.click(saveCalculate);
                    var cancelCalculationButton = $("[modetype='cancelCalcButton']", calcRow);
                    cancelCalculationButton.click(cancelCalculate);
                    var deleteCalculationButton = $("[modetype='deleteCalcButton']", calcRow);
                    deleteCalculationButton.click(deleteCalculate);
                    var editCalculationButton = $("[modetype='editCalcButton']", calcRow);
                    editCalculationButton.click(editCalculateButtonClick);
                    var editCalculationButtonOk = $("[modetype='editCalcButtonOk']", calcRow);
                    editCalculationButtonOk.click(editCalculate);
                    var editCalculationButtonCancel = $("[modetype='editCalcButtonCancel']", calcRow);
                    editCalculationButtonCancel.click(editCalculateCancel);
                    deleteCalculationButton.hide();
                    lastElement.after(calcRow);
                    lastElement = calcRow;
                    calcRow.show();
                    $("[modetype='saveCalcButton']", calcRow).show();
                    $("[modetype='cancelCalcButton']", calcRow).show();
                    $("[modetype='calculateCatalogNumber']", calcRow).val(calculation.CatalogNumber);
                    $("[modetype='calculateName']", calcRow).val(calculation.Name);
                    $("[modetype='calculateReplace']", calcRow).val(calculation.Replace);
                    $("[modetype='calculatePriceUsd']", calcRow).val(calculation.PriceUsd != 0 ? calculation.PriceUsd : "");
                    if (calculation.PriceUsd == 0) {
                        $("[modetype='calculatePriceUsdValueLabelPostix']", calcRow).hide();
                    } else {
                        $("[modetype='calculatePriceUsdValueLabelPostix']", calcRow).show();
                    }
                    $("[modetype='calculateSumUsd']", calcRow).val(calculation.SumUsd ? calculation.SumUsd : "");
                    if (calculation.SumUsd == 0) {
                        $("[modetype='calculateSumUsdValueLabelPostix']", calcRow).hide();
                    } else {
                        $("[modetype='calculateSumUsdValueLabelPostix']", calcRow).show();
                    }
                    $("[modetype='calculatePriceRub']", calcRow).val(calculation.PriceRub ? calculation.PriceRub : "");
                    if (calculation.PriceRub == 0) {
                        $("[modetype='calculatePriceRubValueLabelPostix']", calcRow).hide();
                    } else {
                        $("[modetype='calculatePriceRubValueLabelPostix']", calcRow).show();
                    }
                    $("[modetype='calculateSumRub']", calcRow).val(calculation.SumRub);
                    $("[modetype='calculateProvider']", calcRow).val(calculation.Provider);
                    $("[modetype='calculateProtectCondition']", calcRow).val(calculation.ProtectCondition);
                    $("[modetype='calculateComment']", calcRow).val(calculation.Comment);
                    var providerFact = $("[modetype='calculateProtectFact']", calcRow);
                    $("[value='" + calculation.ProtectFact.Id + "']", providerFact).attr("selected", "selected");
                    $("[modetype='saveCalcButton']", calcRow).hide();
                    $("[modetype='cancelCalcButton']", calcRow).hide();
                    $("[type='editPositionPanel']", calcRow).show();
                    $("[modetype='deleteCalcButton']", calcRow).show();
                    setCalculatePositionReadOnly(calcRow);
                }
            }
        }
    }

    function showClaimInfo(model) {
        $("#claimId").text(model.Id);
        $("#claimCustomer").text(model.Customer + " " + model.CustomerInn);
        $("#claimTenderStart").text(model.TenderStartString);
        $("#claimDeadline").text(model.ClaimDeadlineString);
        $("#kPDeadline").text(model.KPDeadlineString);
        $("#claimManager").text(model.Manager.Name);
        $("#managerSubDivision").text(model.Manager.SubDivision);
        $("#managerChief").text(model.Manager.Chief);
        $("#claimDealType").text(dealType);
        var sum = "";
        if (model.Sum > 0) {
            sum = model.Sum.toFixed(2);
        }
        $("#claimSum").text(sum);
        if (sum == "") {
            $("#claimSumPostfix").hide();
        } else {
            $("#claimSumPostfix").show();
        }
        $("#claimTenderNumber").text(model.TenderNumber);
        $("#claimTenderStatus").text(status);
        if (model.TenderUrl != "") {
            var link = $("<a href='" + model.TenderUrl + "' target='blank'>[ссылка]</a>");
            $("#claimTenderUrl").append(link);   
        }
    }

    function getPositionElement(position) {
        var element = $("#positionElementTemplate").clone();
        element.removeAttr("id");
        element.show();
        element.attr("positionId", position.Id);
        element.attr("type", "positionRow");
        $("[type='catalogNumberLabel']", element).text(position.CatalogNumber);
        $("[type='nameLabel']", element).text(position.Name);
        $("[type='replaceLabel']", element).text(position.Replace);
        $("[type='unitLabel']", element).text(getUnitString(position.Unit));
        $("[type='valueLabel']", element).text(position.Value);
        $("[type='commentLabel']", element).text(position.Comment);
        var price = "";
        if (position.Price != 0) price = position.Price.toFixed(2);
        $("[type='priceLabel']", element).text(price);
        if (price == "") {
            $("[type='priceLabelPostfix']", element).hide();
        } else {
            $("[type='priceLabelPostfix']", element).show();
        }
        var sum = "";
        if (position.Sum != 0) sum = position.Sum.toFixed(2);
        $("[type='sumLabel']", element).text(sum);
        if (sum == "") {
            $("[type='sumLabelPostfix']", element).hide();
        } else {
            $("[type='sumLabelPostfix']", element).show();
        }
        var addCalculateButton = $("[modetype='addCalcButton']", element);
        addCalculateButton.click(addCalculateButtonClick);
        return element;
    }

    function deleteCalculate(e) {
        var button = $(e.currentTarget);
        var row = button.closest("[type='positionCalculate']");
        var calculateId = row.attr("calcId");
        var initalBackGround = row.css("background-color");
        row.css("backgroundColor", "rgb(190, 160, 230)");
        var deleted = confirm("Вы уверены что хотите удалить выделенную запись?");
        row.css("backgroundColor", initalBackGround);
        if (deleted) {
            $.ajax({
                url: "/Calc/Delete?id=" + calculateId,
                type: 'GET',
                contentType: 'application/json; charset = utf-8 ',
                success: function(data) {
                    if (data.IsComplete) {
                        row.remove();
                        setInfoForPositionRows();
                    } else {
                        alert("Запись не удалена");
                    }
                }
            });
        }
    }

    function editCalculateButtonClick(e) {
        var button = $(e.currentTarget);
        var row = button.parent().parent().parent().parent().parent().parent();
        button.hide();
        $("[modetype='deleteCalcButton']", row).hide();
        $("[type='editPositionActionPanel']", row).show();
        $("table", row).css("backgroundColor", "rgb(200, 230, 255)");
        var controlTypeNames = ["calculateCatalogNumber", "calculateName", "calculateReplace", "calculatePriceUsd", "calculateSumUsd", "calculatePriceRub", "calculateSumRub", "calculateProvider", "calculateProtectCondition", "calculateComment"];
        var controlTypeNamesLength = controlTypeNames.length;
        for (var i = 0; i < controlTypeNamesLength; i++) {
            var controlTypeName = controlTypeNames[i];
            var control = $("[modetype='" + controlTypeName + "']", row);
            var label = $("[modetype='" + controlTypeName + "ValueLabel']", row);
            var value = label.text().trim();
            control.val(value);
        }
        var providerFact = $("[modetype='calculateProtectFact']", row);
        var providerFactValue = $("[modetype='calculateProtectFactValueLabel']", row).attr("val");
        $("[value='" + providerFactValue + "']", providerFact).attr("selected", "selected");
        $("[ type='readOnlyModeView']", row).hide();
        $("[ type='editModeView']", row).show();

    }

    function editCalculate(e) {
        var button = $(e.currentTarget);
        var row = button.closest("[type='positionCalculate']");
        var obj = getCalculatePositionModelForPosition(row);
        if (!obj.isValid) {
            alert(obj.message);
        } else {
            var model = obj.model;
            model.Id = Number(row.attr("calcId"));
            $.ajax({
                url: "/Calc/Edit",
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify(model),
                processData: false,
                contentType: 'application/json; charset = utf-8 ',
                success: function(data) {
                    if (data.IsComplete) {
                        if (model.PriceUsd == 0) {
                            $("[modetype='calculatePriceUsdValueLabelPostix']", row).hide();
                        } else {
                            $("[modetype='calculatePriceUsdValueLabelPostix']", row).show();
                        }
                        if (model.SumUsd == 0) {
                            $("[modetype='calculateSumUsdValueLabelPostix']", row).hide();
                        } else {
                            $("[modetype='calculateSumUsdValueLabelPostix']", row).show();
                        }
                        if (model.PriceRub == 0) {
                            $("[modetype='calculatePriceRubValueLabelPostix']", row).hide();
                        } else {
                            $("[modetype='calculatePriceRubValueLabelPostix']", row).show();
                        }
                        $("[modetype='deleteCalcButton']", row).show();
                        $("[type='editPositionActionPanel']", row).hide();
                        $("[modetype='editCalcButton']", row).show();
                        setCalculatePositionReadOnly(row);
                    } else {
                        alert("Ошибка при изменении расчета");
                    }
                }
            });
        }
    }

    function editCalculateCancel(e) {
        var button = $(e.currentTarget);
        var row = button.closest("[type='positionCalculate']");
        $("[modetype='deleteCalcButton']", row).show();
        $("[type='editPositionActionPanel']", row).hide();
        $("[modetype='editCalcButton']", row).show();
        $("table", row).css("backgroundColor", "rgb(230, 230, 255)");
        $("[ type='readOnlyModeView']", row).show();
        $("[ type='editModeView']", row).hide();
    }

    function addCalculateButtonClick(e) {
        var button = $(e.currentTarget);
        var row = button.parent().parent();
        var calcRow = getCalculatePositionElement();
        calcRow.attr("calcPositionId", row.attr("positionId"));
        var saveCalculationButton = $("[modetype='saveCalcButton']", calcRow);
        saveCalculationButton.click(saveCalculate);
        var cancelCalculationButton = $("[modetype='cancelCalcButton']", calcRow);
        cancelCalculationButton.click(cancelCalculate);
        var deleteCalculationButton = $("[modetype='deleteCalcButton']", calcRow);
        deleteCalculationButton.click(deleteCalculate);
        var editCalculationButton = $("[modetype='editCalcButton']", calcRow);
        editCalculationButton.click(editCalculateButtonClick);
        var editCalculationButtonOk = $("[modetype='editCalcButtonOk']", calcRow);
        editCalculationButtonOk.click(editCalculate);
        var editCalculationButtonCancel = $("[modetype='editCalcButtonCancel']", calcRow);
        editCalculationButtonCancel.click(editCalculateCancel);
        deleteCalculationButton.hide();
        $("[type='editPositionPanel']", row).hide();
        row.after(calcRow);
        calcRow.show();
        $("[modetype='saveCalcButton']", calcRow).show();
        $("[modetype='cancelCalcButton']", calcRow).show();
    }

    function saveCalculate(e) {
        var button = $(e.currentTarget);
        var row = button.closest("[type='positionCalculate']");
        var obj = getCalculatePositionModelForPosition(row);
        if (!obj.isValid) {
            alert(obj.message);
        } else {
            var model = obj.model;
            model.IdSpecificationPosition = Number(row.attr("calcPositionId"));
            model.IdTenderClaim = claim.Id;
            $.ajax({
                url: "/Calc/Save",
                type: 'POST',
                dataType: 'json',
                data: JSON.stringify(model),
                processData: false,
                contentType: 'application/json; charset = utf-8 ',
                success: function(data) {
                    if (data.IsComplete) {
                        if (model.PriceUsd == 0) {
                            $("[modetype='calculatePriceUsdValueLabelPostix']", row).hide();
                        } else {
                            $("[modetype='calculatePriceUsdValueLabelPostix']", row).show();
                        }
                        if (model.SumUsd == 0) {
                            $("[modetype='calculateSumUsdValueLabelPostix']", row).hide();
                        } else {
                            $("[modetype='calculateSumUsdValueLabelPostix']", row).show();
                        }
                        if (model.PriceRub == 0) {
                            $("[modetype='calculatePriceRubValueLabelPostix']", row).hide();
                        } else {
                            $("[modetype='calculatePriceRubValueLabelPostix']", row).show();
                        }
                        row.attr("calcId", data.Id);
                        button.hide();
                        $("[modetype='saveCalcButton']", row).hide();
                        $("[modetype='cancelCalcButton']", row).hide();
                        $("[type='editPositionPanel']", row).show();
                        $("[modetype='deleteCalcButton']", row).show();
                        setCalculatePositionReadOnly(row);
                        setInfoForPositionRows();
                    } else {
                        alert("Ошибка при добавлении расчета");
                    }
                }
            });
        }
    }

    function setCalculatePositionReadOnly(row) {
        var controlTypeNames = ["calculateCatalogNumber", "calculateName", "calculateReplace", "calculatePriceUsd", "calculateSumUsd", "calculatePriceRub", "calculateSumRub", "calculateProvider", "calculateProtectCondition", "calculateComment"];
        var controlTypeNamesLength = controlTypeNames.length;
        for (var i = 0; i < controlTypeNamesLength; i++) {
            var controlTypeName = controlTypeNames[i];
            var control = $("[modetype='" + controlTypeName + "']", row);
            var value = control.val().trim();
            var label = $("[modetype='" + controlTypeName + "ValueLabel']", row);
            label.text(value);
        }
        var providerFact = $("[modetype='calculateProtectFact']", row);
        var providerFactValue = $(":selected", providerFact).text();
        $("[modetype='calculateProtectFactValueLabel']", row).text(providerFactValue);
        $("[modetype='calculateProtectFactValueLabel']", row).attr("val", $(":selected", providerFact).val());
        $("[ type='readOnlyModeView']", row).show();
        $("[ type='editModeView']", row).hide();
    }

    function getCalculatePositionModelForPosition(row) {
        var obj = { isValid: true, message: "", model: null };
        var message = "";
        var calcRow = row;
        var catalogNumber = $("[modetype='calculateCatalogNumber']", calcRow).val().trim();
        if (catalogNumber == "") {
            obj.isValid = false;
            obj.message = "Заполните обязательное поле Каталожный номер";
        }
        var name = $("[modetype='calculateName']", calcRow).val().trim();
        if (name == "") {
            message = "Заполните обязательное поле Наименование";
            if (obj.message.trim() != "") {
                message = "\r" + message;
            }
            obj.isValid = false;
            obj.message += message;
        }
        var priceUsd = $("[modetype='calculatePriceUsd']", calcRow).val().trim();
        priceUsd = priceUsd.replace(",", ".");
        if (priceUsd != "") {
            if (isNaN(priceUsd)) {
                message = "Значение '" + priceUsd + "' в поле Цена за ед. USD не является числом";
                if (obj.message.trim() != "") {
                    message = "\r" + message;
                }
                obj.isValid = false;
                obj.message += message;
            }
        }
        var sumUsd = $("[modetype='calculateSumUsd']", calcRow).val().trim();
        sumUsd = sumUsd.replace(",", ".");
        if (sumUsd != "") {
            if (isNaN(sumUsd)) {
                message = "Значение '" + sumUsd + "' в поле Сумма вход USD не является числом";
                if (obj.message.trim() != "") {
                    message = "\r" + message;
                }
                obj.isValid = false;
                obj.message += message;
            }
        }
        var priceRub = $("[modetype='calculatePriceRub']", calcRow).val().trim();
        priceRub = priceRub.replace(",", ".");
        if (priceRub != "") {
            if (isNaN(priceRub)) {
                message = "Значение '" + priceRub + "' в поле Цена за ед. руб не является числом";
                if (obj.message.trim() != "") {
                    message = "\r" + message;
                }
                obj.isValid = false;
                obj.message += message;
            }
        }
        var sumRub = $("[modetype='calculateSumRub']", calcRow).val().trim();
        sumRub = sumRub.replace(",", ".");
        if (sumRub != "") {
            if (isNaN(sumRub)) {
                message = "Значение '" + sumRub + "' в поле Сумма вход руб не является числом";
                if (obj.message.trim() != "") {
                    message = "\r" + message;
                }
                obj.isValid = false;
                obj.message += message;
            }
        } else {
            message = "Заполните обязательное поле Сумма вход руб";
            if (obj.message.trim() != "") {
                message = "\r" + message;
            }
            obj.isValid = false;
            obj.message += message;
        }
        var protectCondition = $("[modetype='calculateProtectCondition']", calcRow).val().trim();
        var protectFact = $(":selected", $("[modetype='calculateProtectFact']", calcRow)).val().trim();
        if (protectFact == "null") {
            message = "Выберите значение Факт получения защиты";
            if (obj.message.trim() != "") {
                message = "\r" + message;
            } 
            obj.isValid = false;
            obj.message += message;
        } else {
            if (protectCondition == "" && protectFact != "3") {
                message = "Заполните поле Условия защиты";
                if (obj.message.trim() != "") {
                    message = "\r" + message;
                }
                obj.isValid = false;
                obj.message += message;
            }    
        }
        if (obj.isValid) {
            var model = {
                CatalogNumber: catalogNumber,
                Name: name,
                SumRub: Number(sumRub),
                ProtectFact: {Id: Number(protectFact)},
                ProtectCondition: protectCondition,
                Comment: $("[modetype='calculateComment']", calcRow).val().trim(),
                Provider: $("[modetype='calculateProvider']", calcRow).val().trim(),
                Replace: $("[modetype='calculateReplace']", calcRow).val().trim()
            };
            if (priceUsd != "") {
                model.PriceUsd = Number(priceUsd);
            }
            if (sumUsd != "") {
                model.SumUsd = Number(sumUsd);
            }
            if (priceRub != "") {
                model.PriceRub = Number(priceRub);
            }
            obj.model = model;
        }
        return obj;
    }

    function cancelCalculate(e) {
        var button = $(e.currentTarget);
        var row = button.closest("[type='positionCalculate']");
        row.remove();
    }

    function getCalculatePositionElement() {
        var row = $("<tr></tr>");
        var cell = $("<td colspan='3'></td>");
        row.append(cell);
        var calcTable = $("#calculatePositionTable").clone();
        calcTable.show();
        calcTable.removeAttr("id");
        cell.append(calcTable);
        row.attr("type", "positionCalculate");
        return row;
    }

    function getUnitString(unit) {
        var result = "";
        switch (unit) {
            case 1:
                result = "Шт";
                break;
            case 2:
                result = "Упак";
                break;
        }
        return result;
    }
</script>
<div>
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>
                Заявка №<span id="claimId"></span>
                <div id="claimCustomer"></div>
            </h4>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-2">
                    <div class="text-right">Дата начала:</div>
                    <div class="text-right">Срок сдачи:</div>
                    <div class="text-right">Срок подачи КП:</div>
                    <div class="text-right">Менеджер:</div>
                </div>
                <div class="col-sm-2">
                    <div>
                        <strong id="claimTenderStart"></strong>
                    </div>
                    <div>
                        <strong id="claimDeadline"></strong>
                    </div>
                    <div>
                        <strong id="kPDeadline"></strong>
                    </div>
                    <div>
                        <strong id="claimManager"></strong>
                    </div>
                    <div>
                        <small id="managerSubDivision"></small>
                    </div>
                    <div>
                        <small id="managerChief"></small>
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="text-right">Тип сделки:</div>
                    <div class="text-right">Сумма (с НДС):</div>
                </div>
                <div class="col-sm-2">
                    <div>
                        <strong id="claimDealType"></strong>
                    </div>
                    <div>
                        <strong id="claimSum"></strong><strong id="claimSumPostfix">&nbsp;руб.</strong> 
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="text-right">№ конкурса:</div>
                    <div class="text-right">Статус конкурса:</div>
                    <div class="text-right">Ссылка на закупки:</div>
                </div>
                <div class="col-sm-2">
                    <div>
                        <strong id="claimTenderNumber"></strong>
                    </div>
                    <div>
                        <strong id="claimTenderStatus"></strong>
                    </div>
                    <div>
                        <small id="claimTenderUrl"></small>
                    </div>
                </div>
            </div>
            <div>
                <span id="excelPanel">
                    <button id="butGetExcelFile" type='button' class='btn btn-default'><i class="fa fa-download"></i> скачать спецификацию</button>
                    <button id="butUploadExcelFile" type='button' class='btn btn-default' style='margin: 4px;'><i class="fa fa-upload"></i> загрузить расчет спецификации</button>
                    <iframe id="uploadFile" src="/Calc/UploadFileForm?claimId=@claim.Id" style="display: none;"></iframe>
                </span>
                <button type='button' id="butSendOnConfirm" class='btn btn-success'><i class="fa fa-bullhorn"></i> на подтверждение</button>
            </div>
        </div>
    </div>
    <div>
        <h5>Список позиций</h5>
        <h5>
            <span class="label label-default">Всего:<span id="positionCountLabel"></span></span>&nbsp;
            <span class="label label-info">из них рассчитано:<span id="positionCalculateCountLabel"></span></span>
        </h5>
        <table class="table small">
            <tbody id="positionsTable"></tbody>
        </table>
    </div>
    <table>
        <tr id="positionElementTemplate" style="display: none;">
            <td class="min-width">
                <button type="button" modetype='addCalcButton' class="btn btn-primary btn-lg" data-toggle="tooltip" title="добавить расчет"><i class="fa fa-plus"></i> <i class="fa fa-calculator"></i></button>
            </td>
            <td class="min-width"><span modetype="rowNumber"></span></td>
            <td>
                <div class="col-sm-3">
                    <div>
                        <strong type='catalogNumberLabel'></strong>
                    </div>
                    <div>
                        <strong type='valueLabel'></strong>&nbsp;<span type='unitLabel'></span>
                    </div>
                    <div>
                        <strong type='priceLabel'></strong>&nbsp;<span type='priceLabelPostfix'>. за ед. макс.</span>
                    </div>
                    <div>
                        <strong type='sumLabel'></strong>&nbsp;<span type='sumLabelPostfix'>руб. всего макс.</span>
                    </div>
                </div>
                <div class="col-sm-5">
                    <div>
                        <strong>Наименование</strong>
                        <div type='nameLabel'></div>
                    </div>
                    <div>
                        <strong>Замена</strong>
                        <div type='replaceLabel'></div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label>Комментарий</label>
                        <div type="commentLabel"></div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
    <table id="calculatePositionTable" style="width: 100%; display: none;">
        <tr>
            <td>
                <button type='button' modetype='saveCalcButton' class='btn btn-primary btn-lg' data-toggle='tooltip' title='сохранить'><i class='fa fa-save'></i></button><br />
                <button type='button' modetype='cancelCalcButton' class='btn btn-default btn-lg' data-toggle='tooltip' title='отмена'><i class='fa fa-undo'></i></button>
                <div type="editPositionPanel" style="display: none;">
                    <button type='button' modetype='editCalcButton' class='btn btn-link btn-lg' data-toggle='tooltip' title='изменить'><i class='fa fa-edit'></i></button>
                    <div type="editPositionActionPanel" style="display: none;">
                        <button type='button' modetype='editCalcButtonOk' class='btn btn-primary btn-lg' data-toggle='tooltip' title='изменить'><i class='fa fa-save'></i></button><br />
                        <button type='button' modetype='editCalcButtonCancel' class='btn btn-default btn-lg' data-toggle='tooltip' title='отмена'><i class='fa fa-undo'></i></button>
                    </div>
                </div>
            </td>
            <td>
                <div type="editModeView" class="col-sm-3">
                    <input type='text' modetype="calculateCatalogNumber" class="form-control input-sm" placeholder="Каталожный номер" />
                    <input type='text' modetype="calculatePriceUsd" class="form-control input-sm" placeholder="Цена за ед., $" />
                    <input type='text' modetype="calculateSumUsd" class="form-control input-sm" placeholder="Сумма вход, $" />
                    <input type='text' modetype="calculatePriceRub" class="form-control input-sm" placeholder="Цена за ед., руб." />
                    <input type='text' modetype="calculateSumRub" class="form-control input-sm" placeholder="Сумма вход, руб." />
                </div>
                <div type="readOnlyModeView" style="display: none;" class="col-sm-3">
                    <div>
                        <strong modetype="calculateCatalogNumberValueLabel"></strong>
                    </div>
                    <div>
                        <strong modetype="calculatePriceUsdValueLabel"></strong>&nbsp;<span modetype="calculatePriceUsdValueLabelPostix">$ за ед</span>
                    </div>
                    <div>
                        <strong modetype="calculateSumUsdValueLabel"></strong>&nbsp;<span modetype="calculateSumUsdValueLabelPostix">$ всего</span>
                    </div>
                    <div>
                        <strong modetype="calculatePriceRubValueLabel"></strong>&nbsp;<span modetype="calculatePriceRubValueLabelPostix">руб. за ед.</span>
                    </div>
                    <div>
                        <strong modetype="calculateSumRubValueLabel"></strong>&nbsp;руб. всего
                    </div>
                </div>
                <div type="editModeView" class="col-sm-5">
                    <textarea rows="3" modetype="calculateName" class="form-control input-sm" placeholder="Наименование"></textarea>
                    <textarea rows="3" modetype="calculateReplace" class="form-control input-sm" placeholder="Замена"></textarea>
                    <input type='text' modetype="calculateProvider" class="form-control input-sm" placeholder="Поставщик" />
                </div>
                <div type="readOnlyModeView" style="display: none;" class="col-sm-5">
                    <div>
                        <strong>Наименование</strong>
                        <div modetype="calculateNameValueLabel"></div>
                    </div>
                    <div>
                        <strong>Замена</strong>
                        <div modetype="calculateReplaceValueLabel"></div>
                    </div>
                    <div>
                        <strong>Поставщик</strong>
                        <strong modetype="calculateProviderValueLabel"></strong>
                    </div>
                </div>
                <div type="editModeView" class="col-sm-4">
                    <select size="1" modetype="calculateProtectFact" class="form-control input-sm"></select>
                    <textarea rows='2' class="form-control input-sm" modetype="calculateProtectCondition" placeholder="Условия получения защиты"></textarea>
                    <textarea rows='4' class="form-control input-sm" modetype="calculateComment" placeholder="Комментарий"></textarea>
                </div>
                <div type="readOnlyModeView" style="display: none;" class="col-sm-4">
                    <div class="form-group">
                        <label>Факт получения защиты</label><br/>
                        <label modetype="calculateProtectFactValueLabel"></label><br/>
                        <label modetype="calculateProtectConditionValueLabel"></label>
                    </div>
                    <div class="form-group">
                        <label>Комментарий</label>
                        <div modetype="calculateCommentValueLabel"></div>
                    </div>
                </div>
            </td>
            <td>
                <button type='button' modetype='saveCalcButton' class='btn btn-primary btn-lg' data-toggle='tooltip' title='сохранить'><i class='fa fa-save'></i></button><br />
                <button type='button' modetype='cancelCalcButton' class='btn btn-default btn-lg' data-toggle='tooltip' title='отмена'><i class='fa fa-undo'></i></button>
                <button type='button' modetype='deleteCalcButton' class='btn btn-link btn-lg' data-toggle='tooltip' title='удалить' style="display: none;"><i class='fa fa-trash'></i></button>
            </td>
        </tr>
    </table>
</div>
